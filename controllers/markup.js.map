{"version":3,"sources":["controllers/markup.js"],"names":[],"mappings":";;AAAA;;;;AACA;;;;AAEA;;IAAY,Q;;AACZ;;IAAY,K;;AACZ;;;;;;;;;;AAEA,IAAI,SAAS,kBAAQ,MAAR,EAAb;;AAEA,IAAM,iBAAiB,yBAAvB;AACA,IAAM,kBAAkB,uBAAxB;AACA,IAAM,yBAAyB,QAA/B;;AAEA,OAAO,KAAP,GAAe,YAAM;AACnB,SAAO,CAAC,cAAD,CAAP;AACD,CAFD;;AAIA,OAAO,MAAP;AAAA,sDAAgB,iBAAe,IAAf;AAAA,QAQV,MARU,EASV,aATU,EAUV,mBAVU,EAWV,KAXU;AAAA;AAAA;AAAA;AAAA;AAAA,kBACV,mBAAmB,IADT;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAId,gCAAU,SAAV,CAAoB;AAClB,0BAAY,MADM;AAElB,qBAAO;AAFW,aAApB;AAII,kBARU,GAQD,iBAAO,UAAP,CAAkB,cAAlB,EAAkC,KAAlC,CARC;AAAA;AAAA,mBASY,iBAAO,KAAP,CAAa,eAAb,CATZ;;AAAA;AASV,yBATU;AAAA;AAAA,mBAUkB,iBAAO,KAAP,CAAa,sBAAb,EAAqC,IAArC,CAVlB;;AAAA;AAUV,+BAVU;AAWV,iBAXU,GAWF;AACV,qBAAO,MAAM,SAAN,CAAgB,QAAhB,EAA0B,WAA1B,CADG;AAEV,4BAAc,cAFJ;AAGV,4BAAc,OAAO,EAAP,GAAY,OAAO,IAAnB,GAA0B,OAAO,EAHrC;AAIV,6BAAe,eAJL;AAKV,6BAAe,aALL;AAMV,mCAAqB,sBANX;AAOV,mCAAqB;AAPX,aAXE;AAAA,6CAoBP,EAAE,eAAe,SAAS,MAAT,CAAgB,cAAhB,EAAgC,KAAhC,CAAjB,EApBO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA;;AAuBA,OAAO,OAAP,GAAiB,MAAjB","file":"controllers/markup.js","sourcesContent":["import express from 'express';\nimport Highlight from 'highlight.js';\n\nimport * as Renderer from '../core/renderer';\nimport * as Tools from '../helpers/tools';\nimport markup from '../markup';\n\nlet router = express.Router();\n\nconst CODE_TO_MARKUP = 'static const int x = 0;';\nconst LATEX_TO_MARKUP = 'v=v_0+\\\\frac{at^2}{2}';\nconst INLINE_LATEX_TO_MARKUP = 'E=mc^2';\n\nrouter.paths = () => {\n  return ['/markup.html'];\n};\n\nrouter.render = async function(path) {\n  if ('/markup.html' !== path) {\n    return;\n  }\n  Highlight.configure({\n    tabReplace: '    ',\n    useBR: true\n  });\n  let result = markup.markupCode(CODE_TO_MARKUP, 'cpp');\n  let markedUpLatex = await markup.latex(LATEX_TO_MARKUP);\n  let markedUpInlineLatex = await markup.latex(INLINE_LATEX_TO_MARKUP, true);\n  let model = {\n    title: Tools.translate('Markup', 'pageTitle'),\n    codeToMarkup: CODE_TO_MARKUP,\n    markedUpCode: result.op + result.text + result.cl,\n    latexToMarkup: LATEX_TO_MARKUP,\n    markedUpLatex: markedUpLatex,\n    inlineLatexToMarkup: INLINE_LATEX_TO_MARKUP,\n    markedUpInlineLatex: markedUpInlineLatex\n  };\n  return { 'markup.html': Renderer.render('pages/markup', model) };\n};\n\nmodule.exports = router;\n"],"sourceRoot":"/source/"}