{"version":3,"sources":["markup/striked-out.js"],"names":[],"mappings":";;;;;;;sDAKA,iBAAuC,IAAvC;AAAA,QACM,KADN,EAGQ,CAHR;AAAA;AAAA;AAAA;AAAA;AACM,iBADN,GACc,KAAK,IAAL,CAAU,SAAV,CADd;;AAAA;AAAA,iBAES,KAFT;AAAA;AAAA;AAAA;;AAGQ,aAHR,GAGY,MAAM,KAAN,GAAe,MAAM,CAAN,EAAS,MAAT,GAAkB,CAH7C;;AAAA,kBAIQ,IAAI,CAJZ;AAAA;AAAA;AAAA;;AAKM,oBAAQ,KAAK,IAAL,CAAU,SAAV,EAAqB,MAAM,KAAN,GAAc,MAAM,CAAN,EAAS,MAA5C,CAAR;AALN;;AAAA;AAQI,iBAAK,OAAL,CAAa,MAAM,KAAnB,EAA0B,MAAM,CAAN,EAAS,MAAnC,EAA2C,MAA3C,EAAmD,CAAnD;AACA,iBAAK,MAAL,CAAY,CAAZ,EAAe,KAAf;AACA,oBAAQ,KAAK,IAAL,CAAU,SAAV,EAAqB,MAAM,KAAN,GAAc,CAAnC,CAAR;AAVJ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAe,uB;;;;;;sDAcf,kBAA2C,IAA3C;AAAA,QACM,KADN,EAEM,GAFN,EAIQ,KAJR,EAKQ,MALR,EAMQ,CANR;AAAA;AAAA;AAAA;AAAA;AACM,iBADN,GACc,KAAK,IAAL,CAAU,OAAV,CADd;AAEM,eAFN,GAEY,KAAK,IAFjB;;AAGE,mBAAO,KAAP,EAAc;AACR,mBADQ,GACA,MAAM,CAAN,EAAS,MAAT,GAAkB,CADlB;AAER,oBAFQ,GAEC,KAFD;AAGR,eAHQ,GAGJ,MAAM,KAAN,GAAc,CAHV;;AAIZ,qBAAO,QAAQ,CAAf,EAAkB;AAChB,uBAAO,KAAK,CAAL,IAAU,KAAK,IAAL,CAAU,IAAI,CAAJ,CAAV,CAAjB,EAAoC;AAClC,oBAAE,CAAF;AACD;AACD,uBAAO,KAAK,CAAL,IAAU,CAAC,KAAK,IAAL,CAAU,IAAI,CAAJ,CAAV,CAAlB,EAAqC;AACnC,oBAAE,CAAF;AACD;AACD,kBAAE,KAAF;AACD;AACD,mBAAK,OAAL,CAAa,MAAM,KAAnB,EAA0B,MAAM,CAAN,EAAS,MAAnC,EAA2C,MAA3C,EAAmD,CAAnD;AACA,mBAAK,MAAL,CAAY,IAAI,CAAhB,EAAmB,KAAnB;AACA,sBAAQ,KAAK,IAAL,CAAU,OAAV,EAAmB,MAAM,KAAN,GAAe,IAAI,MAAtC,CAAR;AACD;;AAnBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAe,2B;;;;;AAnBf;;;;;;;;AAEA,IAAM,YAAY,UAAlB;AACA,IAAM,UAAU,UAAhB;;kBAsCe,CAAC;AACd,YAAU,MADI;AAEd,eAAa,CAAC,sBAAD,EAAyB,SAAzB,CAFC;AAGd,WAAS;AAHK,CAAD,EAIZ;AACD,YAAU,MADT;AAED,eAAa,CAAC,sBAAD,EAAyB,SAAzB,CAFZ;AAGD,WAAS;AAHR,CAJY,C","file":"markup/striked-out.js","sourcesContent":["import _ from 'underscore';\n\nconst RX_SYMBOL = /(\\^H)+/gi;\nconst RX_WORD = /(\\^W)+/gi;\n\nasync function processStrikedOutShitty(info) {\n  let match = info.find(RX_SYMBOL);\n  while (match) {\n    let s = match.index - (match[0].length / 2);\n    if (s < 0) {\n      match = info.find(RX_SYMBOL, match.index + match[0].length);\n      continue;\n    }\n    info.replace(match.index, match[0].length, '</s>', 0);\n    info.insert(s, '<s>');\n    match = info.find(RX_SYMBOL, match.index + 7);\n  }\n}\n\nasync function processStrikedOutShittyWord(info) {\n  let match = info.find(RX_WORD);\n  let txt = info.text;\n  while (match) {\n    let count = match[0].length / 2;\n    let pcount = count;\n    let s = match.index - 1;\n    while (count > 0) {\n      while (s >= 0 && /\\s/.test(txt[s])) {\n        --s;\n      }\n      while (s >= 0 && !/\\s/.test(txt[s])) {\n        --s;\n      }\n      --count;\n    }\n    info.replace(match.index, match[0].length, '</s>', 0);\n    info.insert(s + 1, '<s>');\n    match = info.find(RX_WORD, match.index + (7 * pcount));\n  }\n}\n\nexport default [{\n  priority: 100500,\n  markupModes: ['EXTENDED_WAKABA_MARK', 'BB_CODE'],\n  process: processStrikedOutShitty\n}, {\n  priority: 100600,\n  markupModes: ['EXTENDED_WAKABA_MARK', 'BB_CODE'],\n  process: processStrikedOutShittyWord\n}];\n"],"sourceRoot":"/source/"}