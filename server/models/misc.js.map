{"version":3,"sources":["models/misc.js"],"names":["base","boards","board","translations","notFoundImageFileNames","codeLangNames","Tools","langNames","createWatchedResource","__dirname","path","require","read","data","JSON","parse","filterNotFoundImageFileNames","fileName","readdirSync","filter","list","fileNames","Captcha","requireWrapper","site","protocol","domain","pathPrefix","locale","dateFormat","timeOffset","twitter","integrationEnabled","vkontakte","appId","ws","transports","styles","STYLES","codeStyles","CODE_STYLES","availableCodeLangs","listLanguages","map","lang","id","name","maxSearchQueryLength","markupModes","title","translate","EXTENDED_WAKABA_MARK","BB_CODE","supportedCaptchaEngines","captchaIDs","captcha","info","sort","x1","x2","priority","localeCompare","boardNames","boardName","addDefault","boardGroups","group","reduce","acc","groupName","push","length","noGroups","hidden","forEach","brd","tr"],"mappings":"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","file":"misc.js","sourcesContent":["import _ from 'underscore';\nimport FS from 'q-io/fs';\nimport FSSync from 'fs';\nimport Highlight from 'highlight.js';\n\nimport Board from '../boards/board';\nimport config from '../helpers/config';\nimport FSWatcher from '../helpers/fs-watcher';\nimport * as Tools from '../helpers/tools';\nimport markup from '../markup';\n\nlet langNames = FSWatcher.createWatchedResource(`${__dirname}/../../misc/lang-names.json`, (path) => {\n  return require(path);\n}, async function(path) {\n  let data = await FS.read(path);\n  langNames = JSON.parse(data);\n}) || {};\n\nfunction filterNotFoundImageFileNames(fileName) {\n  return '.gitignore' !== fileName;\n}\n\nlet notFoundImageFileNames = FSWatcher.createWatchedResource(`${__dirname}/../../public/img/404`, (path) => {\n  return FSSync.readdirSync(path).filter(filterNotFoundImageFileNames);\n}, async function(path) {\n  let fileNames = await FS.list(path);\n  return fileNames.filter(filterNotFoundImageFileNames);\n}) || [];\n\nexport function base() {\n  let Captcha = Tools.requireWrapper(require('../captchas/captcha'));\n  return {\n    site: {\n      protocol: config('site.protocol'),\n      domain: config('site.domain'),\n      pathPrefix: config('site.pathPrefix'),\n      locale: config('site.locale'),\n      dateFormat: config('site.dateFormat'),\n      timeOffset: config('site.timeOffset'),\n      twitter: { integrationEnabled: !!config('site.twitter.integrationEnabled') },\n      vkontakte: {\n        integrationEnabled: !!config('site.vkontakte.integrationEnabled'),\n        appId: config('site.vkontakte.appId')\n      },\n      ws: { transports: config('site.ws.transports') }\n    },\n    styles: Tools.STYLES,\n    codeStyles: Tools.CODE_STYLES,\n    availableCodeLangs: Highlight.listLanguages().map((lang) => {\n      return {\n        id: lang,\n        name: langNames[lang] || lang\n      };\n    }),\n    maxSearchQueryLength: config('site.maxSearchQueryLength'),\n    markupModes: [{\n      name: 'NONE',\n      title: Tools.translate('No markup', 'markupMode')\n    }, {\n      name: markup.EXTENDED_WAKABA_MARK,\n      title: Tools.translate('Extended WakabaMark only', 'markupMode')\n    }, {\n      name: markup.BB_CODE,\n      title: Tools.translate('bbCode only', 'markupMode')\n    }, {\n      name: (markup.EXTENDED_WAKABA_MARK + ',' + markup.BB_CODE),\n      title: Tools.translate('Extended WakabaMark and bbCode', 'markupMode')\n    }],\n    supportedCaptchaEngines: Captcha.captchaIDs().filter((id) => {\n      return 'node-captcha-noscript' !== id;\n    }).map(id => Captcha.captcha(id).info())\n  };\n}\n\nfunction sort(x1, x2) {\n  if (!x1.priority && !x2.priority) {\n    return x1.name.localeCompare(x2.name);\n  }\n  return (x1.priority || 0) - (x2.priority || 0);\n}\n\nexport function boards() {\n  let boards = Board.boardNames().map(boardName => Board.board(boardName).info());\n  let addDefault = false;\n  let boardGroups = _(config('boardGroups', {})).map((group, name) => {\n    group.name = name;\n    group.boards = boards.reduce((acc, board) => {\n      if (!board.groupName) {\n        addDefault = true;\n      } else if (name === board.groupName) {\n        acc.push(board);\n      }\n      return acc;\n    }, []);\n    return group;\n  });\n  if (addDefault || boardGroups.length < 1) {\n    let noGroups = (boardGroups.length < 1);\n    boardGroups.push({\n      name: '',\n      boards: boards.filter((board) => { return noGroups || (!board.hidden && !board.groupName); })\n    });\n  }\n  boardGroups = boardGroups.filter((group) => { return group.boards.length > 0; });\n  boardGroups.sort(sort);\n  boardGroups.forEach((group) => { group.boards.sort(sort); });\n  return {\n    boards: boards,\n    boardGroups: boardGroups\n  };\n}\n\nexport function board(brd) {\n  if (typeof brd === 'string') {\n    brd = Board.board(brd);\n  }\n  return brd ? { board: brd.info() } : null;\n}\n\nexport function translations() {\n  return { tr: Tools.translate.translations };\n}\n\nexport function notFoundImageFileNames() {\n  return notFoundImageFileNames;\n}\n\nexport function codeLangNames() {\n  return langNames;\n}\n"]}