{"version":3,"sources":["markup/links.js"],"names":["href","defaultHTML","request","method","url","timeout","response","status","Error","Tools","translate","body","read","data","JSON","parse","toString","html","error","stack","getTwitterEmbeddedHtml","match","RX_YOUTUBE_VIDEO_LINK_1","videoId","RX_YOUTUBE_VIDEO_LINK_2","apiKey","items","length","info","snippet","id","start","youtubeVideoStartTime","Renderer","render","getYoutubeEmbeddedHtml","RX_COUB_VIDEO_LINK","videoTitle","title","authorName","author_name","thumbnail","thumbnail_url","width","thumbnail_width","height","thumbnail_height","getCoubEmbeddedHtml","hrefIsText","text","matchs","_1","options","type","HTML_SKIP","isIn","index","lastIndexOf","toHTML","RX_TWITTER_POST_LINK","test","RX_VOCAROO_AUDIO_LINK","getVocarooEmbeddedHtml","convertLinkCommon","_2","boardName","postNumber","option","testPostNumber","escaped","split","join","deletedPost","PostsModel","getPost","post","referencedPosts","key","threadNumber","createdAt","now","suffix","archived","result","convertPostLink","EXTERNAL_LINK_REGEXP_PATTERN","schema","ip","hostname","port","path","RX_VK_POST_LINK_PATTERN","RX_VK_POST_LINK","RegExp","transformRootZones","zones","reduce","acc","zone","rootZones","createWatchedResource","__dirname","require","time","query","t","s","audioId","err","convertVkontaktePost","_3","convertProtocol","checkExternalLink","indexOf","hasOwnProperty","checkPostLink","boardNames","priority","markupModes","convert","op","cl","enabled","bind","check"],"mappings":";;;;;;;wDA2EA,kBAAsCA,IAAtC,EAA4CC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEyB,eAAKC,OAAL,CAAa;AAChCC,sBAAQ,KADwB;AAEhCC,2EAA2DJ,IAF3B;AAGhCK,uBAAS,sBAAO,2BAAP;AAHuB,aAAb,CAFzB;;AAAA;AAEQC,oBAFR;;AAAA,kBAOQA,SAASC,MAAT,KAAoB,GAP5B;AAAA;AAAA;AAAA;;AAAA,kBAQY,IAAIC,KAAJ,CAAUC,MAAMC,SAAN,CAAgB,qCAAhB,CAAV,CARZ;;AAAA;AAAA;AAAA,mBAUqBJ,SAASK,IAAT,CAAcC,IAAd,EAVrB;;AAAA;AAUQC,gBAVR;AAAA,8CAWWC,KAAKC,KAAL,CAAWF,KAAKG,QAAL,EAAX,EAA4BC,IAXvC;;AAAA;AAAA;AAAA;;AAaI,6BAAOC,KAAP,CAAa,aAAIC,KAAJ,gBAAb;AAbJ,8CAcWlB,WAdX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAemB,sB;;;;;;wDAkBf,kBAAsCpB,IAAtC,EAA4CC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AACMoB,iBADN,GACcrB,KAAKqB,KAAL,CAAWC,uBAAX,CADd;AAEMC,mBAFN,GAEgBF,QAAQA,MAAM,CAAN,CAAR,GAAmB,IAFnC;;AAGE,gBAAI,CAACE,OAAL,EAAc;AACZF,sBAAQrB,KAAKqB,KAAL,CAAWG,uBAAX,CAAR;AACAD,wBAAUF,QAAQA,MAAM,CAAN,CAAR,GAAmB,IAA7B;AACD;AACGI,kBAPN,GAOe,sBAAO,sBAAP,CAPf;;AAAA,kBAQM,CAACF,OAAD,IAAY,CAACE,MARnB;AAAA;AAAA;AAAA;;AAAA,8CASWxB,WATX;;AAAA;AAAA;AAAA;AAAA,mBAYyB,eAAKC,OAAL,CAAa;AAChCC,sBAAQ,KADwB;AAEhCC,wEAAwDmB,OAAxD,aAAuEE,MAAvE,kBAFgC;AAGhCpB,uBAAS,sBAAO,2BAAP;AAHuB,aAAb,CAZzB;;AAAA;AAYQC,oBAZR;;AAAA,kBAiBQA,SAASC,MAAT,KAAoB,GAjB5B;AAAA;AAAA;AAAA;;AAAA,kBAkBY,IAAIC,KAAJ,CAAUC,MAAMC,SAAN,CAAgB,qCAAhB,CAAV,CAlBZ;;AAAA;AAAA;AAAA,mBAoBqBJ,SAASK,IAAT,CAAcC,IAAd,EApBrB;;AAAA;AAoBQC,gBApBR;;AAqBIP,uBAAWQ,KAAKC,KAAL,CAAWF,KAAKG,QAAL,EAAX,CAAX;;AArBJ,kBAsBQ,CAACV,SAASoB,KAAV,IAAmBpB,SAASoB,KAAT,CAAeC,MAAf,GAAwB,CAtBnD;AAAA;AAAA;AAAA;;AAAA,kBAuBY,IAAInB,KAAJ,CAAUC,MAAMC,SAAN,CAAgB,kCAAhB,CAAV,CAvBZ;;AAAA;AAyBQkB,gBAzBR,GAyBetB,SAASoB,KAAT,CAAe,CAAf,EAAkBG,OAzBjC;;AA0BID,iBAAKE,EAAL,GAAUP,OAAV;AACAK,iBAAK5B,IAAL,GAAYA,IAAZ;AACA4B,iBAAKG,KAAL,GAAaC,sBAAsBhC,IAAtB,CAAb;AACIiB,gBA7BR,GA6BegB,SAASC,MAAT,CAAgB,yBAAhB,EAA2C,EAAEN,MAAMA,IAAR,EAA3C,CA7Bf;;AAAA,gBA8BSX,IA9BT;AAAA;AAAA;AAAA;;AAAA,kBA+BY,IAAIT,KAAJ,CAAUC,MAAMC,SAAN,CAAgB,qCAAhB,CAAV,CA/BZ;;AAAA;AAAA,8CAiCWO,IAjCX;;AAAA;AAAA;AAAA;;AAmCI,6BAAOC,KAAP,CAAa,aAAIC,KAAJ,gBAAb;AAnCJ,8CAoCWlB,WApCX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAekC,sB;;;;;;wDAwCf,kBAAmCnC,IAAnC,EAAyCC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AACMoB,iBADN,GACcrB,KAAKqB,KAAL,CAAWe,kBAAX,CADd;AAEMb,mBAFN,GAEgBF,QAAQA,MAAM,CAAN,CAAR,GAAmB,IAFnC;;AAAA,gBAGOE,OAHP;AAAA;AAAA;AAAA;;AAAA,8CAIWtB,WAJX;;AAAA;AAAA;AAAA;AAAA,mBAOyB,eAAKC,OAAL,CAAa;AAChCC,sBAAQ,KADwB;AAEhCC,kFAAkEmB,OAFlC;AAGhClB,uBAAS,sBAAO,2BAAP;AAHuB,aAAb,CAPzB;;AAAA;AAOQC,oBAPR;;AAAA,kBAYQA,SAASC,MAAT,KAAoB,GAZ5B;AAAA;AAAA;AAAA;;AAAA,kBAaY,IAAIC,KAAJ,CAAUC,MAAMC,SAAN,CAAgB,kCAAhB,CAAV,CAbZ;;AAAA;AAAA;AAAA,mBAeqBJ,SAASK,IAAT,CAAcC,IAAd,EAfrB;;AAAA;AAeQC,gBAfR;;AAgBIP,uBAAWQ,KAAKC,KAAL,CAAWF,KAAKG,QAAL,EAAX,CAAX;;AAhBJ,gBAiBSV,QAjBT;AAAA;AAAA;AAAA;;AAAA,kBAkBY,IAAIE,KAAJ,CAAUC,MAAMC,SAAN,CAAgB,+BAAhB,CAAV,CAlBZ;;AAAA;AAoBQkB,gBApBR,GAoBe;AACT5B,oBAAMA,IADG;AAETqC,0BAAY/B,SAASgC,KAFZ;AAGTC,0BAAYjC,SAASkC,WAHZ;AAITC,yBAAWnC,SAASoC,aAAT,GAAyB;AAClCtC,qBAAKE,SAASoC,aADoB;AAElCC,uBAAOrC,SAASsC,eAFkB;AAGlCC,wBAAQvC,SAASwC;AAHiB,eAAzB,GAIP,IARK;AASThB,kBAAIP;AATK,aApBf;AA+BQN,gBA/BR,GA+BegB,SAASC,MAAT,CAAgB,sBAAhB,EAAwC,EAAEN,MAAMA,IAAR,EAAxC,CA/Bf;;AAAA,gBAgCSX,IAhCT;AAAA;AAAA;AAAA;;AAAA,kBAiCY,IAAIT,KAAJ,CAAUC,MAAMC,SAAN,CAAgB,kCAAhB,CAAV,CAjCZ;;AAAA;AAAA,8CAmCWO,IAnCX;;AAAA;AAAA;AAAA;;AAqCI,6BAAOC,KAAP,CAAa,aAAIC,KAAJ,gBAAb;AArCJ,8CAsCWlB,WAtCX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAe8C,mB;;;;;;wDAiEf,kBAAiCC,UAAjC,EAA6CpB,IAA7C,EAAmDqB,IAAnD,EAAyDC,MAAzD,EAAiEC,EAAjE,EAAqEC,OAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACOH,IADP;AAAA;AAAA;AAAA;;AAAA,8CAEW,EAFX;;AAAA;AAIEG,oBAAQC,IAAR,GAAe,4BAAkBC,SAAjC;;AAJF,iBAKM1B,KAAK2B,IAAL,CAAUL,OAAOM,KAAjB,EAAwBN,OAAO,CAAP,EAAUvB,MAAlC,EAA0C,4BAAkB2B,SAA5D,CALN;AAAA;AAAA;AAAA;;AAAA,8CAMWL,IANX;;AAAA;AAQE,gBAAI,CAACD,UAAL,EAAiB;AACfC,qBAAOC,OAAO,CAAP,CAAP;AACD;AACGlD,gBAXN,GAWaiD,IAXb;;AAYE,gBAAIjD,KAAKyD,WAAL,CAAiB,MAAjB,EAAyB,CAAzB,KAA+BzD,KAAKyD,WAAL,CAAiB,KAAjB,EAAwB,CAAxB,CAAnC,EAA+D;AAC7DzD,iCAAiBA,IAAjB;AACD;AACGC,uBAfN,kBAegCD,IAfhC,WAeyCiC,SAASyB,MAAT,CAAgBT,IAAhB,CAfzC;;AAAA,kBAgBM,sBAAO,iCAAP,KAA6CU,qBAAqBC,IAArB,CAA0B5D,IAA1B,CAhBnD;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAiBiBoB,uBAAuBpB,IAAvB,EAA6BC,WAA7B,CAjBjB;;AAAA;AAAA;;AAAA;AAAA,kBAmBMqB,wBAAwBsC,IAAxB,CAA6B5D,IAA7B,KAAsCwB,wBAAwBoC,IAAxB,CAA6B5D,IAA7B,CAnB5C;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAoBiBmC,uBAAuBnC,IAAvB,EAA6BC,WAA7B,CApBjB;;AAAA;AAAA;;AAAA;AAAA,iBAsBMmC,mBAAmBwB,IAAnB,CAAwB5D,IAAxB,CAtBN;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAuBiB+C,oBAAoB/C,IAApB,EAA0BC,WAA1B,CAvBjB;;AAAA;AAAA;;AAAA;AAAA,iBAyBM4D,sBAAsBD,IAAtB,CAA2B5D,IAA3B,CAzBN;AAAA;AAAA;AAAA;;AAAA,8CA0BW8D,uBAAuB9D,IAAvB,EAA6BC,WAA7B,CA1BX;;AAAA;AAAA,8CA4BSA,WA5BT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAe8D,iB;;;;;;wDAoCf,kBAA+BnC,IAA/B,EAAqCuB,EAArC,EAAyCD,MAAzC,EAAiDc,EAAjD,EAAqDZ,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AACEA,oBAAQC,IAAR,GAAe,4BAAkBC,SAAjC;AACIW,qBAFN,GAEmBf,OAAOvB,MAAP,GAAgB,CAAjB,GAAsBuB,OAAO,CAAP,CAAtB,GAAkCtB,KAAKqC,SAFzD;AAGMC,sBAHN,GAGmBzD,MAAM0D,MAAN,CAAajB,OAAQA,OAAOvB,MAAP,GAAgB,CAAjB,GAAsB,CAAtB,GAA0B,CAAjC,CAAb,EAAkD,QAAlD,EAA4D,CAA5D,EAA+D,EAAEiC,MAAMnD,MAAM2D,cAAd,EAA/D,CAHnB;AAIMC,mBAJN,GAIgBnB,OAAO,CAAP,EAAUoB,KAAV,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B,MAA1B,CAJhB;;AAAA,kBAKM,CAACL,UAAD,IAAeA,eAAetC,KAAK4C,WALzC;AAAA;AAAA;AAAA;;AAAA,8CAMWH,OANX;;AAAA;AAAA;AAAA,mBAQmBI,WAAWC,OAAX,CAAmBT,SAAnB,EAA8BC,UAA9B,CARnB;;AAAA;AAQMS,gBARN;;AAAA,gBASOA,IATP;AAAA;AAAA;AAAA;;AAAA,8CAUWN,OAVX;;AAAA;AAYE,gBAAIzC,KAAKgD,eAAT,EAA0B;AACpBC,iBADoB,GACXZ,SADW,SACEC,UADF;;AAExB,kBAAI,CAACtC,KAAKgD,eAAL,CAAqBC,GAArB,CAAL,EAAgC;AAC9BjD,qBAAKgD,eAAL,CAAqBC,GAArB,IAA4B;AAC1BZ,6BAAWA,SADe;AAE1BC,8BAAYA,UAFc;AAG1BY,gCAAcH,KAAKG,YAHO;AAI1BC,6BAAWtE,MAAMuE,GAAN;AAJe,iBAA5B;AAMD;AACF;AACGC,kBAvBN,GAuBeN,KAAKO,QAAL,GAAgB,MAAhB,GAAyB,KAvBxC;AAwBMC,kBAxBN,mBAwB4B,sBAAO,iBAAP,CAxB5B,GAwBwDlB,SAxBxD,SAwBqEgB,MAxBrE,SAwB+EN,KAAKG,YAxBpF;;AAyBE,gBAAIZ,eAAeS,KAAKG,YAAxB,EAAsC;AACpCK,mCAAmBjB,UAAnB;AACD;AACDiB,sBAAU,uBAAV;AACA,gBAAIjB,eAAeS,KAAKG,YAAxB,EAAsC;AACpCK,wBAAU,eAAV;AACD;AACDA,gDAAgClB,SAAhC,8BAAgEC,UAAhE;AACAiB,iDAAkCR,KAAKG,YAAvC,WAAwDT,OAAxD;AAjCF,8CAkCSc,MAlCT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,e;;;;;AA1Of;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;IAAYnD,Q;;AACZ;;;;AACA;;;;AACA;;;;AACA;;IAAYxB,K;;AACZ;;IAAYgE,U;;;;;;;;AAEZ,IAAMY,+BAAgC,YAAM;AAC1C,MAAIC,SAAS,0BAAb;AACA,MAAIC,KAAK,6DACL,kDADJ;AAEA,MAAIC,WAAW,6CAAf;AACA,MAAIC,OAAO,OAAX;AACA,MAAIC,OAAO,qEAAX;AACA,eAAWJ,MAAX,WAAuBE,QAAvB,SAAmCD,EAAnC,UAA0CE,IAA1C,UAAmDC,IAAnD;AACD,CARoC,EAArC;AASA,IAAMC,0BAA0B,kFAC5B,8FAD4B,GAE5B,4GAF4B,GAG5B,oGAH4B,GAI5B,gHAJ4B,GAK5B,4GAL4B,GAM5B,0EAN4B,GAO5B,qEAPJ;AAQA,IAAMC,kBAAkB,IAAIC,MAAJ,CAAWF,uBAAX,EAAoC,GAApC,CAAxB;AACA,IAAMhC,uBAAuB,oDAA7B;AACA,IAAMrC,0BAA0B,6DAAhC;AACA,IAAME,0BAA0B,wCAAhC;AACA,IAAMY,qBAAqB,6CAA3B;AACA,IAAMyB,wBAAwB,8CAA9B;;AAEA,SAASiC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,SAAOA,MAAMC,MAAN,CAAa,UAACC,GAAD,EAAMC,IAAN,EAAe;AACjCD,QAAIC,IAAJ,IAAY,IAAZ;AACA,WAAOD,GAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID;;AAED,IAAIE,YAAY,oBAAUC,qBAAV,CAAmCC,SAAnC,kCAA2E,UAACX,IAAD,EAAU;AACnG,SAAOI,mBAAmBQ,QAAQZ,IAAR,CAAnB,CAAP;AACD,CAFe;AAAA,uDAEb,iBAAeA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,6CACMI,mBAAmBQ,QAAQZ,IAAR,CAAnB,CADN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFa;;AAAA;AAAA;AAAA;AAAA,QAIV,EAJN;;AAMA,SAAS1D,qBAAT,CAA+BhC,IAA/B,EAAqC;AACnC,MAAI,CAACA,IAAL,EAAW;AACT,WAAO,IAAP;AACD;AACD,MAAIuG,OAAO,cAAIxF,KAAJ,CAAUf,IAAV,EAAgB,IAAhB,EAAsBwG,KAAtB,CAA4BC,CAAvC;AACA,MAAI,CAACF,IAAL,EAAW;AACT,WAAO,IAAP;AACD;AACD,MAAIlF,QAAQkF,KAAKlF,KAAL,CAAW,6BAAX,CAAZ;AACA,MAAI,CAACA,KAAL,EAAY;AACV,WAAO,IAAP;AACD;AACD,MAAIU,QAAQ,CAAZ;AACA,MAAIV,MAAM,CAAN,CAAJ,EAAc;AACZU,aAAS,CAACV,MAAM,CAAN,CAAD,GAAY,IAArB,CADY,CACe;AAC5B;AACD,MAAIA,MAAM,CAAN,CAAJ,EAAc;AACZU,aAAS,CAACV,MAAM,CAAN,CAAD,GAAY,EAArB,CADY,CACa;AAC1B;AACD,MAAIA,MAAM,CAAN,CAAJ,EAAc;AACZU,aAAS,CAACV,MAAM,CAAN,CAAV,CADY,CACQ;AACrB;AACD,SAAOZ,MAAM0D,MAAN,CAAapC,KAAb,EAAoB,QAApB,EAA8B,IAA9B,EAAoC,EAAE6B,MAAM,cAAC8C,CAAD,EAAO;AAAE,aAAOA,IAAI,CAAX;AAAe,KAAhC,EAApC,CAAP;AACD;;AAsGD,SAAS5C,sBAAT,CAAgC9D,IAAhC,EAAsCC,WAAtC,EAAmD;AACjD,MAAIoB,QAAQrB,KAAKqB,KAAL,CAAWwC,qBAAX,CAAZ;AACA,MAAI8C,UAAUtF,QAAQA,MAAM,CAAN,CAAR,GAAmB,IAAjC;AACA,MAAI,CAACsF,OAAL,EAAc;AACZ,WAAO1G,WAAP;AACD;AACD,MAAI;AACF,QAAIgB,OAAOgB,SAASC,MAAT,CAAgB,yBAAhB,EAA2C,EAAEN,MAAM,EAAEE,IAAI6E,OAAN,EAAR,EAA3C,CAAX;AACA,QAAI,CAAC1F,IAAL,EAAW;AACT,YAAM,IAAIT,KAAJ,CAAUC,MAAMC,SAAN,CAAgB,mDAAhB,CAAV,CAAN;AACD;AACD,WAAOO,IAAP;AACD,GAND,CAME,OAAO2F,GAAP,EAAY;AACZ,qBAAO1F,KAAP,CAAa0F,IAAIzF,KAAJ,IAAayF,GAA1B;AACA,WAAO3G,WAAP;AACD;AACF;;AAED,SAAS4G,oBAAT,CAA8B1D,EAA9B,EAAkCa,EAAlC,EAAsCd,MAAtC,EAA8C4D,EAA9C,EAAkD1D,OAAlD,EAA2D;AACzDA,UAAQC,IAAR,GAAe,4BAAkBC,SAAjC;AACA,kDAA4CJ,OAAO,CAAP,CAA5C;AACD;;AAiCD,SAAS6D,eAAT,CAAyB5D,EAAzB,EAA6Ba,EAA7B,EAAiCd,MAAjC,EAAyC4D,EAAzC,EAA6C1D,OAA7C,EAAsD;AACpDA,UAAQC,IAAR,GAAe,4BAAkBC,SAAjC;AACA,wBAAmBJ,OAAO,CAAP,CAAnB,WAAiCjB,SAASyB,MAAT,CAAgBR,OAAO,CAAP,CAAhB,CAAjC;AACD;;AAuCD,SAAS8D,iBAAT,CAA2BpF,IAA3B,EAAiCsB,MAAjC,EAAyC;AACvC,MAAIA,OAAOM,KAAP,GAAe,CAAf,IAAoB,CAAC,GAAD,EAAM,GAAN,EAAWyD,OAAX,CAAmBrF,KAAKqB,IAAL,CAAUC,OAAOM,KAAP,GAAe,CAAzB,CAAnB,KAAmD,CAA3E,EAA8E;AAC5E,WAAO,KAAP;AACD;AACD,SAAO,wBAAuBI,IAAvB,CAA4BV,OAAO,CAAP,CAA5B,KAA0CiD,UAAUe,cAAV,CAAyBhE,OAAO,CAAP,CAAzB;AAAjD;AACD;;AAED,SAASiE,aAAT,CAAuBhE,EAAvB,EAA2BD,MAA3B,EAAmC;AACjC,SAAO,gBAAMkE,UAAN,GAAmBH,OAAnB,CAA2B/D,OAAO,CAAP,CAA3B,KAAyC,CAAhD;AACD;;kBAEc,CAAC;AACdmE,YAAU,IADI;AAEdC,eAAa,CAAC,sBAAD,EAAyB,SAAzB,CAFC;AAGdC,WAASV,oBAHK;AAIdW,MAAI5B,eAJU;AAKd6B,MAAI,IALU;AAMdC,WAAS,mBAAM;AAAE,WAAO,sBAAO,mCAAP,CAAP;AAAqD;AANxD,CAAD,EAOZ;AACDL,YAAU,IADT;AAEDC,eAAa,CAAC,sBAAD,EAAyB,SAAzB,CAFZ;AAGDC,WAASxD,kBAAkB4D,IAAlB,CAAuB,IAAvB,EAA6B,IAA7B,CAHR;AAIDH,MAAI,OAJH;AAKDC,MAAI;AALH,CAPY,EAaZ;AACDJ,YAAU,IADT;AAEDC,eAAa,CAAC,sBAAD,EAAyB,SAAzB,CAFZ;AAGDC,WAASxD,kBAAkB4D,IAAlB,CAAuB,IAAvB,EAA6B,KAA7B,CAHR;AAIDH,MAAI,sBAAYnC,4BAAZ,EAA0C,IAA1C,CAJH;AAKDoC,MAAI,IALH;AAMDG,SAAOZ;AANN,CAbY,EAoBZ;AACDK,YAAU,IADT;AAEDC,eAAa,CAAC,sBAAD,EAAyB,SAAzB,CAFZ;AAGDC,WAASR,eAHR;AAIDS,MAAI,4BAJH;AAKDC,MAAI;AALH,CApBY,EA0BZ;AACDJ,YAAU,IADT;AAEDC,eAAa,CAAC,sBAAD,EAAyB,SAAzB,CAFZ;AAGDC,WAASnC,eAHR;AAIDoC,MAAI,mBAJH;AAKDC,MAAI;AALH,CA1BY,EAgCZ;AACDJ,YAAU,IADT;AAEDC,eAAa,CAAC,sBAAD,EAAyB,SAAzB,CAFZ;AAGDC,WAASnC,eAHR;AAIDoC,MAAI,IAAI3B,MAAJ,8BAA0C,IAA1C,CAJH;AAKD4B,MAAI,IALH;AAMDG,SAAOT;AANN,CAhCY,C","file":"links.js","sourcesContent":["import HTTP from 'q-io/http';\nimport URL from 'url';\nimport XRegExp from 'xregexp';\n\nimport ProcessingContext from './processing-context';\nimport Board from '../boards/board';\nimport * as Renderer from '../core/renderer';\nimport config from '../helpers/config';\nimport FSWatcher from '../helpers/fs-watcher';\nimport Logger from '../helpers/logger';\nimport * as Tools from '../helpers/tools';\nimport * as PostsModel from '../models/posts';\n\nconst EXTERNAL_LINK_REGEXP_PATTERN = (() => {\n  let schema = 'https?:\\\\/\\\\/|ftp:\\\\/\\\\/';\n  let ip = '(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}'\n    + '(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])';\n  let hostname = '([\\\\w\\\\p{L}\\\\.\\\\-]+)\\\\.([\\\\p{L}]{2,17}\\\\.?)';\n  let port = ':\\\\d+';\n  let path = '(\\\\/[\\\\w\\\\p{L}\\\\.\\\\-\\\\!\\\\?\\\\=\\\\+#~&%:;\\'\\\"\\\\,\\\\(\\\\)\\\\[\\\\]«»]*)*\\\\/?';\n  return `(${schema})?(${hostname}|${ip})(${port})?${path}`;\n})();\nconst RX_VK_POST_LINK_PATTERN = '<div id\\\\=\"vk_post_\\\\-?\\\\d+_\\\\d+\"><\\\\/div><script type=\"text\\\\/javascript\">  '\n  + '\\\\(function\\\\(d\\\\, s\\\\, id\\\\) \\\\{ var js\\\\, fjs \\\\= d\\\\.getElementsByTagName\\\\(s\\\\)\\\\[0\\\\]; '\n  + 'if \\\\(d\\\\.getElementById\\\\(id\\\\)\\\\) return; js \\\\= d\\\\.createElement\\\\(s\\\\); js\\\\.id \\\\= id; js\\\\.src \\\\= '\n  + '\"\\\\/\\\\/vk\\\\.com\\\\/js\\\\/api\\\\/openapi\\\\.js\\\\?121\"; fjs\\\\.parentNode\\\\.insertBefore\\\\(js\\\\, fjs\\\\); '\n  + '\\\\}\\\\(document\\\\, \\'script\\'\\\\, \\'vk_openapi_js\\'\\\\)\\\\);  \\\\(function\\\\(\\\\) \\\\{    if \\\\(\\\\!window\\\\.VK \\\\|\\\\|'\n  + ' \\\\!VK\\\\.Widgets \\\\|\\\\| \\\\!VK\\\\.Widgets\\\\.Post \\\\|\\\\| \\\\!VK\\\\.Widgets\\\\.Post\\\\(\"vk_post_\\\\-?\\\\d+_\\\\d+\"\\\\, '\n  + '(\\\\-?\\\\d+)\\, (\\\\d+)\\, \\'([a-zA-Z0-9_\\-]+)\\'\\\\, \\\\{width\\\\: 500\\\\}\\\\)\\\\) '\n  + 'setTimeout\\\\(arguments\\\\.callee\\\\, 50\\\\);  \\\\}\\\\(\\\\)\\\\);<\\\\/script>';\nconst RX_VK_POST_LINK = new RegExp(RX_VK_POST_LINK_PATTERN, 'g');\nconst RX_TWITTER_POST_LINK = /^https?\\:\\/\\/twitter\\.com\\/[^\\/]+\\/status\\/\\d+\\/?$/;\nconst RX_YOUTUBE_VIDEO_LINK_1 = /^https?\\:\\/\\/(m\\.|www\\.)?youtube\\.com\\/.*v\\=([^\\/#\\?&]+).*$/;\nconst RX_YOUTUBE_VIDEO_LINK_2 = /^https?\\:\\/\\/youtu\\.be\\/([^\\/#\\?]+).*$/;\nconst RX_COUB_VIDEO_LINK = /^https?:\\/\\/coub\\.com\\/view\\/([^\\/\\?#]+).*$/;\nconst RX_VOCAROO_AUDIO_LINK = /^https?:\\/\\/vocaroo\\.com\\/i\\/([a-zA-Z0-9]+)$/;\n\nfunction transformRootZones(zones) {\n  return zones.reduce((acc, zone) => {\n    acc[zone] = true;\n    return acc;\n  }, {});\n}\n\nlet rootZones = FSWatcher.createWatchedResource(`${__dirname}/../../misc/root-zones.json`, (path) => {\n  return transformRootZones(require(path));\n}, async function(path) {\n  return transformRootZones(require(path));\n}) || {};\n\nfunction youtubeVideoStartTime(href) {\n  if (!href) {\n    return null;\n  }\n  let time = URL.parse(href, true).query.t;\n  if (!time) {\n    return null;\n  }\n  let match = time.match(/((\\d+)h)?((\\d+)m)?((\\d+)s)?/);\n  if (!match) {\n    return null;\n  }\n  let start = 0;\n  if (match[2]) {\n    start += +match[2] * 3600; //NOTE: Hours\n  }\n  if (match[4]) {\n    start += +match[4] * 60; //NOTE: Minutes\n  }\n  if (match[6]) {\n    start += +match[6]; //NOTE: Seconds\n  }\n  return Tools.option(start, 'number', null, { test: (s) => { return s > 0; } });\n}\n\nasync function getTwitterEmbeddedHtml(href, defaultHTML) {\n  try {\n    let response = await HTTP.request({\n      method: 'GET',\n      url: `https://api.twitter.com/1/statuses/oembed.json?url=${href}`,\n      timeout: config('system.httpRequestTimeout')\n    });\n    if (response.status !== 200) {\n      throw new Error(Tools.translate('Failed to get Twitter embedded HTML'));\n    }\n    let data = await response.body.read();\n    return JSON.parse(data.toString()).html;\n  } catch (err) {\n    Logger.error(err.stack || err);\n    return defaultHTML;\n  }\n}\n\nasync function getYoutubeEmbeddedHtml(href, defaultHTML) {\n  let match = href.match(RX_YOUTUBE_VIDEO_LINK_1);\n  let videoId = match ? match[2] : null;\n  if (!videoId) {\n    match = href.match(RX_YOUTUBE_VIDEO_LINK_2);\n    videoId = match ? match[1] : null;\n  }\n  let apiKey = config('server.youtubeApiKey');\n  if (!videoId || !apiKey) {\n    return defaultHTML;\n  }\n  try {\n    let response = await HTTP.request({\n      method: 'GET',\n      url: `https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=${apiKey}&part=snippet`,\n      timeout: config('system.httpRequestTimeout')\n    });\n    if (response.status !== 200) {\n      throw new Error(Tools.translate('Failed to get YouTube embedded HTML'));\n    }\n    let data = await response.body.read();\n    response = JSON.parse(data.toString());\n    if (!response.items || response.items.length < 1) {\n      throw new Error(Tools.translate('Failed to get YouTube video info'));\n    }\n    let info = response.items[0].snippet;\n    info.id = videoId;\n    info.href = href;\n    info.start = youtubeVideoStartTime(href);\n    let html = Renderer.render('markup/youtubeVideoLink', { info: info });\n    if (!html) {\n      throw new Error(Tools.translate('Failed to create YouTube video link'));\n    }\n    return html;\n  } catch (err) {\n    Logger.error(err.stack || err);\n    return defaultHTML;\n  }\n}\n\nasync function getCoubEmbeddedHtml(href, defaultHTML) {\n  let match = href.match(RX_COUB_VIDEO_LINK);\n  let videoId = match ? match[1] : null;\n  if (!videoId) {\n    return defaultHTML;\n  }\n  try {\n    let response = await HTTP.request({\n      method: 'GET',\n      url: `https://coub.com/api/oembed.json?url=http://coub.com/view/${videoId}`,\n      timeout: config('system.httpRequestTimeout')\n    });\n    if (response.status !== 200) {\n      throw new Error(Tools.translate('Failed to get Coub embedded HTML'));\n    }\n    let data = await response.body.read();\n    response = JSON.parse(data.toString());\n    if (!response) {\n      throw new Error(Tools.translate('Failed to get Coub video info'));\n    }\n    let info = {\n      href: href,\n      videoTitle: response.title,\n      authorName: response.author_name,\n      thumbnail: response.thumbnail_url ? {\n        url: response.thumbnail_url,\n        width: response.thumbnail_width,\n        height: response.thumbnail_height\n      } : null,\n      id: videoId\n    };\n    let html = Renderer.render('markup/coubVideoLink', { info: info });\n    if (!html) {\n      throw new Error(Tools.translate('Failed to create Coub video link'));\n    }\n    return html;\n  } catch (err) {\n    Logger.error(err.stack || err);\n    return defaultHTML;\n  }\n}\n\nfunction getVocarooEmbeddedHtml(href, defaultHTML) {\n  let match = href.match(RX_VOCAROO_AUDIO_LINK);\n  let audioId = match ? match[1] : null;\n  if (!audioId) {\n    return defaultHTML;\n  }\n  try {\n    let html = Renderer.render('markup/vocarooAudioLink', { info: { id: audioId } });\n    if (!html) {\n      throw new Error(Tools.translate('Failed to create Vocaroo audio embedded container'));\n    }\n    return html;\n  } catch (err) {\n    Logger.error(err.stack || err);\n    return defaultHTML;\n  }\n}\n\nfunction convertVkontaktePost(_1, _2, matchs, _3, options) {\n  options.type = ProcessingContext.HTML_SKIP;\n  return `<div class='overflow-x-container'>${matchs[0]}</div>`;\n}\n\nasync function convertLinkCommon(hrefIsText, info, text, matchs, _1, options) {\n  if (!text) {\n    return '';\n  }\n  options.type = ProcessingContext.HTML_SKIP;\n  if (info.isIn(matchs.index, matchs[0].length, ProcessingContext.HTML_SKIP)) {\n    return text;\n  }\n  if (!hrefIsText) {\n    text = matchs[0];\n  }\n  let href = text;\n  if (href.lastIndexOf('http', 0) && href.lastIndexOf('ftp', 0)) {\n    href = `http://${href}`;\n  }\n  let defaultHTML = `<a href='${href}'>${Renderer.toHTML(text)}</a>`;\n  if (config('site.twitter.integrationEnabled') && RX_TWITTER_POST_LINK.test(href)) {\n    return await getTwitterEmbeddedHtml(href, defaultHTML);\n  }\n  if (RX_YOUTUBE_VIDEO_LINK_1.test(href) || RX_YOUTUBE_VIDEO_LINK_2.test(href)) {\n    return await getYoutubeEmbeddedHtml(href, defaultHTML);\n  }\n  if (RX_COUB_VIDEO_LINK.test(href)) {\n    return await getCoubEmbeddedHtml(href, defaultHTML);\n  }\n  if (RX_VOCAROO_AUDIO_LINK.test(href)) {\n    return getVocarooEmbeddedHtml(href, defaultHTML);\n  }\n  return defaultHTML;\n}\n\nfunction convertProtocol(_1, _2, matchs, _3, options) {\n  options.type = ProcessingContext.HTML_SKIP;\n  return `<a href='${matchs[0]}'>${Renderer.toHTML(matchs[2])}</a>`;\n}\n\nasync function convertPostLink(info, _1, matchs, _2, options) {\n  options.type = ProcessingContext.HTML_SKIP;\n  let boardName = (matchs.length > 2) ? matchs[1] : info.boardName;\n  let postNumber = Tools.option(matchs[(matchs.length > 2) ? 2 : 1], 'number', 0, { test: Tools.testPostNumber });\n  let escaped = matchs[0].split('>').join('&gt;');\n  if (!postNumber || postNumber === info.deletedPost) {\n    return escaped;\n  }\n  let post = await PostsModel.getPost(boardName, postNumber);\n  if (!post) {\n    return escaped;\n  }\n  if (info.referencedPosts) {\n    let key = `${boardName}:${postNumber}`;\n    if (!info.referencedPosts[key]) {\n      info.referencedPosts[key] = {\n        boardName: boardName,\n        postNumber: postNumber,\n        threadNumber: post.threadNumber,\n        createdAt: Tools.now()\n      };\n    }\n  }\n  let suffix = post.archived ? 'arch' : 'res';\n  let result = `<a href='/${config('site.pathPrefix')}${boardName}/${suffix}/${post.threadNumber}.html`;\n  if (postNumber !== post.threadNumber) {\n    result += `#post-${postNumber}`;\n  }\n  result += \"' class='js-post-link\";\n  if (postNumber === post.threadNumber) {\n    result += \" op-post-link\";\n  }\n  result += `' data-board-name='${boardName}' data-post-number='${postNumber}'`;\n  result += ` data-thread-number='${post.threadNumber}'>${escaped}</a>`;\n  return result;\n}\n\nfunction checkExternalLink(info, matchs) {\n  if (matchs.index > 0 && ['@', '#'].indexOf(info.text[matchs.index - 1]) >= 0) {\n    return false;\n  }\n  return /^\\d+\\.\\d+\\.\\d+\\.\\d+$/.test(matchs[2]) || rootZones.hasOwnProperty(matchs[4]);\n}\n\nfunction checkPostLink(_1, matchs) {\n  return Board.boardNames().indexOf(matchs[1]) >= 0;\n}\n\nexport default [{\n  priority: 1500,\n  markupModes: ['EXTENDED_WAKABA_MARK', 'BB_CODE'],\n  convert: convertVkontaktePost,\n  op: RX_VK_POST_LINK,\n  cl: null,\n  enabled: () => { return config('site.vkontakte.integrationEnabled'); }\n}, {\n  priority: 1600,\n  markupModes: ['EXTENDED_WAKABA_MARK', 'BB_CODE'],\n  convert: convertLinkCommon.bind(null, true),\n  op: '[url]',\n  cl: '[/url]'\n}, {\n  priority: 1700,\n  markupModes: ['EXTENDED_WAKABA_MARK', 'BB_CODE'],\n  convert: convertLinkCommon.bind(null, false),\n  op: new XRegExp(EXTERNAL_LINK_REGEXP_PATTERN, 'gi'),\n  cl: null,\n  check: checkExternalLink\n}, {\n  priority: 1800,\n  markupModes: ['EXTENDED_WAKABA_MARK', 'BB_CODE'],\n  convert: convertProtocol,\n  op: /(mailto|irc|news)\\:(\\S+)/gi,\n  cl: null\n}, {\n  priority: 2200,\n  markupModes: ['EXTENDED_WAKABA_MARK', 'BB_CODE'],\n  convert: convertPostLink,\n  op: />>([1-9][0-9]*)/gi,\n  cl: null\n}, {\n  priority: 2300,\n  markupModes: ['EXTENDED_WAKABA_MARK', 'BB_CODE'],\n  convert: convertPostLink,\n  op: new RegExp(`>>/([^\\/\\s]+)/([1-9][0-9]*)`, 'gi'),\n  cl: null,\n  check: checkPostLink\n}];\n"]}