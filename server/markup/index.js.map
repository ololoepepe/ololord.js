{"version":3,"sources":["markup/index.js"],"names":["info","conversionFunction","regexps","matchs","rxCl","matche","index","check","find","rxOp","length","escapable","getIndE","inds","nestable","nested","f","options","op","cl","type","NO_SKIP","start","end","txt","text","substr","ntxt","withoutEscaped","escapableSequencesRegExp","pre","preReady","insert","replace","rerun","process","boardName","deletedPost","markupModes","accessLevel","referencedPosts","Tools","option","test","testPostNumber","isArray","filter","mode","MARKUP_MODES","indexOf","REGISTERED_USER_LEVELS","series","elements","element","some","compareRegisteredUserLevels","permission","Permissions","convert","toHTML","postProcessors","markup","EXTENDED_WAKABA_MARK","BB_CODE","reloadElements","loadPlugins","__dirname","fileName","_1","_2","path","split","sort","p1","p2","priority","escapableSequences","plugin","map","sequence","flatten","uniq","escapeRegExp","RegExp","join","postProcessor","matchst","matchet","depth","tmp","offs","string","Object","defineProperty","value","markupCode","markupLaTeX"],"mappings":"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","file":"index.js","sourcesContent":["import _ from 'underscore';\n\nimport codeElements from './code';\nimport ProcessingContext from './processing-context';\nimport * as Permissions from '../helpers/permissions';\nimport * as Tools from '../helpers/tools';\n\nconst EXTENDED_WAKABA_MARK = 'EXTENDED_WAKABA_MARK';\nconst BB_CODE = 'BB_CODE';\nconst MARKUP_MODES = [EXTENDED_WAKABA_MARK, BB_CODE];\n\nlet elements = [];\nlet escapableSequencesRegExp = null;\nlet postProcessors = [];\n\nfunction reloadElements() {\n  elements = Tools.loadPlugins([__dirname, `${__dirname}/custom`], (fileName, _1, _2, path) => {\n    return ('index.js' !== fileName && 'processing-context.js' !== fileName) || (path.split('/') === 'custom');\n  }, true).sort((p1, p2) => { return p1.priority - p2.priority; });\n  let escapableSequences = elements.filter(plugin => plugin.escapable).map((plugin) => {\n    return [plugin.op, plugin.cl];\n  }).filter((sequence) => {\n    return sequence && typeof sequence === 'string';\n  });\n  escapableSequences = _(escapableSequences).flatten();\n  escapableSequences = _(escapableSequences).uniq().map(sequence => Tools.escapeRegExp(sequence));\n  if (escapableSequences.length > 0) {\n    escapableSequencesRegExp = new RegExp(escapableSequences.join('|'), 'g');\n  } else {\n    escapableSequencesRegExp = null;\n  }\n  postProcessors = elements.filter((plugin) => {\n    return (typeof plugin.postProcessor === 'function');\n  }).map(plugin => plugin.postProcessor);\n}\n\nreloadElements();\n\nfunction getIndE({ info, rxOp, matchs, rxCl, inds, nestable, escapable, nested }) {\n  nested.nested = false;\n  if (!nestable) {\n    return (inds >= 0) ? info.find(rxCl, inds + matchs[0].length, escapable) : -1;\n  }\n  if (inds >= 0) {\n    let matchst = info.find(rxOp, inds + matchs[0].length, escapable);\n    let matchet = info.find(rxCl, inds + matchs[0].length, escapable);\n    let depth = 1;\n    while (matchst || matchet) {\n      let tmp = (matchst && (!matchet || matchst.index < matchet.index)) ? matchst : matchet;\n      let offs = (matchst && (!matchet || matchst.index < matchet.index)) ? matchst[0].length : matchet[0].length;\n      depth += (tmp.index == (matchst ? matchst.index : -1)) ? 1 : -1;\n      if (depth > 1) {\n        nested.nested = true;\n      }\n      if (!depth) {\n        return tmp;\n      }\n      matchst = info.find(rxOp, tmp.index + offs, escapable);\n      matchet = info.find(rxCl, tmp.index + offs, escapable);\n    }\n  }\n  return null;\n}\n\nfunction preReady(text) {\n  return text.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\").split(\"\\\"\").join(\"&quot;\");\n}\n\nasync function process(info, conversionFunction, regexps, { nestable, escapable, pre, check } = {}) {\n  let rxOp = regexps.op;\n  let rxCl = regexps.cl;\n  if (typeof rxCl === 'undefined') {\n    rxCl = rxOp;\n  }\n  let nested = { nested: false };\n  let matchs = info.find(rxOp, 0, escapable);\n  let matche = rxCl ? getIndE({\n    info: info,\n    rxOp: rxOp,\n    matchs: matchs,\n    rxCl: rxCl,\n    inds: (matchs ? matchs.index : -1),\n    nestable: nestable,\n    escapable: escapable,\n    nested: nested\n  }) : null;\n  let rerun = false;\n  async function f() {\n    if (!matchs || (rxCl && (!matche || matche.index <= matchs.index))) {\n      return;\n    }\n    if (typeof check === 'function' && !check(info, matchs, matche)) {\n      if (rxCl && matche) {\n        matchs = info.find(rxOp, matche.index + matche[0].length, escapable);\n      } else {\n        matchs = info.find(rxOp, matchs.index + matchs[0].length, escapable);\n      }\n      matche = rxCl ? getIndE({\n        info: info,\n        rxOp: rxOp,\n        matchs: matchs,\n        rxCl: rxCl,\n        inds: (matchs ? matchs.index : -1),\n        nestable: nestable,\n        escapable: escapable,\n        nested: nested\n      }) : null;\n      return await f();\n    }\n    let options = {\n      op: '',\n      cl: '',\n      type: ProcessingContext.NO_SKIP\n    };\n    let start = matche ? (matchs.index + matchs[0].length) : matchs.index;\n    let end = matche ? (matche.index - matchs.index - matchs[0].length) : (matchs.index + matchs[0].length);\n    let txt = info.text.substr(start, end);\n    let ntxt = await conversionFunction(info, txt, matchs, matche, options);\n    txt = escapable ? ProcessingContext.withoutEscaped(ntxt, escapableSequencesRegExp) : ntxt;\n    if (pre) {\n      txt = preReady(txt);\n    }\n    if (txt) {\n      if (options.cl) {\n        info.insert(rxCl ? (matche.index + matche[0].length) : matchs.index + matchs[0].length, options.cl);\n      }\n      if (rxCl) {\n        info.replace(matchs.index, matche.index - matchs.index + matche[0].length, txt, matchs[0].length,\n          options.type);\n      } else {\n        info.replace(matchs.index, matchs[0].length, txt, matchs[0].length, options.type);\n      }\n      if (options.op) {\n        info.insert(matchs.index, options.op);\n      }\n      matchs = info.find(rxOp, matchs.index + txt.length + options.op.length + options.cl.length, escapable);\n    } else {\n      if (rxCl) {\n        matchs = info.find(rxOp, matche ? (matche.index + matche[0].length)\n          : (matchs.index + matchs[0].length), escapable);\n      } else {\n        matchs = info.find(rxOp, matchs.index + matchs[0].index, escapable);\n      }\n    }\n    if (nestable && nested.nested) {\n      rerun = true;\n    }\n    matche = rxCl ? getIndE({\n      info: info,\n      rxOp: rxOp,\n      matchs: matchs,\n      rxCl: rxCl,\n      inds: (matchs ? matchs.index : -1),\n      nestable: nestable,\n      escapable: escapable,\n      nested: nested\n    }) : null;\n    return await f();\n  }\n  await f();\n  if (rerun) {\n    return await process(info, conversionFunction, {\n      op: rxOp,\n      cl: rxCl\n    }, {\n      nestable: nestable,\n      escapable: escapable,\n      check: check\n    });\n  }\n}\n\nasync function markup(boardName, text, { deletedPost, markupModes, accessLevel, referencedPosts, } = {}) {\n  if (!text || typeof text !== 'string') {\n    return null;\n  }\n  deletedPost = Tools.option(deletedPost, 'number', 0, { test: Tools.testPostNumber });\n  if (_(markupModes).isArray()) {\n    markupModes = markupModes.filter((mode) => { return MARKUP_MODES.indexOf(mode) >= 0; });\n  } else {\n    markupModes = MARKUP_MODES;\n  }\n  if (!accessLevel || (Tools.REGISTERED_USER_LEVELS.indexOf(accessLevel) < 0)) {\n    accessLevel = null;\n  }\n  text = text.replace(/\\r+\\n/g, '\\n').replace(/\\r/g, '\\n');\n  let info = new ProcessingContext(text, boardName, referencedPosts, deletedPost);\n  await Tools.series(elements, async function(element) {\n    if (element.markupModes && !element.markupModes.some((mode) => { return markupModes.indexOf(mode) >= 0; })) {\n      return;\n    }\n    if (element.accessLevel && (Tools.compareRegisteredUserLevels(accessLevel, element.accessLevel) < 0)) {\n      return;\n    }\n    if (element.permission\n      && (Tools.compareRegisteredUserLevels(accessLevel, Permissions[element.permission]()) < 0)) {\n      return;\n    }\n    if (typeof element.process === 'function') {\n      await element.process(info);\n    } else if (typeof element.convert === 'function') {\n      await process(info, element.convert, {\n        op: element.op,\n        cl: element.cl\n      }, {\n        nestable: !!element.nestable,\n        escapable: !!element.escapable,\n        check: element.check,\n        pre: !!element.pre\n      });\n    }\n  });\n  return info.toHTML(escapableSequencesRegExp, postProcessors);\n}\n\nfunction markupModes(string) {\n  if (typeof string !== 'string') {\n    string = '';\n  }\n  return MARKUP_MODES.filter((mode) => { return string.indexOf(mode) >= 0; });\n}\n\nObject.defineProperty(markup, 'EXTENDED_WAKABA_MARK', { value: EXTENDED_WAKABA_MARK });\nObject.defineProperty(markup, 'BB_CODE', { value: BB_CODE });\nObject.defineProperty(markup, 'MARKUP_MODES', { value: MARKUP_MODES });\nObject.defineProperty(markup, \"markupCode\", { value: codeElements.markupCode });\nObject.defineProperty(markup, 'markupLaTeX', { value: codeElements.markupLaTeX });\nObject.defineProperty(markup, 'markupModes', { value: markupModes });\n\nexport default markup;\n"]}