{"version":3,"sources":["markup/index.js"],"names":[],"mappings":"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","file":"markup/index.js","sourcesContent":["import _ from 'underscore';\n\nimport codeElements from './code';\nimport ProcessingContext from './processing-context';\nimport * as Permissions from '../helpers/permissions';\nimport * as Tools from '../helpers/tools';\n\nconst EXTENDED_WAKABA_MARK = 'EXTENDED_WAKABA_MARK';\nconst BB_CODE = 'BB_CODE';\nconst MARKUP_MODES = [EXTENDED_WAKABA_MARK, BB_CODE];\n\nlet elements = [];\nlet escapableSequencesRegExp = null;\nlet postProcessors = [];\n\nfunction reloadElements() {\n  elements = Tools.loadPlugins([__dirname, `${__dirname}/custom`], (fileName, _1, _2, path) => {\n    return ('index.js' !== fileName && 'processing-context.js' !== fileName) || (path.split('/') === 'custom');\n  }, true).sort((p1, p2) => { return p1.priority - p2.priority; });\n  let escapableSequences = elements.filter(plugin => plugin.escapable).map((plugin) => {\n    return [plugin.op, plugin.cl];\n  }).filter((sequence) => {\n    return sequence && typeof sequence === 'string';\n  });\n  escapableSequences = _(escapableSequences).flatten();\n  escapableSequences = _(escapableSequences).uniq().map(sequence => Tools.escapeRegExp(sequence));\n  if (escapableSequences.length > 0) {\n    escapableSequencesRegExp = new RegExp(escapableSequences.join('|'), 'g');\n  } else {\n    escapableSequencesRegExp = null;\n  }\n  postProcessors = elements.filter((plugin) => {\n    return (typeof plugin.postProcessor === 'function');\n  }).map(plugin => plugin.postProcessor);\n}\n\nreloadElements();\n\nfunction getIndE({ info, rxOp, matchs, rxCl, inds, nestable, escapable, nested }) {\n  nested.nested = false;\n  if (!nestable) {\n    return (inds >= 0) ? info.find(rxCl, inds + matchs[0].length, escapable) : -1;\n  }\n  if (inds >= 0) {\n    let matchst = info.find(rxOp, inds + matchs[0].length, escapable);\n    let matchet = info.find(rxCl, inds + matchs[0].length, escapable);\n    let depth = 1;\n    while (matchst || matchet) {\n      let tmp = (matchst && (!matchet || matchst.index < matchet.index)) ? matchst : matchet;\n      let offs = (matchst && (!matchet || matchst.index < matchet.index)) ? matchst[0].length : matchet[0].length;\n      depth += (tmp.index == (matchst ? matchst.index : -1)) ? 1 : -1;\n      if (depth > 1) {\n        nested.nested = true;\n      }\n      if (!depth) {\n        return tmp;\n      }\n      matchst = info.find(rxOp, tmp.index + offs, escapable);\n      matchet = info.find(rxCl, tmp.index + offs, escapable);\n    }\n  }\n  return null;\n}\n\nfunction preReady(text) {\n  return text.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\").split(\"\\\"\").join(\"&quot;\");\n}\n\nasync function process(info, conversionFunction, regexps, { nestable, escapable, pre, check } = {}) {\n  let rxOp = regexps.op;\n  let rxCl = regexps.cl;\n  if (typeof rxCl === 'undefined') {\n    rxCl = rxOp;\n  }\n  let nested = { nested: false };\n  let matchs = info.find(rxOp, 0, escapable);\n  let matche = rxCl ? getIndE({\n    info: info,\n    rxOp: rxOp,\n    matchs: matchs,\n    rxCl: rxCl,\n    inds: (matchs ? matchs.index : -1),\n    nestable: nestable,\n    escapable: escapable,\n    nested: nested\n  }) : null;\n  let rerun = false;\n  async function f() {\n    if (!matchs || (rxCl && (!matche || matche.index <= matchs.index))) {\n      return;\n    }\n    if (typeof check === 'function' && !check(info, matchs, matche)) {\n      if (rxCl && matche) {\n        matchs = info.find(rxOp, matche.index + matche[0].length, escapable);\n      } else {\n        matchs = info.find(rxOp, matchs.index + matchs[0].length, escapable);\n      }\n      matche = rxCl ? getIndE({\n        info: info,\n        rxOp: rxOp,\n        matchs: matchs,\n        rxCl: rxCl,\n        inds: (matchs ? matchs.index : -1),\n        nestable: nestable,\n        escapable: escapable,\n        nested: nested\n      }) : null;\n      return await f();\n    }\n    let options = {\n      op: '',\n      cl: '',\n      type: ProcessingContext.NO_SKIP\n    };\n    let start = matche ? (matchs.index + matchs[0].length) : matchs.index;\n    let end = matche ? (matche.index - matchs.index - matchs[0].length) : (matchs.index + matchs[0].length);\n    let txt = info.text.substr(start, end);\n    let ntxt = await conversionFunction(info, txt, matchs, matche, options);\n    txt = escapable ? ProcessingContext.withoutEscaped(ntxt, escapableSequencesRegExp) : ntxt;\n    if (pre) {\n      txt = preReady(txt);\n    }\n    if (txt) {\n      if (options.cl) {\n        info.insert(rxCl ? (matche.index + matche[0].length) : matchs.index + matchs[0].length, options.cl);\n      }\n      if (rxCl) {\n        info.replace(matchs.index, matche.index - matchs.index + matche[0].length, txt, matchs[0].length,\n          options.type);\n      } else {\n        info.replace(matchs.index, matchs[0].length, txt, matchs[0].length, options.type);\n      }\n      if (options.op) {\n        info.insert(matchs.index, options.op);\n      }\n      matchs = info.find(rxOp, matchs.index + txt.length + options.op.length + options.cl.length, escapable);\n    } else {\n      if (rxCl) {\n        matchs = info.find(rxOp, matche ? (matche.index + matche[0].length)\n          : (matchs.index + matchs[0].length), escapable);\n      } else {\n        matchs = info.find(rxOp, matchs.index + matchs[0].index, escapable);\n      }\n    }\n    if (nestable && nested.nested) {\n      rerun = true;\n    }\n    matche = rxCl ? getIndE({\n      info: info,\n      rxOp: rxOp,\n      matchs: matchs,\n      rxCl: rxCl,\n      inds: (matchs ? matchs.index : -1),\n      nestable: nestable,\n      escapable: escapable,\n      nested: nested\n    }) : null;\n    return await f();\n  }\n  await f();\n  if (rerun) {\n    return await process(info, conversionFunction, {\n      op: rxOp,\n      cl: rxCl\n    }, {\n      nestable: nestable,\n      escapable: escapable,\n      check: check\n    });\n  }\n}\n\nasync function markup(boardName, text, { deletedPost, markupModes, accessLevel, referencedPosts, } = {}) {\n  if (!text || typeof text !== 'string') {\n    return null;\n  }\n  deletedPost = Tools.option(deletedPost, 'number', 0, { test: Tools.testPostNumber });\n  if (_(markupModes).isArray()) {\n    markupModes = markupModes.filter((mode) => { return MARKUP_MODES.indexOf(mode) >= 0; });\n  } else {\n    markupModes = MARKUP_MODES;\n  }\n  if (!accessLevel || (Tools.REGISTERED_USER_LEVELS.indexOf(accessLevel) < 0)) {\n    accessLevel = null;\n  }\n  text = text.replace(/\\r+\\n/g, '\\n').replace(/\\r/g, '\\n');\n  let info = new ProcessingContext(text, boardName, referencedPosts, deletedPost);\n  await Tools.series(elements, async function(element) {\n    if (element.markupModes && !element.markupModes.some((mode) => { return markupModes.indexOf(mode) >= 0; })) {\n      return;\n    }\n    if (element.accessLevel && (Tools.compareRegisteredUserLevels(accessLevel, element.accessLevel) < 0)) {\n      return;\n    }\n    if (element.permission\n      && (Tools.compareRegisteredUserLevels(accessLevel, Permissions[element.permission]()) < 0)) {\n      return;\n    }\n    if (typeof element.process === 'function') {\n      await element.process(info);\n    } else if (typeof element.convert === 'function') {\n      await process(info, element.convert, {\n        op: element.op,\n        cl: element.cl\n      }, {\n        nestable: !!element.nestable,\n        escapable: !!element.escapable,\n        check: element.check,\n        pre: !!element.pre\n      });\n    }\n  });\n  return info.toHTML(escapableSequencesRegExp, postProcessors);\n}\n\nfunction markupModes(string) {\n  if (typeof string !== 'string') {\n    string = '';\n  }\n  return MARKUP_MODES.filter((mode) => { return string.indexOf(mode) >= 0; });\n}\n\nObject.defineProperty(markup, 'EXTENDED_WAKABA_MARK', { value: EXTENDED_WAKABA_MARK });\nObject.defineProperty(markup, 'BB_CODE', { value: BB_CODE });\nObject.defineProperty(markup, 'MARKUP_MODES', { value: MARKUP_MODES });\nObject.defineProperty(markup, \"markupCode\", { value: codeElements.markupCode });\nObject.defineProperty(markup, 'markupLaTeX', { value: codeElements.markupLaTeX });\nObject.defineProperty(markup, 'markupModes', { value: markupModes });\n\nexport default markup;\n"],"sourceRoot":"/source/"}