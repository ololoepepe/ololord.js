{"version":3,"sources":["markup/code.js"],"names":["text","inline","Promise","resolve","reject","typeset","math","format","svg","data","errors","tagName","markupLaTeX","Tools","MiscModel","configure","tabReplace","useBR","config","MathJax","start","langs","listLanguages","map","lang","aliases","getLanguage","unshift","flatten","escapeRegExp","join","markupCode","result","highlight","highlightAuto","value","language","langClass","langNames","codeLangNames","langName","hasOwnProperty","op","cl","fixMarkup","convertCode","_1","matchs","_2","options","type","CODE_SKIP","convertLatex","_3","HTML_SKIP","checkLangsMatch","info","matche","elements","priority","markupModes","convert","RegExp","bind","check","Object","defineProperty"],"mappings":"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","file":"code.js","sourcesContent":["import _ from 'underscore';\nimport Highlight from 'highlight.js';\nimport MathJax from 'mathjax-node/lib/mj-single.js';\n\nimport ProcessingContext from './processing-context';\nimport * as Tools from '../helpers/tools';\nimport * as MiscModel from '../models/misc';\n\nHighlight.configure({\n  tabReplace: '    ',\n  useBR: true\n});\n\nMathJax.config({ MathJax: {} });\nMathJax.start();\n\nlet langs = Highlight.listLanguages().map((lang) => {\n  let aliases = Highlight.getLanguage(lang).aliases || [];\n  aliases.unshift(lang);\n  return aliases;\n});\nlangs = _(langs).flatten().map(lang => Tools.escapeRegExp(lang)).join('|');\n\nfunction markupCode(text, lang) {\n  let result = lang ? Highlight.highlight(lang, text, true) : Highlight.highlightAuto(text);\n  text = result.value;\n  lang = result.language || lang;\n  let langClass = lang ? ` ${lang}` : '';\n  let langNames = MiscModel.codeLangNames();\n  let langName = langNames.hasOwnProperty(lang) ? langNames[lang] : lang;\n  return {\n    op: `<div class='code-block${langClass} hljs js-with-tooltip' title='${langName || ''}'>`,\n    cl: '</div>',\n    text: Highlight.fixMarkup(text)\n  };\n}\n\nasync function markupLaTeX(text, inline) {\n  return await new Promise(function(resolve, reject) {\n    MathJax.typeset({\n      math: text,\n      format: inline ? 'inline-TeX' : 'TeX',\n      svg: true\n    }, (data) => {\n      if (data.errors) {\n        return reject(data.errors[0] || data.errors);\n      }\n      let tagName = inline ? 'span' : 'div';\n      resolve(`<${tagName} class='latex-${inline ? 'inline' : 'block'}'>${data.svg}</${tagName}>`);\n    });\n  });\n}\n\nfunction convertCode(_1, text, matchs, _2, options) {\n  options.type = ProcessingContext.CODE_SKIP;\n  let result = markupCode(text, matchs[1]);\n  options.op = result.op;\n  options.cl = result.cl;\n  return result.text;\n}\n\nfunction convertLatex(inline, _1, text, _2, _3, options) {\n  options.type = ProcessingContext.HTML_SKIP;\n  return markupLaTeX(text, inline);\n}\n\nfunction checkLangsMatch(info, matchs, matche) {\n  return matchs && matche && matchs[1] && matchs[1] === matche[1];\n}\n\nlet elements = [{\n  priority: 300,\n  markupModes: ['EXTENDED_WAKABA_MARK'],\n  convert: convertCode,\n  op: new RegExp(`/\\\\-\\\\-code\\\\s+(${langs})\\\\s+`, 'gi'),\n  cl: /\\s+\\\\\\\\\\\\-\\\\-/g\n}, {\n  priority: 400,\n  markupModes: ['EXTENDED_WAKABA_MARK'],\n  convert: convertLatex.bind(null, false),\n  op: '$$$'\n}, {\n  priority: 500,\n  markupModes: ['EXTENDED_WAKABA_MARK'],\n  convert: convertLatex.bind(null, true),\n  op: '$$'\n}, {\n  priority: 800,\n  markupModes: ['BB_CODE'],\n  convert: convertCode,\n  op: '[code]',\n  cl: '[/code]'\n}, {\n  priority: 900,\n  markupModes: ['BB_CODE'],\n  convert: convertCode,\n  op: new RegExp(`\\\\[code\\\\s+lang\\\\=\\\"?('${langs})\\\"?\\\\s*\\\\]`, 'gi'),\n  cl: '[/code]'\n}, {\n  priority: 1000,\n  markupModes: ['BB_CODE'],\n  convert: convertCode,\n  op: new RegExp(`\\\\[(${langs})\\\\]`, 'gi'),\n  cl: new RegExp(`\\\\[/(${langs})\\\\]`, 'gi'),\n  check: checkLangsMatch\n}, {\n  priority: 1300,\n  markupModes: ['BB_CODE'],\n  convert: convertLatex.bind(null, false),\n  op: '[latex]',\n  cl: '[/latex]'\n}, {\n  priority: 1400,\n  markupModes: ['BB_CODE'],\n  convert: convertLatex.bind(null, true),\n  op: '[l]',\n  cl: '[/l]'\n}];\n\nObject.defineProperty(elements, \"markupCode\", { value: markupCode });\nObject.defineProperty(elements, 'markupLaTeX', { value: markupLaTeX });\n\nexport default elements;\n"]}