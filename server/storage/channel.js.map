{"version":3,"sources":["storage/channel.js"],"names":["Tools","Channel","client","name","parse","stringify","selectParser","selectStringifier","handlers","on","_handleMessage","bind","data","publish","handler","shouldSubscribe","length","push","subscribe","index","indexOf","splice","unsubscribe","channel","message","series","error","stack"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;IAAYA,K;;;;;;;;;;IAESC,O;AACnB,mBAAYC,MAAZ,EAAoBC,IAApB,EAAqD;AAAA,mFAAJ,EAAI;AAAA,QAAzBC,KAAyB,QAAzBA,KAAyB;AAAA,QAAlBC,SAAkB,QAAlBA,SAAkB;;AAAA;;AACnD,SAAKH,MAAL,GAAcA,MAAd;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAa,oBAAUE,YAAV,CAAuBF,KAAvB,CAAb;AACA,SAAKC,SAAL,GAAiB,oBAAUE,iBAAV,CAA4BF,SAA5B,CAAjB;AACA,SAAKG,QAAL,GAAgB,EAAhB;AACA,SAAKN,MAAL,CAAYO,EAAZ,CAAe,SAAf,EAA0B,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAA1B;AACD;;;;;6EAEaC,I;;;;;;uBACC,KAAKV,MAAL,CAAYW,OAAZ,CAAoB,KAAKV,IAAzB,EAA+B,KAAKE,SAAL,CAAeO,IAAf,CAA/B,C;;;;;;;;;;;;;;;;;;;;;;8EAGCE,O;;;;;;AACVC,+B,GAAmB,KAAKP,QAAL,CAAcQ,MAAd,IAAwB,C;;sBAC3C,OAAOF,OAAP,KAAmB,U;;;;;;;;AAGvB,qBAAKN,QAAL,CAAcS,IAAd,CAAmBH,OAAnB;;qBACIC,e;;;;;;uBACW,KAAKb,MAAL,CAAYgB,SAAZ,CAAsB,KAAKf,IAA3B,C;;;;;;;;;;;;;;;;;;;;;;8EAICW,O;;;;;;sBACZ,OAAOA,OAAP,KAAmB,W;;;;;AACrB,qBAAKN,QAAL,GAAgB,EAAhB;;;;;sBACS,OAAOM,OAAP,KAAmB,U;;;;;AACxBK,qB,GAAQ,KAAKX,QAAL,CAAcY,OAAd,CAAsBN,OAAtB,C;;sBACRK,QAAQ,C;;;;;;;;AAGZ,qBAAKX,QAAL,CAAca,MAAd,CAAqBF,KAArB,EAA4B,CAA5B;;;sBAEE,KAAKX,QAAL,CAAcQ,MAAd,IAAwB,C;;;;;;uBACb,KAAKd,MAAL,CAAYoB,WAAZ,CAAwB,KAAKnB,IAA7B,C;;;;;;;;;;;;;;;;;;;;;;8EAIIoB,O,EAASC,O;;;;;sBACxBD,YAAY,KAAKpB,I;;;;;;;;AAGrBqB,0BAAU,KAAKpB,KAAL,CAAWoB,OAAX,CAAV;;;uBAEQxB,MAAMyB,MAAN,CAAa,KAAKjB,QAAlB;AAAA,wEAA4B,kBAAeM,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAC1BA,QAAQU,OAAR,CAD0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA5B;;AAAA;AAAA;AAAA;AAAA,oB;;;;;;;;;;AAIN,iCAAOE,KAAP,CAAa,aAAIC,KAAJ,gBAAb;;;;;;;;;;;;;;;;;;;;;kBAlDe1B,O","file":"channel.js","sourcesContent":["import CommonKey from './common-key';\nimport Logger from '../helpers/logger';\nimport * as Tools from '../helpers/tools';\n\nexport default class Channel {\n  constructor(client, name, { parse, stringify } = {}) {\n    this.client = client;\n    this.name = name;\n    this.parse = CommonKey.selectParser(parse);\n    this.stringify = CommonKey.selectStringifier(stringify);\n    this.handlers = [];\n    this.client.on('message', this._handleMessage.bind(this));\n  }\n\n  async publish(data) {\n    return await this.client.publish(this.name, this.stringify(data));\n  }\n\n  async subscribe(handler) {\n    let shouldSubscribe = (this.handlers.length <= 0);\n    if (typeof handler !== 'function') {\n      return;\n    }\n    this.handlers.push(handler);\n    if (shouldSubscribe) {\n      return await this.client.subscribe(this.name);\n    }\n  }\n\n  async unsubscribe(handler) {\n    if (typeof handler === 'undefined') {\n      this.handlers = [];\n    } else if (typeof handler === 'function') {\n      let index = this.handlers.indexOf(handler);\n      if (index < 0) {\n        return;\n      }\n      this.handlers.splice(index, 1);\n    }\n    if (this.handlers.length <= 0) {\n      return await this.client.unsubscribe(this.name);\n    }\n  }\n\n  async _handleMessage(channel, message) {\n    if (channel !== this.name) {\n      return;\n    }\n    message = this.parse(message);\n    try {\n      await Tools.series(this.handlers, async function(handler) {\n        await handler(message);\n      });\n    } catch (err) {\n      Logger.error(err.stack || err);\n    }\n  }\n}\n"]}