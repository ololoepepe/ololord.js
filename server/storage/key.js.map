{"version":3,"sources":["storage/key.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;;;IAEqB,G;;;AACnB,iBAAqB;AAAA;;AAAA;;AAAA,sCAAN,IAAM;AAAN,UAAM;AAAA;;AAAA,iJACV,IADU;AAEpB;;;;;2EAES,M;YACJ,I;;;;;;uBAAa,KAAK,MAAL,CAAY,GAAZ,CAAgB,KAAK,OAAL,CAAa,MAAb,CAAhB,C;;;AAAb,oB;iDACG,KAAK,KAAL,CAAW,IAAX,C;;;;;;;;;;;;;;;;;;;4EAGC,I,EAAM,M;;;;;;uBACD,KAAK,MAAL,CAAY,GAAZ,CAAgB,KAAK,OAAL,CAAa,MAAb,CAAhB,EAAsC,KAAK,SAAL,CAAe,IAAf,CAAtC,C;;;;;;;;;;;;;;;;;;;;;;4EAGH,I,EAAM,O,EAAS,M;;;;;;uBACZ,KAAK,MAAL,CAAY,KAAZ,CAAkB,KAAK,OAAL,CAAa,MAAb,CAAlB,EAAwC,KAAK,SAAL,CAAe,IAAf,CAAxC,EAA8D,OAA9D,C;;;;;;;;;;;;;;;;;;;;;;4EAGG,C,EAAG,M;;;;;;uBACN,KAAK,MAAL,CAAY,MAAZ,CAAmB,KAAK,OAAL,CAAa,MAAb,CAAnB,EAAyC,CAAzC,C;;;;;;;;;;;;;;;;;;;;;;;;kBAnBI,G","file":"storage/key.js","sourcesContent":["import _ from 'underscore';\n\nimport CommonKey from './common-key';\n\nexport default class Key extends CommonKey {\n  constructor(...args) {\n    super(...args);\n  }\n\n  async get(subkey) {\n    let data = await this.client.get(this.fullKey(subkey));\n    return this.parse(data);\n  }\n\n  async set(data, subkey) {\n    return await this.client.set(this.fullKey(subkey), this.stringify(data));\n  }\n\n  async setex(data, seconds, subkey) {\n    return await this.client.setex(this.fullKey(subkey), this.stringify(data), seconds);\n  }\n\n  async incrementBy(n, subkey) {\n    return await this.client.incrby(this.fullKey(subkey), n);\n  }\n}\n"],"sourceRoot":"/source/"}