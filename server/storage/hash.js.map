{"version":3,"sources":["storage/hash.js"],"names":[],"mappings":"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","file":"storage/hash.js","sourcesContent":["import _ from 'underscore';\n\nimport CommonKey from './common-key';\n\nexport default class Hash extends CommonKey {\n  constructor(...args) {\n    super(...args);\n  }\n\n  async getOne(id, subkey) {\n    let data = await this.client.hget(this.fullKey(subkey), id);\n    return this.parse(data);\n  }\n\n  async getSome(ids, subkey) {\n    if (!_(ids).isArray() || ids.length <= 0) {\n      return [];\n    }\n    let data = await this.client.hmget.call(this.client, this.fullKey(subkey), ...ids);\n    return data.map(this.parse);\n  }\n\n  async getAll(subkey) {\n    let data = await this.client.hgetall(this.fullKey(subkey));\n    return _(data).mapObject(this.parse);\n  }\n\n  async existsOne(id, subkey) {\n    let exists = await this.client.hexists(this.fullKey(subkey), id);\n    return !!exists;\n  }\n\n  async setOne(id, data, subkey) {\n    return await this.client.hset(this.fullKey(subkey), id, this.stringify(data));\n  }\n\n  async setSome(items, subkey) {\n    if (typeof items !== 'object') {\n      return 0;\n    }\n    if (!_(items).isArray()) {\n      items = _(items).map((value, key) => { return [key, value]; });\n      items = _(items).flatten();\n    }\n    if (items.length <= 0) {\n      return 0;\n    }\n    return await this.client.hmset.call(this.client, this.fullKey(subkey), ...items.map((item, index) => {\n      return (index % 2) ? this.stringify(item) : item;\n    }));\n  }\n\n  async incrementBy(id, n, subkey) {\n    return await this.client.hincrby(this.fullKey(subkey), id, n);\n  }\n\n  async deleteOne(id, subkey) {\n    return await this.client.hdel(this.fullKey(subkey), id);\n  }\n\n  async deleteSome(ids, subkey) {\n    if (!_(ids).isArray()) {\n      ids = [ids];\n    }\n    if (ids.length <= 0) {\n      return 0;\n    }\n    return await this.client.hdel(this.fullKey(subkey), ...ids);\n  }\n\n  async keys(subkey) {\n    return await this.client.hkeys(this.fullKey(subkey));\n  }\n\n  async count(subkey) {\n    return await this.client.hlen(this.fullKey(subkey));\n  }\n}\n"],"sourceRoot":"/source/"}