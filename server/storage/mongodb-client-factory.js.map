{"version":3,"sources":["storage/mongodb-client-factory.js"],"names":["client","MongoDBClient","Tools","INDEX_PATH","__dirname","INDEXES","map","path","readdirSync","entry","filter","split","slice","statSync","isFile","flatten","file","json","require","collectionName","join","indexes","err","console","log","index","reduce","acc","each","name","createClient","url","options","uri_decode_auth","Promise","resolve","reject","connect","db","args","waitForConnected","_db","addUser","call","admin","authenticate","close","collection","collections","command","createCollection","createIndex","dropCollection","dropDatabase","executeDbAdminCommand","indexInformation","listCollections","logout","open","removeUser","renameCollection","stats","unref","dropExisting","dropAll","series","dropIndexes","dropIndex","translate"],"mappings":"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","file":"mongodb-client-factory.js","sourcesContent":["import _ from 'underscore';\nimport FSSync from 'fs';\nimport { MongoClient } from 'mongodb';\n\nimport config from '../helpers/config';\nimport * as Tools from '../helpers/tools';\n\nconst INDEX_PATH = `${__dirname}/../../misc/mongodb/indexes`;\nconst INDEXES = _([INDEX_PATH, `${INDEX_PATH}/custom`].map((path) => {\n  return FSSync.readdirSync(path).map(entry => `${path}/${entry}`).filter((entry) => {\n    return (entry.split('.').slice(-1)[0] === 'json') && FSSync.statSync(entry).isFile();\n  });\n})).flatten().map((file) => {\n  try {\n    let json = require(file);\n    return {\n      collectionName: json.collectionName || file.split('.').slice(0, -1).join('.'),\n      indexes: json.indexes\n    };\n  } catch (err) {\n    console.log(err);\n  }\n}).filter(index => !!index).reduce((acc, index) => {\n  let indexes = acc[index.collectionName];\n  if (!indexes) {\n    indexes = {};\n  }\n  _(index.indexes).each((index, name) => {\n    indexes[name] = index;\n  });\n  acc[index.collectionName] = indexes;\n  return acc;\n}, {});\n\nlet client = null;\n\nfunction createClient(url, options) {\n  url = url || config('system.mongodb.url');\n  options = options || { uri_decode_auth: config(`system.mongodb.uri_decode_auth`) };\n  return new Promise((resolve, reject) => {\n    MongoClient.connect(url, options, (err, db) => {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(db);\n    });\n  });\n}\n\nclass MongoDBClient {\n  constructor() {\n    //\n  }\n\n  async addUser(...args) {\n    await this.waitForConnected();\n    return await this._db.addUser.call(this._db, ...args);\n  }\n\n  async admin(...args) {\n    await this.waitForConnected();\n    return await this._db.admin.call(this._db, ...args);\n  }\n\n  async authenticate(...args) {\n    await this.waitForConnected();\n    return await this._db.authenticate.call(this._db, ...args);\n  }\n\n  async close(...args) {\n    await this.waitForConnected();\n    return await this._db.close.call(this._db, ...args);\n  }\n\n  async collection(...args) {\n    await this.waitForConnected();\n    return await this._db.collection.call(this._db, ...args);\n  }\n\n  async collections(...args) {\n    await this.waitForConnected();\n    return await this._db.collections.call(this._db, ...args);\n  }\n\n  async command(...args) {\n    await this.waitForConnected();\n    return await this._db.command.call(this._db, ...args);\n  }\n\n  async createCollection(...args) {\n    await this.waitForConnected();\n    return await this._db.createCollection.call(this._db, ...args);\n  }\n\n  async createIndex(...args) {\n    await this.waitForConnected();\n    return await this._db.createIndex.call(this._db, ...args);\n  }\n\n  async db(...args) {\n    await this.waitForConnected();\n    return await this._db.db.call(this._db, ...args);\n  }\n\n  async dropCollection(...args) {\n    await this.waitForConnected();\n    return await this._db.dropCollection.call(this._db, ...args);\n  }\n\n  async dropDatabase(...args) {\n    await this.waitForConnected();\n    return await this._db.dropDatabase.call(this._db, ...args);\n  }\n\n  async executeDbAdminCommand(...args) {\n    await this.waitForConnected();\n    return await this._db.executeDbAdminCommand.call(this._db, ...args);\n  }\n\n  async indexInformation(...args) {\n    await this.waitForConnected();\n    return await this._db.indexInformation.call(this._db, ...args);\n  }\n\n  async listCollections(...args) {\n    await this.waitForConnected();\n    return await this._db.listCollections.call(this._db, ...args);\n  }\n\n  async logout(...args) {\n    await this.waitForConnected();\n    return await this._db.logout.call(this._db, ...args);\n  }\n\n  async open(...args) {\n    await this.waitForConnected();\n    return await this._db.open.call(this._db, ...args);\n  }\n\n  async removeUser(...args) {\n    await this.waitForConnected();\n    return await this._db.removeUser.call(this._db, ...args);\n  }\n\n  async renameCollection(...args) {\n    await this.waitForConnected();\n    return await this._db.renameCollection.call(this._db, ...args);\n  }\n\n  async stats(...args) {\n    await this.waitForConnected();\n    return await this._db.stats.call(this._db, ...args);\n  }\n\n  async unref(...args) {\n    await this.waitForConnected();\n    return await this._db.unref.call(this._db, ...args);\n  }\n\n  async createIndexes({ dropExisting, dropAll } = {}) {\n    await this.waitForConnected();\n    let db = this._db;\n    await Tools.series(INDEXES, async function(indexes, collectionName) {\n      let collection = db.collection(collectionName);\n      if (dropAll) {\n        await collection.dropIndexes();\n      }\n      return Tools.series(indexes, async function({ index, options = {} }, name) {\n        if (dropExisting && !dropAll) {\n          await collection.dropIndex(name);\n        }\n        options.name = name;\n        return await collection.createIndex(index, options);\n      });\n    });\n  }\n\n  async waitForConnected() {\n    if (!this._db) {\n      console.log(Tools.translate('Connecting to MongoDB, please, wait…'));\n      this._db = await createClient();\n    }\n  }\n}\n\nexport default function() {\n  if (!client) {\n    client = new MongoDBClient();\n  }\n  return client;\n}\n"]}