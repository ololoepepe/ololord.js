{"version":3,"sources":["storage/unordered-set.js"],"names":["UnorderedSet","args","subkey","client","srandmember","fullKey","data","parse","smembers","map","sismember","stringify","contains","sadd","list","isArray","length","call","srem","scard"],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;;;;;IAEqBA,Y;;;AACnB,0BAAqB;AAAA;;AAAA;;AAAA,sCAANC,IAAM;AAANA,UAAM;AAAA;;AAAA,kJACVA,IADU;AAEpB;;;;;6EAEYC,M;;;;;;;uBACM,KAAKC,MAAL,CAAYC,WAAZ,CAAwB,KAAKC,OAAL,CAAaH,MAAb,CAAxB,C;;;AAAbI,oB;iDACG,KAAKC,KAAL,CAAWD,IAAX,C;;;;;;;;;;;;;;;;;;;8EAGIJ,M;;;;;;;uBACM,KAAKC,MAAL,CAAYK,QAAZ,CAAqB,KAAKH,OAAL,CAAaH,MAAb,CAArB,C;;;AAAbI,oB;kDACGA,KAAKG,GAAL,CAAS,KAAKF,KAAd,C;;;;;;;;;;;;;;;;;;;8EAGMD,I,EAAMJ,M;;;;;;;uBACE,KAAKC,MAAL,CAAYO,SAAZ,CAAsB,KAAKL,OAAL,CAAaH,MAAb,CAAtB,EAA4C,KAAKS,SAAL,CAAeL,IAAf,CAA5C,C;;;AAAjBM,wB;kDACG,CAAC,CAACA,Q;;;;;;;;;;;;;;;;;;;8EAGEN,I,EAAMJ,M;;;;;;uBACJ,KAAKC,MAAL,CAAYU,IAAZ,CAAiB,KAAKR,OAAL,CAAaH,MAAb,CAAjB,EAAuC,KAAKS,SAAL,CAAeL,IAAf,CAAvC,C;;;;;;;;;;;;;;;;;;;;;;8EAGDQ,I,EAAMZ,M;;;;;;;sBACd,CAACY,IAAD,IAAS,CAAC,0BAAEA,IAAF,EAAQC,OAAR,EAAV,IAA+BD,KAAKE,MAAL,IAAe,C;;;;;kDACzC,C;;;;uBAEI,qBAAKb,MAAL,CAAYU,IAAZ,EAAiBI,IAAjB,sBAAsB,KAAKd,MAA3B,EAAmC,KAAKE,OAAL,CAAaH,MAAb,CAAnC,4BAA4DY,KAAKL,GAAL,CAAS,KAAKE,SAAd,CAA5D,G;;;;;;;;;;;;;;;;;;;;;;8EAGCL,I,EAAMJ,M;;;;;;uBACP,KAAKC,MAAL,CAAYe,IAAZ,CAAiB,KAAKb,OAAL,CAAaH,MAAb,CAAjB,EAAuC,KAAKS,SAAL,CAAeL,IAAf,CAAvC,C;;;;;;;;;;;;;;;;;;;;;;8EAGEQ,I,EAAMZ,M;;;;;;;sBACjB,CAACY,IAAD,IAAS,CAAC,0BAAEA,IAAF,EAAQC,OAAR,EAAV,IAA+BD,KAAKE,MAAL,IAAe,C;;;;;kDACzC,C;;;;uBAEI,qBAAKb,MAAL,CAAYe,IAAZ,EAAiBD,IAAjB,sBAAsB,KAAKd,MAA3B,EAAmC,KAAKE,OAAL,CAAaH,MAAb,CAAnC,4BAA4DY,KAAKL,GAAL,CAAS,KAAKE,SAAd,CAA5D,G;;;;;;;;;;;;;;;;;;;;;;8EAGHT,M;;;;;;uBACG,KAAKC,MAAL,CAAYgB,KAAZ,CAAkB,KAAKd,OAAL,CAAaH,MAAb,CAAlB,C;;;;;;;;;;;;;;;;;;;;;;;;kBA3CIF,Y","file":"unordered-set.js","sourcesContent":["import _ from 'underscore';\n\nimport CommonKey from './common-key';\n\nexport default class UnorderedSet extends CommonKey {\n  constructor(...args) {\n    super(...args);\n  }\n\n  async getOne(subkey) {\n    let data = await this.client.srandmember(this.fullKey(subkey));\n    return this.parse(data);\n  }\n\n  async getAll(subkey) {\n    let data = await this.client.smembers(this.fullKey(subkey));\n    return data.map(this.parse);\n  }\n\n  async contains(data, subkey) {\n    let contains = await this.client.sismember(this.fullKey(subkey), this.stringify(data));\n    return !!contains;\n  }\n\n  async addOne(data, subkey) {\n    return await this.client.sadd(this.fullKey(subkey), this.stringify(data));\n  }\n\n  async addSome(list, subkey) {\n    if (!list || !_(list).isArray() || list.length <= 0) {\n      return 0;\n    }\n    return await this.client.sadd.call(this.client, this.fullKey(subkey), ...list.map(this.stringify));\n  }\n\n  async deleteOne(data, subkey) {\n    return await this.client.srem(this.fullKey(subkey), this.stringify(data));\n  }\n\n  async deleteSome(list, subkey) {\n    if (!list || !_(list).isArray() || list.length <= 0) {\n      return 0;\n    }\n    return await this.client.srem.call(this.client, this.fullKey(subkey), ...list.map(this.stringify));\n  }\n\n  async count(subkey) {\n    return await this.client.scard(this.fullKey(subkey));\n  }\n}\n"]}