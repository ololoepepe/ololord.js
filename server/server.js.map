{"version":3,"sources":["server.js"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["\n\nimport 'babel-polyfill';\nimport 'source-map-support/register';\nimport _ from 'underscore';\nimport Cluster from 'cluster';\nimport HTTP from 'http';\n\nimport Board from './boards/board';\nimport Captcha from './captchas/captcha';\nimport NodeCaptcha from './captchas/node-captcha';\nimport NodeCaptchaNoscript from './captchas/node-captcha-noscript';\nimport commands from './commands';\nimport controllers from './controllers';\nimport BoardController from './controllers/board';\nimport geolocation from './core/geolocation';\nimport * as Renderer from './core/renderer';\nimport WebSocketServer from './core/websocket-server';\nimport config from './helpers/config';\nimport * as IPC from './helpers/ipc';\nimport Logger from './helpers/logger';\nimport * as OnlineCounter from './helpers/online-counter';\nimport Program from './helpers/program';\nimport * as Tools from './helpers/tools';\nimport * as BoardsModel from './models/boards';\nimport * as StatisticsModel from './models/statistics';\nimport * as UsersModel from './models/users';\n\nfunction generateFileName() {\n  let fileName = _.now().toString();\n  if (fileName != generateFileName.lastFileName) {\n    generateFileName.lastFileName = fileName;\n    return fileName;\n  }\n  return new Promise((resolve) => {\n    setTimeout(async function() {\n      let fileName = await fileName();\n      resolve(fileName);\n    }, 1);\n  });\n}\n\nfunction onReady() {\n  //TODO: May throw error\n  if (!onReady.ready) {\n    onReady.ready = 0;\n  }\n  ++onReady.ready;\n  if (config('system.workerCount') === onReady.ready) {\n    UsersModel.initializeUserBansMonitoring(); //NOTE: No \"await\" here, this is how it is meant to be.\n    if (config('server.statistics.enabled')) {\n      let interval = config('server.statistics.ttl') * Tools.MINUTE;\n      setInterval(StatisticsModel.generateStatistics.bind(StatisticsModel), interval);\n    }\n    if (config('server.rss.enabled')) {\n      setInterval(BoardController.renderRSS.bind(BoardController), config('server.rss.ttl') * Tools.MINUTE);\n    }\n    commands();\n  }\n}\n\nfunction initializeMaster() {\n  //NOTE: Overcoming Babel bug\n  (async function() {\n    try {\n      await NodeCaptcha.removeOldCaptchImages();\n      await NodeCaptchaNoscript.removeOldCaptchImages();\n      await Renderer.compileTemplates();\n      await Renderer.reloadTemplates();\n      await Renderer.generateTemplatingJavaScriptFile();\n      if (Program.rerender || config('system.rerenderCacheOnStartup')) {\n        if (Program.archive || config('system.rerenderArchive')) {\n          await Renderer.rerender();\n        } else {\n          await Renderer.rerender(['**', '!/*/arch/*']);\n        }\n      }\n      await StatisticsModel.generateStatistics();\n      await Renderer.generateCustomJavaScriptFile();\n      await Renderer.generateCustomCSSFiles();\n      console.log(Tools.translate('Spawning workers, please, wait…'));\n      Cluster.on('exit', (worker) => {\n        Logger.log(Tools.translate('[$[1]] Died, respawning…', '', worker.process.pid));\n        Cluster.fork();\n      });\n      for (let i = 0; i < config('system.workerCount'); ++i) {\n        Cluster.fork();\n      }\n      IPC.on('ready', onReady);\n      IPC.on('fileName', generateFileName);\n      IPC.on('sendChatMessage', (data) => {\n        return IPC.send('sendChatMessage', data);\n      });\n      IPC.on('render', (data) => {\n        return IPC.render(data.boardName, data.threadNumber, data.postNumber, data.action);\n      });\n      IPC.on('renderArchive', (data) => {\n        return IPC.renderArchive(data);\n      });\n      IPC.on('stop', () => {\n        return IPC.send('stop');\n      });\n      IPC.on('start', () => {\n        return IPC.send('start');\n      });\n      IPC.on('reloadBoards', () => {\n        Board.initialize();\n        return IPC.send('reloadBoards');\n      });\n      IPC.on('reloadTemplates', async function() {\n        await Renderer.compileTemplates();\n        await Renderer.reloadTemplates();\n        await Renderer.generateTemplatingJavaScriptFile();\n        return IPC.send('reloadTemplates');\n      });\n      let hasNewPosts = {};\n      setInterval(() => {\n        if (_(hasNewPosts).isEmpty()) {\n          return;\n        }\n        IPC.send('notifyAboutNewPosts', hasNewPosts).catch((err) => {\n          Logger.error(err.stack || err);\n        });\n        hasNewPosts = {};\n      }, Tools.SECOND);\n      IPC.on('notifyAboutNewPosts', (key) => {\n        hasNewPosts[key] = 1;\n      });\n      IPC.on('rerenderCache', (rerenderArchive) => {\n        if (rerenderArchive) {\n          return Renderer.rerender();\n        } else {\n          return Renderer.rerender(['**', '!/*/arch/*']);\n        }\n      });\n    } catch (err) {\n      Logger.error(err.stack || err);\n      process.exit(1);\n    }\n  })();\n}\n\nfunction initializeWorker() {\n  //NOTE: Overcoming Babel bug\n  (async function() {\n    console.log(Tools.translate('[$[1]] Initializing…', '', process.pid));\n    try {\n      await geolocation.initialize();\n      await BoardsModel.initialize();\n      await Renderer.reloadTemplates();\n      let sockets = new WeakSet();\n      let server = HTTP.createServer(controllers);\n      let ws = new WebSocketServer(server);\n      server.listen(config('server.port'), () => {\n        console.log(Tools.translate('[$[1]] Listening on port $[2]…', '', process.pid, config('server.port')));\n        IPC.on('exit', (status) => { process.exit(status); });\n        IPC.on('stop', () => {\n          return new Promise((resolve, reject) => {\n            server.close(() => {\n              sockets.forEach((socket) => {\n                sockets.delete(socket);\n                socket.destroy();\n              });\n              OnlineCounter.clear();\n              console.log(Tools.translate('[$[1]] Closed', '', process.pid));\n              resolve();\n            });\n          });\n        });\n        IPC.on('start', () => {\n          return new Promise((resolve, reject) => {\n            server.listen(config('server.port'), () => {\n              console.log(Tools.translate('[$[1]] Listening on port $[2]…', '', process.pid, config('server.port')));\n              resolve();\n            });\n          });\n        });\n        IPC.on('sendChatMessage', ({ type, message, ips, hashpasses } = {}) => {\n          ws.sendMessage(type, message, ips, hashpasses);\n        });\n        IPC.on('render', async function(data) {\n          let f = BoardController[`${data.type}`];\n          if (typeof f !== 'function') {\n            throw new Error(Tools.translate('Invalid render function'));\n          }\n          return await f.call(BoardController, data.key, data.data);\n        });\n        IPC.on('reloadBoards', () => {\n          Board.initialize();\n        });\n        IPC.on('reloadTemplates', async function() {\n          return await Renderer.reloadTemplates();\n        });\n        IPC.on('notifyAboutNewPosts', (keys) => {\n          ws.notifyAboutNewPosts(keys);\n        });\n        IPC.on('getConnectionIPs', () => {\n           return OnlineCounter.unique();\n        });\n        IPC.send('ready').catch((err) => {\n          Logger.error(err);\n        });\n      });\n      server.on('connection', (socket) => {\n        sockets.add(socket);\n        socket.on('close', () => {\n          sockets.delete(socket);\n        });\n      });\n    } catch (err) {\n      console.log(err);\n      Logger.error(err.stack || err);\n    }\n  })();\n}\n\nBoard.initialize();\nCaptcha.initialize();\ncontrollers.initialize();\n\nif (Cluster.isMaster) {\n  initializeMaster();\n} else {\n  initializeWorker();\n}\n"],"sourceRoot":"/source/"}