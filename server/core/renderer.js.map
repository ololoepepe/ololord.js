{"version":3,"sources":["core/renderer.js"],"names":["description","controllers","Tools","requireWrapper","require","series","routers","router","paths","flatten","filter","path","getRouterPaths","what","render","length","console","log","translate","result","data","id","Cache","writeFile","rerender","thread","board","boardName","Error","Files","renderPostFileInfos","opPost","renderPost","lastPosts","post","renderThread","models","JSON","stringify","base","MiscModel","boards","notFoundImageFileNames","tr","translations","listTree","TEMPLATES_PATH","_","stat","isFile","fileNames","templateNames","fileName","split","pop","map","substr","read","TEMPLATES_INDEX_PATH","template","write","replace","string","stream","entries","debug","forEach","lib","bundle","on","Promise","resolve","reject","APP_PATH","join","__dirname","generateTemplatingJavaScriptFile","exists","generateCustomJavaScriptFile","type","list","types","item","generateCustomCSSFiles","EXCLUDED_SOURCE_TEMPLATE_FILES","has","entry","removeTree","TEMPLATES_SOURCE_PATH","test","content","name","slice","includes","reduce","acc","compiled","moduleName","shift","ILLEGAL_CHARACTERS_REGEXP","DOT_SETTINGS","toString","ENCODE_HTML_SOURCE","makeTree","compileTemplates","_1","templates","templateName","cache","hasOwnProperty","error","stack","reloadTemplates","targetsFromString","postingSpeedString","plainText","toHTML","evaluate","interpolate","encode","use","define","conditional","iterate","varname","strip","append","selfcontained","Set","encodeHTMLSource","escapedSelector","model","baseModel","o","boardGroups","banner","bannerFileNames","boardTitle","title","sample","compareRegisteredUserLevels","isImageType","isAudioType","isVideoType","escaped","timeOffset","locale","format","formattedDate","date","utcOffset","recursive","err","part","postNumbers","postNumber","option","testPostNumber","launchDate","lastPostNumber","isNaN","zeroSpeedString","nonZero","speedString","duptime","ss","toFixed","uptimeMsecs","now","HOUR","uptime","Math","floor","shour","sday","smonth","syear","text","brToNewline","v4","fromString","wordwrap","linkHrefBaseUrl","hideLinkHrefIfSameAsText","ignoreImages","replaceSpaces"],"mappings":"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","file":"renderer.js","sourcesContent":["import _ from 'underscore';\nimport browserify from 'browserify';\nimport DOT from 'dot';\nimport escapeHTML from 'escape-html';\nimport FS from 'q-io/fs';\nimport HTMLToText from 'html-to-text';\nimport merge from 'merge';\nimport micromatch from 'micromatch';\nimport moment from 'moment';\nimport Path from 'path';\nimport UUID from 'uuid';\n\nimport * as Files from './files';\nimport Board from '../boards/board';\nimport * as MiscModel from '../models/misc';\nimport * as Cache from '../helpers/cache';\nimport config from '../helpers/config';\nimport Logger from '../helpers/logger';\nimport * as Tools from '../helpers/tools';\n\nconst TEMPLATES_SOURCE_PATH = Path.resolve(`${__dirname}/../../src/views`);\nconst TEMPLATES_PATH = Path.resolve(`${__dirname}/../../views`);\nconst TEMPLATES_INDEX_PATH = `${TEMPLATES_PATH}/index.js`;\nconst APP_PATH = __dirname.split('/').slice(0, -2).join('/');\nconst DOT_SETTINGS = {\n  evaluate: /\\{\\{([\\s\\S]+?)\\}\\}/g,\n  interpolate: /\\{\\{=([\\s\\S]+?)\\}\\}/g,\n  encode: /\\{\\{!([\\s\\S]+?)\\}\\}/g,\n  use: /\\{\\{#([\\s\\S]+?)\\}\\}/g,\n  define: /\\{\\{##\\s*([\\w\\.$]+)\\s*(\\:|=)([\\s\\S]+?)#\\}\\}/g,\n  conditional: /\\{\\{\\?(\\?)?\\s*([\\s\\S]*?)\\s*\\}\\}/g,\n  iterate: /\\{\\{~\\s*(?:\\}\\}|([\\s\\S]+?)\\s*\\:\\s*([\\w$]+)\\s*(?:\\:\\s*([\\w$]+))?\\s*\\}\\})/g,\n  varname: 'it',\n  strip: false,\n  append: true,\n  selfcontained: false\n};\nconst EXCLUDED_SOURCE_TEMPLATE_FILES = new Set(['index.js.template', '.gitignore']);\nconst ENCODE_HTML_SOURCE = DOT.encodeHTMLSource.toString();\nconst ILLEGAL_CHARACTERS_REGEXP = /[^a-zA-Z\\$_]/gi;\n\nlet templates = {};\n\nfunction escapedSelector(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/[!\"#$%&'()*+,.\\/:;<=>?@[\\\\\\]^`{|}~]/g, '-');\n}\n\nexport function render(templateName, model) {\n  let template = templates[templateName];\n  if (!template) {\n    Logger.error(Tools.translate('Invalid template: $[1]', '', templateName));\n    return '';\n  }\n  let baseModel = MiscModel.base();\n  baseModel.templateName = templateName;\n  let o = MiscModel.boards();\n  baseModel.boards = o.boards;\n  baseModel.boardGroups = o.boardGroups;\n  baseModel.banner = _(_(baseModel.boards.filter((board) => {\n    return board.bannerFileNames.length > 0;\n  }).map((board) => {\n    return board.bannerFileNames.map((fileName) => {\n      return {\n        boardName: board.name,\n        boardTitle: board.title,\n        fileName: fileName\n      };\n    });\n  })).flatten()).sample();\n  baseModel._ = _;\n  baseModel.compareRegisteredUserLevels = Tools.compareRegisteredUserLevels;\n  baseModel.isImageType = Files.isImageType;\n  baseModel.isAudioType = Files.isAudioType;\n  baseModel.isVideoType = Files.isVideoType;\n  baseModel.escaped = escapeHTML;\n  baseModel.escapedSelector = escapedSelector;\n  baseModel.translate = Tools.translate;\n  let timeOffset = config('site.timeOffset');\n  let locale = config('site.locale');\n  let format = config('site.dateFormat');\n  baseModel.formattedDate = (date) => {\n    return moment(date).utcOffset(timeOffset).locale(locale).format(format);\n  };\n  try {\n    return template(merge.recursive(baseModel, model || {}));\n  } catch (err) {\n    Logger.error(err.stack || err);\n    return '';\n  }\n}\n\nexport async function getRouterPaths(description) {\n  let controllers = Tools.requireWrapper(require('../controllers'));\n  let paths = await Tools.series(controllers.routers, async function(router) {\n    if (typeof router.paths !== 'function') {\n      return [];\n    }\n    return await router.paths(description);\n  }, true);\n  return _(paths).flatten().filter(path => !!path);\n}\n\nexport async function rerender(what) {\n  let controllers = Tools.requireWrapper(require('../controllers'));\n  let routers = await Tools.series(controllers.routers, async function(router) {\n    if (typeof router.paths !== 'function' || typeof router.render !== 'function') {\n      return;\n    }\n    let paths = await router.paths();\n    paths = micromatch(paths, what || '**');\n    if (paths.length <= 0) {\n      return;\n    }\n    return {\n      router: router,\n      paths: paths\n    };\n  }, true);\n  return await Tools.series(routers.filter(router => !!router), async function(router) {\n    await Tools.series(router.paths, async function(path) {\n      console.log(Tools.translate('Rendering $[1]…', '', path));\n      let result = await router.router.render(path);\n      return await Tools.series(result, async function(data, id) {\n        return await Cache.writeFile(id, data);\n      });\n    });\n  });\n}\n\nexport async function renderThread(thread) {\n  let board = Board.board(thread.boardName);\n  if (!board) {\n    throw new Error(Tools.translate('Invalid board'));\n  }\n  await Files.renderPostFileInfos(thread.opPost);\n  await board.renderPost(thread.opPost);\n  if (!thread.lastPosts) {\n    return;\n  }\n  await Tools.series(thread.lastPosts, async function(post) {\n    await Files.renderPostFileInfos(post);\n    await board.renderPost(post);\n  });\n}\n\nexport async function generateTemplatingJavaScriptFile() {\n  console.log(Tools.translate('Generating templating JavaScript file…'));\n  let models = JSON.stringify({\n    base: MiscModel.base(),\n    boards: MiscModel.boards(),\n    notFoundImageFileNames: MiscModel.notFoundImageFileNames(),\n    tr: MiscModel.translations()\n  });\n  let fileNames = await FS.listTree(TEMPLATES_PATH, (_, stat) => stat.isFile());\n  let templateNames = fileNames.filter((fileName) => {\n    return fileName.split('.').pop() === 'js' && 'index.js' !== fileName;\n  }).map(fileName => fileName.substr(TEMPLATES_PATH.length + 1));\n  let template = await FS.read(`${TEMPLATES_INDEX_PATH}.template`);\n  await FS.write(TEMPLATES_INDEX_PATH, template.replace('{{models}}', models));\n  let string = '';\n  let stream = browserify({\n    entries: TEMPLATES_INDEX_PATH,\n    debug: false\n  });\n  templateNames.forEach(lib => stream.require(`./views/${lib}`));\n  stream = stream.bundle();\n  stream.on('data', (data) => { string += data; });\n  await new Promise((resolve, reject) => {\n    stream.on('end', resolve);\n    stream.on('error', reject);\n  });\n  string = string.split(APP_PATH).join('.');\n  await FS.write(`${__dirname}/../../public/js/templating.js`, string);\n}\n\nexport async function generateCustomJavaScriptFile() {\n  console.log(Tools.translate('Checking custom JavaScript file existence…'));\n  let exists = await FS.exists(`${__dirname}/../../public/js/custom.js`);\n  if (!exists) {\n    console.log(Tools.translate('Creating dummy custom JavaScript file…'));\n    return await Cache.writeFile('js/custom.js', '');\n  }\n}\n\nexport async function generateCustomCSSFiles() {\n  console.log(Tools.translate('Checking custom CSS files existence…'));\n  let list = await Tools.series(['combined', 'desktop', 'mobile'], async function(type) {\n    let exists = await FS.exists(`${__dirname}/../../public/css/custom-base-${type}.css`);\n    return {\n      type: type,\n      exists: exists\n    };\n  }, true);\n  let types = list.filter(item => !item.exists).map(item => item.type);\n  if (types.length > 0) {\n    console.log(Tools.translate('Creating dummy custom CSS file(s)…'));\n    await Tools.series(types, async function(type) {\n      await Cache.writeFile(`css/custom-base-${type}.css`, '');\n    });\n  }\n}\n\nexport async function compileTemplates() {\n  console.log(Tools.translate('Compiling templates…'));\n  let list = await FS.list(TEMPLATES_PATH);\n  await Tools.series(list.filter(entry => !EXCLUDED_SOURCE_TEMPLATE_FILES.has(entry)), async function(entry) {\n    return await FS.removeTree(`${TEMPLATES_PATH}/${entry}`);\n  });\n  let fileNames = await FS.listTree(TEMPLATES_SOURCE_PATH, (_, stat) => stat.isFile());\n  fileNames = fileNames.map(fileName => fileName.substr(TEMPLATES_SOURCE_PATH.length + 1));\n  let includes = await Tools.series(fileNames, async function(fileName) {\n    if (!/\\.def(\\.dot|\\.jst)?$/.test(fileName)) {\n      return;\n    }\n    let content = await FS.read(`${TEMPLATES_SOURCE_PATH}/${fileName}`);\n    return {\n      name: fileName.split('.').slice(0, -1).join('.'),\n      content: content\n    };\n  }, true);\n  includes = includes.filter(item => !!item).reduce((acc, item) => {\n    acc[item.name] = item.content;\n    return acc;\n  }, {});\n  await Tools.series(fileNames, async function(fileName) {\n    if (!/\\.jst(\\.dot|\\.def)?$/.test(fileName)) {\n      return;\n    }\n    let compiled = '(function(){';\n    let string = await FS.read(`${TEMPLATES_SOURCE_PATH}/${fileName}`);\n    let moduleName = fileName.split('.').shift().replace(ILLEGAL_CHARACTERS_REGEXP, '_');\n    compiled += DOT.template(string, DOT_SETTINGS, includes).toString().replace('anonymous', moduleName);\n    compiled += `var itself=${moduleName}, _encodeHTML=(${ENCODE_HTML_SOURCE}());`;\n    compiled += 'module.exports=itself;})()';\n    if (fileName.split('/').length > 1) {\n      await FS.makeTree(`${TEMPLATES_PATH}/${fileName.split('/').slice(0, -1).join('/')}`);\n    }\n    await FS.write(`${TEMPLATES_PATH}/${fileName.split('.').slice(0, -1).join('.')}.js`, compiled);\n  });\n}\n\nexport async function reloadTemplates() {\n  try {\n    let fileNames = await FS.listTree(TEMPLATES_PATH, (_1, stat) => stat.isFile());\n    templates = fileNames.filter((fileName) => {\n      return fileName.split('.').pop() === 'js' && fileName.split('/').pop() !== 'index.js';\n    }).map((fileName) => {\n      return fileName.substr(TEMPLATES_PATH.length + 1).split('.').slice(0, -1).join('.');\n    }).reduce((acc, templateName) => {\n      let id = require.resolve(`../../views/${templateName}.js`);\n      if (require.cache.hasOwnProperty(id)) {\n        delete require.cache[id];\n      }\n      acc[templateName] = require(id);\n      return acc;\n    }, {});\n  } catch (err) {\n    Logger.error(err.stack || err);\n  }\n}\n\nexport function targetsFromString(string) {\n  if (!string || typeof string !== 'string') {\n    return {};\n  }\n  return string.split(/\\s+/).reduce((acc, part) => {\n    let [boardName, ...postNumbers] = part.split(':');\n    if (boardName) {\n      if (postNumbers.length > 0) {\n        acc[boardName] = postNumbers.map((postNumber) => {\n          return Tools.option(postNumber, 'number', 0, { test: Tools.testPostNumber })\n        }).filter(postNumber => !!postNumber);\n      } else {\n        acc[boardName] = '*';\n      }\n    }\n    return acc;\n  }, {});\n}\n\nexport function postingSpeedString(launchDate, lastPostNumber) {\n  launchDate = +launchDate;\n  if (isNaN(launchDate)) {\n    return '-';\n  }\n  function zeroSpeedString(nonZero) {\n    if (lastPostNumber && launchDate) {\n      return `1 ${nonZero}`;\n    } else {\n      return `0 ${Tools.translate('post(s) per hour.')}`;\n    }\n  }\n  function speedString(duptime) {\n    let ss = '' + (lastPostNumber / duptime).toFixed(1);\n    return (ss.split('.').pop() !== '0') ? ss : ss.split('.').shift();\n  }\n  let uptimeMsecs = _.now() - launchDate;\n  let duptime = uptimeMsecs / Tools.HOUR;\n  let uptime = Math.floor(duptime);\n  let shour = Tools.translate('post(s) per hour.');\n  if (!uptime) {\n    return zeroSpeedString(shour);\n  } else if (Math.floor(lastPostNumber / uptime) > 0) {\n    return `${speedString(duptime)} ${shour}`;\n  }\n  duptime /= 24;\n  uptime = Math.floor(duptime);\n  let sday = Tools.translate('post(s) per day.');\n  if (!uptime) {\n    return zeroSpeedString(sday);\n  } else if (Math.floor(lastPostNumber / uptime) > 0) {\n    return `${speedString(duptime)} ${sday}`;\n  }\n  duptime /= (365 / 12);\n  uptime = Math.floor(duptime);\n  let smonth = Tools.translate('post(s) per month.');\n  if (!uptime) {\n    return zeroSpeedString(smonth);\n  } else if (Math.floor(lastPostNumber / uptime) > 0) {\n    return `${speedString(duptime)} ${smonth}`;\n  }\n  duptime /= 12.0;\n  uptime = Math.floor(duptime);\n  let syear = Tools.translate('post(s) per year.');\n  if (!uptime) {\n    return zeroSpeedString(syear);\n  } else if (Math.floor(lastPostNumber / uptime) > 0) {\n    return `${speedString(duptime)} ${syear}`;\n  }\n  return `0 ${syear}`;\n}\n\nexport function plainText(text, { brToNewline } = {}) {\n  if (!text) {\n    return '';\n  }\n  text = '' + text;\n  let id = UUID.v4();\n  if (brToNewline) {\n    text = text.replace(/<br \\/>/g, id);\n  } else {\n    text = text.replace(/<br \\/>/g, ' ');\n  }\n  text = HTMLToText.fromString(text, {\n    wordwrap: null,\n    linkHrefBaseUrl: `${config('site.protocol')}://${config('site.domain')}`,\n    hideLinkHrefIfSameAsText: true,\n    ignoreImages: true\n  });\n  if (brToNewline) {\n    text = text.split(id).join('\\n');\n  }\n  return text;\n}\n\nexport function toHTML(text, replaceSpaces) {\n  text = escapeHTML(text).split('\\n').join('<br />');\n  if (replaceSpaces) {\n    text = text.split(' ').join('&nbsp;');\n  }\n  return text;\n}\n"]}