{"version":3,"sources":["helpers/post-creation-transaction.js"],"names":["Tools","client","PostCreationTransaction","boardName","files","postNumbers","path","push","threadNumber","postNumber","committed","_rollbackFiles","_rollbackThread","length","_rollbackPosts","error","stack","series","exists","remove","collection","Thread","deleteOne","number","Post","deleteMany","$in"],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;AACA;;IAAYA,K;;AACZ;;;;;;;;;;;;AAEA,IAAIC,SAAS,qCAAb;;IAEqBC,uB;AACnB,mCAAYC,SAAZ,EAAuB;AAAA;;AACrB,SAAKA,SAAL,GAAiBA,SAAjB;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACD;;;;4BAEOC,I,EAAM;AACZ,WAAKF,KAAL,CAAWG,IAAX,CAAgBD,IAAhB;AACD;;;oCAEeE,Y,EAAc;AAC5B,WAAKA,YAAL,GAAoBA,YAApB;AACD;;;kCAEaC,U,EAAY;AACxB,WAAKJ,WAAL,CAAiBE,IAAjB,CAAsBE,UAAtB;AACD;;;6BAEQ;AACP,WAAKC,SAAL,GAAiB,IAAjB;AACD;;;;;;;;;qBAGK,KAAKA,S;;;;;;;;;;uBAID,KAAKC,cAAL,E;;;sBACF,KAAKH,YAAL,GAAoB,C;;;;;;uBAChB,KAAKI,eAAL,E;;;sBAEJ,KAAKP,WAAL,CAAiBQ,MAAjB,GAA0B,C;;;;;;uBACtB,KAAKC,cAAL,E;;;;;;;;;;AAGR,iCAAOC,KAAP,CAAa,YAAIC,KAAJ,eAAb;;;;;;;;;;;;;;;;;;;;;;;;;uBAKIhB,MAAMiB,MAAN,CAAa,KAAKb,KAAlB;AAAA,wEAAyB,kBAAeE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAER,aAAGY,MAAH,CAAUZ,IAAV,CAFQ;;AAAA;AAEvBY,kCAFuB;;AAAA,iCAGvBA,MAHuB;AAAA;AAAA;AAAA;;AAAA;AAAA,mCAInB,aAAGC,MAAH,CAAUb,IAAV,CAJmB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAO3B,6CAAOS,KAAP,CAAa,aAAIC,KAAJ,gBAAb;;AAP2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAzB;;AAAA;AAAA;AAAA;AAAA,oB;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAcef,OAAOmB,UAAP,CAAkB,QAAlB,C;;;AAAfC,sB;;uBACEA,OAAOC,SAAP,CAAiB;AACrBnB,6BAAW,KAAKA,SADK;AAErBoB,0BAAQ,KAAKf;AAFQ,iBAAjB,C;;;;;;;;;;AAKN,iCAAOO,KAAP,CAAa,aAAIC,KAAJ,gBAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAMiBf,OAAOmB,UAAP,CAAkB,MAAlB,C;;;AAAbI,oB;;uBACEA,KAAKC,UAAL,CAAgB;AACpBtB,6BAAW,KAAKA,SADI;AAEpBoB,0BAAQ,EAAEG,KAAK,KAAKrB,WAAZ;AAFY,iBAAhB,C;;;;;;;;;;AAKN,iCAAOU,KAAP,CAAa,aAAIC,KAAJ,gBAAb;;;;;;;;;;;;;;;;;;;;;kBAzEed,uB","file":"post-creation-transaction.js","sourcesContent":["import FS from 'q-io/fs';\n\nimport Logger from './logger';\nimport * as Tools from './tools';\nimport mongodbClient from '../storage/mongodb-client-factory';\n\nlet client = mongodbClient();\n\nexport default class PostCreationTransaction {\n  constructor(boardName) {\n    this.boardName = boardName;\n    this.files = [];\n    this.postNumbers = [];\n  }\n\n  addFile(path) {\n    this.files.push(path);\n  }\n\n  setThreadNumber(threadNumber) {\n    this.threadNumber = threadNumber;\n  }\n\n  addPostNumber(postNumber) {\n    this.postNumbers.push(postNumber);\n  }\n\n  commit() {\n    this.committed = true;\n  }\n\n  async rollback() {\n    if (this.committed) {\n      return;\n    }\n    try {\n      await this._rollbackFiles();\n      if (this.threadNumber > 0) {\n        await this._rollbackThread();\n      }\n      if (this.postNumbers.length > 0) {\n        await this._rollbackPosts();\n      }\n    } catch (err) {\n      Logger.error(err.stack || err);\n    }\n  }\n\n  async _rollbackFiles() {\n    await Tools.series(this.files, async function(path) {\n      try {\n        let exists = await FS.exists(path);\n        if (exists) {\n          await FS.remove(path);\n        }\n      } catch (err) {\n        Logger.error(err.stack || err);\n      }\n    });\n  }\n\n  async _rollbackThread() {\n    try {\n      let Thread = await client.collection('thread');\n      await Thread.deleteOne({\n        boardName: this.boardName,\n        number: this.threadNumber\n      });\n    } catch (err) {\n      Logger.error(err.stack || err);\n    }\n  }\n\n  async _rollbackPosts() {\n    try {\n      let Post = await client.collection('post');\n      await Post.deleteMany({\n        boardName: this.boardName,\n        number: { $in: this.postNumbers }\n      });\n    } catch (err) {\n      Logger.error(err.stack || err);\n    }\n  }\n}\n"]}