{"version":3,"sources":["controllers/api.js"],"names":["Files","Tools","BoardsModel","ChatsModel","FilesModel","PostsModel","ThreadsModel","UsersModel","GET_FILE_HEADERS_TIMEOUT","MINUTE","TEXT_FORMATS","Set","router","Router","get","req","res","next","query","boardName","translate","checkUserBan","ip","getPost","postNumber","withFileInfos","withReferences","withExtraData","post","json","board","renderPostFileInfos","renderPost","getThreadInfo","threadNumber","lastPostNumber","threadInfo","threads","isArray","boardNames","map","thread","split","shift","series","threadInfos","getThreadLastPostNumber","threadLastPostNumber","threadLastPostNumbers","fileInfo","fileName","getFileInfoByName","fileHash","getFileInfoByHash","exists","fileInfoExistsByName","fileInfoExistsByHash","getLastPostNumber","getLastPostNumbers","lastPostNumbers","getChatMessages","Date","lastRequestDate","chats","key","getSynchronizationData","data","getUserCaptchaQuota","hashpass","quota","levels","err","isModer","getUserIP","addIPv4","correctAddress","filter","getBannedUser","bannedUser","subnet","getBannedUsers","users","isSuperuser","mayBeHashpass","getRegisteredUser","user","getRegisteredUsers","dir","slice","path","__dirname","list","file","stat","node","id","text","isDirectory","type","children","isFile","code","status","encoding","has","pop","undefined","read","content","url","options","method","timeout","proxy","recursive","host","port","headers","auth","request","response","captchaIDs","forEach","captcha","apiRoutes","route","handler","name","module","exports"],"mappings":"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","file":"api.js","sourcesContent":["import _ from 'underscore';\nimport Express from 'express';\nimport FS from 'q-io/fs';\nimport HTTP from 'q-io/http';\nimport merge from 'merge';\n\nimport Board from '../boards/board';\nimport Captcha from '../captchas/captcha';\nimport * as Files from '../core/files';\nimport config from '../helpers/config';\nimport * as Tools from '../helpers/tools';\nimport * as BoardsModel from '../models/boards';\nimport * as ChatsModel from '../models/chats';\nimport * as FilesModel from '../models/files';\nimport * as PostsModel from '../models/posts';\nimport * as ThreadsModel from '../models/threads';\nimport * as UsersModel from '../models/users';\n\nconst GET_FILE_HEADERS_TIMEOUT = Tools.MINUTE;\nconst TEXT_FORMATS = new Set(['txt', 'js', 'json', 'jst', 'def', 'html', 'xml', 'css', 'md', 'example', 'gitignore',\n  'log']);\n\nlet router = Express.Router();\n\nrouter.get('/api/post.json', async function(req, res, next) {\n  if (!req.query.boardName) {\n    return next(Tools.translate('Invalid board'));\n  }\n  try {\n    await UsersModel.checkUserBan(req.ip, req.query.boardName);\n    let post = await PostsModel.getPost(req.query.boardName, +req.query.postNumber, {\n      withFileInfos: true,\n      withReferences: true,\n      withExtraData: true\n    });\n    if (!post) {\n      return res.json(null);\n    }\n    let board = Board.board(post.boardName);\n    await Files.renderPostFileInfos(post);\n    post = await board.renderPost(post);\n    res.json(post || null);\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.get('/api/threadInfo.json', async function(req, res, next) {\n  if (!req.query.boardName) {\n    return next(Tools.translate('Invalid board'));\n  }\n  try {\n    await UsersModel.checkUserBan(req.ip, req.query.boardName);\n    let threadInfo = await ThreadsModel.getThreadInfo(req.query.boardName, +req.query.threadNumber,\n      { lastPostNumber: +req.query.lastPostNumber });\n    res.json(threadInfo);\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.get('/api/threadInfos.json', async function(req, res, next) {\n  let threads = req.query.threads;\n  if (!_(threads).isArray()) {\n    threads = [threads];\n  }\n  try {\n    let boardNames = (threads || []).map(thread => thread.split(':').shift());\n    await UsersModel.checkUserBan(req.ip, boardNames);\n    let threadInfos = await Tools.series(threads || [], async function(thread) {\n      let [boardName, threadNumber, lastPostNumber] = thread.split(':');\n      return await ThreadsModel.getThreadInfo(boardName, +threadNumber, { lastPostNumber: +lastPostNumber });\n    }, true);\n    res.json(threadInfos);\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.get('/api/threadLastPostNumber.json', async function(req, res, next) {\n  let boardName = req.query.boardName;\n  if (!boardName) {\n    return next(Tools.translate('Invalid board'));\n  }\n  try {\n    await UsersModel.checkUserBan(req.ip, boardName);\n    let threadLastPostNumber = await ThreadsModel.getThreadLastPostNumber(boardName, +req.query.threadNumber);\n    res.json({ lastPostNumber: threadLastPostNumber });\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.get('/api/threadLastPostNumbers.json', async function(req, res, next) {\n  let threads = req.query.threads;\n  if (!_(threads).isArray()) {\n    threads = [threads];\n  }\n  try {\n    let boardNames = (threads || []).map(thread => thread.split(':').shift());\n    await UsersModel.checkUserBan(req.ip, boardNames);\n    let threadLastPostNumbers = await Tools.series(threads || [], async function(thread) {\n      let [boardName, threadNumber] = thread.split(':');\n      return await ThreadsModel.getThreadLastPostNumber(boardName, +threadNumber);\n    }, true);\n    res.json(threadLastPostNumbers);\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.get('/api/fileInfo.json', async function(req, res, next) {\n  try {\n    let fileInfo = null;\n    if (req.query.fileName) {\n      fileInfo = await FilesModel.getFileInfoByName(req.query.fileName);\n    } else if (req.query.fileHash) {\n      fileInfo = await FilesModel.getFileInfoByHash(req.query.fileHash);\n    } else {\n      return next(Tools.translate('Neither file name nor hash is specified'));\n    }\n    res.json(fileInfo);\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.get('/api/fileExistence.json', async function(req, res, next) {\n  try {\n    let exists = false;\n    if (req.query.fileName) {\n      exists = await FilesModel.fileInfoExistsByName(req.query.fileName);\n    } else if (req.query.fileHash) {\n      exists = await FilesModel.fileInfoExistsByHash(req.query.fileHash);\n    } else {\n      return next(Tools.translate('Neither file name nor hash is specified'));\n    }\n    res.json(exists);\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.get('/api/lastPostNumber.json', async function(req, res, next) {\n  if (!req.query.boardName) {\n    return next(Tools.translate('Invalid board'));\n  }\n  try {\n    let lastPostNumber = await BoardsModel.getLastPostNumber(req.query.boardName);\n    res.json({ lastPostNumber: lastPostNumber });\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.get('/api/lastPostNumbers.json', async function(req, res, next) {\n  let boardNames = req.query.boardNames;\n  if (!boardNames) {\n    boardNames = Board.boardNames();\n  } else if (!_(boardNames).isArray()) {\n    boardNames = [boardNames];\n  }\n  try {\n    let lastPostNumbers = await BoardsModel.getLastPostNumbers(boardNames);\n    res.json(lastPostNumbers);\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.get('/api/chatMessages.json', async function(req, res, next) {\n  try {\n    let chats = await ChatsModel.getChatMessages(req, new Date(req.query.lastRequestDate));\n    res.json(chats);\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.get('/api/synchronization.json', async function(req, res, next) {\n  if (!req.query.key) {\n    return next(Tools.translate('No key specified'));\n  }\n  try {\n    let data = await UsersModel.getSynchronizationData(req.query.key);\n    res.json(data);\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.get('/api/captchaQuota.json', async function(req, res, next) {\n  if (!req.query.boardName) {\n    return next(Tools.translate('Invalid board'));\n  }\n  try {\n    await UsersModel.checkUserBan(req.ip, req.query.boardName);\n    let quota = await UsersModel.getUserCaptchaQuota(req.query.boardName, req.hashpass || req.ip);\n    res.json({ quota: quota });\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.get('/api/userLevels.json', async function(req, res, next) {\n  try {\n    res.json(req.levels || {});\n  } catch(err) {\n    next(err);\n  }\n});\n\nrouter.get('/api/userIp.json', async function(req, res, next) {\n  if (!req.query.boardName) {\n    return next(Tools.translate('Invalid board'));\n  }\n  try {\n    await UsersModel.checkUserBan(req.ip, req.query.boardName);\n    if (!req.isModer()) {\n      return next(Tools.translate('Not enough rights'));\n    }\n    let ip = await UsersModel.getUserIP(req.query.boardName, +req.query.postNumber);\n    res.json(Tools.addIPv4({ ip: ip }));\n  } catch(err) {\n    next(err);\n  }\n});\n\nrouter.get('/api/bannedUser.json', async function(req, res, next) {\n  let ip = Tools.correctAddress(req.query.ip);\n  if (!ip) {\n    return next(Tools.translate('Invalid IP address'));\n  }\n  if (!req.isModer()) {\n    return next(Tools.translate('Not enough rights'));\n  }\n  try {\n    let boardNames = Board.boardNames().filter(boardName => req.isModer(boardName));\n    let bannedUser = await UsersModel.getBannedUser(ip, boardNames);\n    bannedUser.subnet = bannedUser.subnet ? bannedUser.subnet.subnet : 0;\n    res.json(Tools.addIPv4(bannedUser));\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.get('/api/bannedUsers.json', async function(req, res, next) {\n  if (!req.isModer()) {\n    return next(Tools.translate('Not enough rights'));\n  }\n  try {\n    let boardNames = Board.boardNames().filter(boardName => req.isModer(boardName));\n    let users = await UsersModel.getBannedUsers(boardNames);\n    res.json(_(users).map((bannedUser) => {\n      bannedUser.subnet = bannedUser.subnet ? bannedUser.subnet.subnet : 0;\n      return Tools.addIPv4(bannedUser);\n    }));\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.get('/api/registeredUser.json', async function(req, res, next) {\n  if (!req.isSuperuser()) {\n    return next(Tools.translate('Not enough rights'));\n  }\n  let hashpass = req.query.hashpass;\n  if (!Tools.mayBeHashpass(hashpass)) {\n    return next(Tools.translate('Invalid hashpass'));\n  }\n  try {\n    let user = await UsersModel.getRegisteredUser(hashpass);\n    res.json(Tools.addIPv4(user));\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.get('/api/registeredUsers.json', async function(req, res, next) {\n  if (!req.isSuperuser()) {\n    return next(Tools.translate('Not enough rights'));\n  }\n  try {\n    let users = await UsersModel.getRegisteredUsers();\n    res.json(users.map(Tools.addIPv4));\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.get('/api/fileTree.json', async function(req, res, next) {\n  if (!req.isSuperuser()) {\n    return next(Tools.translate('Not enough rights'));\n  }\n  try {\n    let dir = req.query.dir;\n    if (!dir || '#' === dir) {\n      dir = './';\n    }\n    if ('/' !== dir.slice(-1)[0]) {\n      dir += '/';\n    }\n    let path = `${__dirname}/../../${dir}`;\n    let list = await FS.list(path);\n    list = await Tools.series(list, async function(file) {\n      let stat = await FS.stat(`${path}/${file}`);\n      let node = {\n        id: dir + file,\n        text: file\n      };\n      if (stat.isDirectory()) {\n        node.type = 'folder';\n        node.children = true;\n      } else if (stat.isFile()) {\n        node.type = 'file';\n      }\n      return node;\n    }, true);\n    res.json(list);\n  } catch (err) {\n    if ('ENOENT' === err.code) {\n      err.status = 404;\n    } else if ('ENOTDIR' === err.code) {\n      err = Tools.translate('Not a directory');\n    }\n    next(err);\n  }\n});\n\nrouter.get('/api/fileContent.json', async function(req, res, next) {\n  if (!req.isSuperuser()) {\n    return next(Tools.translate('Not enough rights'));\n  }\n  try {\n    let encoding = !TEXT_FORMATS.has((req.query.fileName || '').split('.').pop()) ? 'b' : undefined;\n    let content = await FS.read(`${__dirname}/../../${req.query.fileName}`, encoding);\n    res.json({ content: content });\n  } catch (err) {\n    if ('ENOENT' === err.code) {\n      err.status = 404;\n    } else if ('EISDIR' === err.code) {\n      err = Tools.translate('Not a file');\n    }\n    next(err);\n  }\n});\n\nrouter.get('/api/fileHeaders.json', async function(req, res, next) {\n  if (!req.query.url) {\n    return next(Tools.translate('Invalid URL'));\n  }\n  try {\n    let options = {\n      method: 'HEAD',\n      timeout: GET_FILE_HEADERS_TIMEOUT\n    };\n    let proxy = config.proxy();\n    if (proxy) {\n      options = merge.recursive(options, {\n        host: proxy.host,\n        port: proxy.port,\n        headers: { 'Proxy-Authorization': proxy.auth },\n        path: req.query.url,\n      });\n    } else {\n      options.url = req.query.url;\n    }\n    let response = await HTTP.request(options);\n    if (200 !== +response.status) {\n      return next(Tools.translate('Failed to get file headers'));\n    }\n    res.json(response.headers);\n  } catch (err) {\n    next(err);\n  }\n});\n\nCaptcha.captchaIDs().forEach((id) => {\n  Captcha.captcha(id).apiRoutes().forEach((route) => {\n    router[route.method](`/api${route.path}`, route.handler);\n  });\n});\n\nBoard.boardNames().forEach((name) => {\n  Board.board(name).apiRoutes().forEach((route) => {\n    router[route.method](`/api${route.path}`, route.handler);\n  });\n});\n\nmodule.exports = router;\n"]}