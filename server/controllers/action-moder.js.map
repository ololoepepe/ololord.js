{"version":3,"sources":["controllers/action-moder.js"],"names":[],"mappings":"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","file":"controllers/action-moder.js","sourcesContent":["import _ from 'underscore';\nimport express from 'express';\nimport moment from 'moment';\n\nimport Board from '../boards/board';\nimport config from '../helpers/config';\nimport * as Files from '../core/files';\nimport geolocation from '../core/geolocation';\nimport PostCreationTransaction from '../helpers/post-creation-transaction';\nimport * as Tools from '../helpers/tools';\nimport * as ThreadsModel from '../models/threads';\nimport * as UsersModel from '../models/users';\n\nlet router = express.Router();\n\nconst MIN_TIME_OFFSET = -720;\nconst MAX_TIME_OFFSET = 840;\nconst BAN_EXPIRES_FORMAT = 'YYYY/MM/DD HH:mm ZZ';\nconst MIN_SUBNET_IP_V4 = 22;\nconst MAX_SUBNET_IP_V4 = 32;\nconst MIN_SUBNET_IP_V6 = 64;\nconst MAX_SUBNET_IP_V6 = 128;\n\nfunction getBans(fields) {\n  let { timeOffset } = fields;\n  let bans = _(fields).pick((value, name) => {\n    return /^banBoard_\\S+$/.test(name) && 'NONE' !== fields[`banLevel_${value}`];\n  });\n  timeOffset = Tools.option(timeOffset, 'number', config('site.timeOffset'), {\n    test: (o) => { return (o >= MIN_TIME_OFFSET) && (o <= MAX_TIME_OFFSET); }\n  });\n  return _(bans).reduce((acc, value, name) => {\n    let expiresAt = fields[`banExpires_${value}`];\n    if (expiresAt) {\n      let hours = Math.floor(Math.abs(timeOffset) / 60);\n      let minutes = Math.abs(timeOffset) % 60;\n      let tz = ((timeOffset > 0) ? '+' : '') + Tools.pad(hours, 2, '0') + ':' + Tools.pad(minutes, 2, '0');\n      expiresAt = +moment(`${expiresAt} ${tz}`, BAN_EXPIRES_FORMAT);\n      if (expiresAt < (_.now() + Tools.SECOND)) {\n        expiresAt = null;\n      }\n    } else {\n      expiresAt = null;\n    }\n    acc[value] = {\n      boardName: value,\n      expiresAt: expiresAt,\n      level: fields[`banLevel_${value}`],\n      reason: fields[`banReason_${value}`],\n      postNumber: Tools.option(fields[`banPostNumber_${value}`], 'number', null, { test: Tools.testPostNumber })\n    };\n    return acc;\n  }, {});\n}\n\nrouter.post('/action/banUser', async function(req, res, next) {\n  try {\n    if (!req.isModer()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields } = await Files.parseForm(req);\n    let { userIp, subnet } = fields;\n    userIp = Tools.correctAddress(userIp);\n    if (!userIp) {\n      throw new Error(Tools.translate('Invalid IP address'));\n    }\n    subnet = Tools.subnet(userIp, subnet);\n    if (subnet) {\n      let isIPv4 = /^\\:\\:[0-9a-f]{1,4}\\:[0-9a-f]{1,4}$/.test(userIp);\n      if ((isIPv4 && (subnet.subnet < MIN_SUBNET_IP_V4)) || (!isIPv4 && (subnet.subnet < MIN_SUBNET_IP_V6))) {\n        let r4 = `${MIN_SUBNET_IP_V4}-${MAX_SUBNET_IP_V4}`;\n        let r6 = `${MIN_SUBNET_IP_V6}-${MAX_SUBNET_IP_V6}`;\n        let t = Tools.translate('Subnet is too large. $[1] for IPv4 and $[2] for IPv6 are allowed', '', r4, r6);\n        throw new Error(t);\n      }\n    }\n    if (userIp === req.ip) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let bans = getBans(fields);\n    let banLevels = Tools.BAN_LEVELS.slice(1);\n    _(bans).each((ban) => {\n      if (!Board.board(ban.boardName)) {\n        throw new Error(Tools.translate('Invalid board: $[1]', '', ban.boardName));\n      }\n      if (banLevels.indexOf(ban.level) < 0) {\n        throw new Error(Tools.translate('Invalid ban level: $[1]', '', ban.level));\n      }\n    });\n    let bannedUser = await UsersModel.getBannedUser(userIp);\n    let oldBans = bannedUser ? bannedUser.bans : {};\n    let date = Tools.now();\n    let modifiedBanBoards = new Set();\n    let newBans = Board.boardNames().reduce((acc, boardName) => {\n      if (req.isModer(boardName)) {\n        if (bans.hasOwnProperty(boardName)) {\n          let ban = bans[boardName];\n          ban.createdAt = date;\n          acc[boardName] = ban;\n          modifiedBanBoards.add(boardName);\n        } else if (oldBans.hasOwnProperty(boardName)) {\n          modifiedBanBoards.add(boardName);\n        }\n      } else if (oldBans.hasOwnProperty(boardName)) {\n        acc[boardName] = oldBans[boardName];\n      }\n      return acc;\n    }, {});\n    let levels = await UsersModel.getRegisteredUserLevelsByIp(userIp, subnet);\n    modifiedBanBoards.forEach((boardName) => {\n      let level = req.level(boardName);\n      if (!req.isSuperuser(boardName) && Tools.compareRegisteredUserLevels(level, levels[boardName]) <= 0) {\n        throw new Error(Tools.translate('Not enough rights'));\n      }\n    });\n    await UsersModel.banUser(userIp, newBans, subnet);\n    res.json({});\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.post('/action/delall', async function(req, res, next) {\n  try {\n    if (!req.isModer()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields } = await Files.parseForm(req);\n    let { userIp } = fields;\n    userIp = Tools.correctAddress(userIp);\n    if (!userIp) {\n      throw new Error(Tools.translate('Invalid IP address'));\n    }\n    if (userIp === req.ip) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let boardNames = _(fields).filter((boardName, key) => {\n      return /^board_\\S+$/.test(key);\n    });\n    if (boardNames.length <= 0) {\n      throw new Error(Tools.translate('No board specified'));\n    }\n    boardNames.forEach((boardName) => {\n      if (!Board.board(boardName)) {\n        throw new Error(Tools.translate('Invalid board'));\n      }\n      if (!req.isModer(boardName)) {\n        throw new Error(Tools.translate('Not enough rights'));\n      }\n    });\n    let geolocationInfo = await geolocation(req.ip);\n    await UsersModel.checkUserBan(req.ip, boardNames, {\n      write: true,\n      geolocationInfo: geolocationInfo\n    });\n    await BoardsModel.delall(req, userIp, boardNames);\n    res.json({});\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.post('/action/moveThread', async function(req, res, next) {\n  let transaction;\n  try {\n    let { fields } = await Files.parseForm(req);\n    let { boardName, threadNumber, targetBoardName, password } = fields;\n    if (!Board.board(boardName) || !Board.board(targetBoardName)) {\n      throw new Error(Tools.translate('Invalid board'));\n    }\n    if (boardName === targetBoardName) {\n      throw new Error(Tools.translate('Source and target boards are the same'));\n    }\n    threadNumber = Tools.option(threadNumber, 'number', 0, { test: Tools.testPostNumber });\n    if (!threadNumber) {\n      throw new Error(Tools.translate('Invalid thread number'));\n    }\n    if (!req.isModer(boardName) || !req.isModer(targetBoardName)) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let geolocationInfo = await geolocation(req.ip);\n    await UsersModel.checkUserBan(req.ip, [boardName, targetBoardName], {\n      write: true,\n      geolocationInfo: geolocationInfo\n    });\n    await UsersModel.checkUserPermissions(req, boardName, threadNumber, 'moveThread', Tools.sha1(password));\n    transaction = new PostCreationTransaction(boardName);\n    let result = await ThreadsModel.moveThread(boardName, threadNumber, targetBoardName, transaction);\n    res.json(result);\n  } catch (err) {\n    if (transaction) {\n      transaction.rollback();\n    }\n    next(err);\n  }\n});\n\nrouter.post('/action/setThreadFixed', async function(req, res, next) {\n  try {\n    let { fields } = await Files.parseForm(req);\n    let { boardName, threadNumber, fixed, password } = fields;\n    if (!Board.board(boardName)) {\n      throw new Error(Tools.translate('Invalid board'));\n    }\n    threadNumber = Tools.option(threadNumber, 'number', 0, { test: Tools.testPostNumber });\n    if (!threadNumber) {\n      throw new Error(Tools.translate('Invalid thread number'));\n    }\n    if (!req.isModer(boardName)) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let geolocationInfo = await geolocation(req.ip);\n    await UsersModel.checkUserBan(req.ip, boardName, {\n      write: true,\n      geolocationInfo: geolocationInfo\n    });\n    await UsersModel.checkUserPermissions(req, boardName, threadNumber, 'setThreadFixed', Tools.sha1(password));\n    await ThreadsModel.setThreadFixed(boardName, threadNumber, 'true' === fixed);\n    res.json({});\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.post('/action/setThreadClosed', async function(req, res, next) {\n  try {\n    let { fields } = await Files.parseForm(req);\n    let { boardName, threadNumber, closed, password } = fields;\n    if (!Board.board(boardName)) {\n      throw new Error(Tools.translate('Invalid board'));\n    }\n    threadNumber = Tools.option(threadNumber, 'number', 0, { test: Tools.testPostNumber });\n    if (!threadNumber) {\n      throw new Error(Tools.translate('Invalid thread number'));\n    }\n    if (!req.isModer(boardName)) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let geolocationInfo = await geolocation(req.ip);\n    await UsersModel.checkUserBan(req.ip, boardName, {\n      write: true,\n      geolocationInfo: geolocationInfo\n    });\n    await UsersModel.checkUserPermissions(req, boardName, threadNumber, 'setThreadClosed', Tools.sha1(password));\n    await ThreadsModel.setThreadClosed(boardName, threadNumber, 'true' === closed);\n    res.json({});\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.post('/action/setThreadUnbumpable', async function(req, res, next) {\n  try {\n    let { fields } = await Files.parseForm(req);\n    let { boardName, threadNumber, unbumpable, password } = fields;\n    if (!Board.board(boardName)) {\n      throw new Error(Tools.translate('Invalid board'));\n    }\n    threadNumber = Tools.option(threadNumber, 'number', 0, { test: Tools.testPostNumber });\n    if (!threadNumber) {\n      throw new Error(Tools.translate('Invalid thread number'));\n    }\n    if (!req.isModer(boardName)) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let geolocationInfo = await geolocation(req.ip);\n    await UsersModel.checkUserBan(req.ip, boardName, {\n      write: true,\n      geolocationInfo: geolocationInfo\n    });\n    await UsersModel.checkUserPermissions(req, boardName, threadNumber, 'setThreadUnbumpable', Tools.sha1(password));\n    await ThreadsModel.setThreadUnbumpable(boardName, threadNumber, 'true' === unbumpable);\n    res.json({});\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;\n"],"sourceRoot":"/source/"}