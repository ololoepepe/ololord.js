{"version":3,"sources":["controllers/action-manage.js"],"names":[],"mappings":"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","file":"controllers/action-manage.js","sourcesContent":["import _ from 'underscore';\nimport express from 'express';\n\nimport * as Files from '../core/files';\nimport * as Renderer from '../core/renderer';\nimport * as IPC from '../helpers/ipc';\nimport * as Tools from '../helpers/tools';\nimport * as PostsModel from '../models/posts';\nimport * as UsersModel from '../models/users';\n\nlet router = express.Router();\n\nasync function getRegisteredUserData(fields) {\n  let ips = Tools.ipList(fields.ips);\n  if (typeof ips === 'string') {\n    throw new Error(ips);\n  }\n  let levels = _(fields).map((value, name) => {\n    let match = name.match(/^accessLevelBoard_(\\S+)$/);\n    if (!match || 'NONE' === value) {\n      return;\n    }\n    return {\n      boardName: match[1],\n      level: value\n    };\n  }).filter(level => !!level);\n  return {\n    levels: levels,\n    ips: ips\n  };\n}\n\nrouter.post('/action/registerUser', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields } = await Files.parseForm(req);\n    let { password } = fields;\n    if (!password) {\n      throw new Error(Tools.translate('Invalid password'));\n    }\n    let { levels, ips } = await getRegisteredUserData(fields);\n    let hashpass = Tools.mayBeHashpass(password) ? password : Tools.toHashpass(password);\n    await UsersModel.registerUser(hashpass, levels, ips);\n    res.json({ hashpass: hashpass });\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.post('/action/updateRegisteredUser', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields } = await Files.parseForm(req);\n    let { hashpass } = fields;\n    if (!hashpass || !Tools.mayBeHashpass(hashpass)) {\n      throw new Error(Tools.translate('Invalid hashpass'));\n    }\n    let { levels, ips } = await getRegisteredUserData(fields);\n    await UsersModel.updateRegisteredUser(hashpass, levels, ips);\n    res.json({});\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.post('/action/unregisterUser', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { hashpass } } = await Files.parseForm(req);\n    if (!hashpass || !Tools.mayBeHashpass(hashpass)) {\n      throw new Error(Tools.translate('Invalid hashpass'));\n    }\n    await UsersModel.unregisterUser(hashpass);\n    res.json({});\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.post('/action/superuserAddFile', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { dir, fileName, isDir }, files } = await Files.parseForm(req);\n    if (!dir || typeof dir !== 'string') {\n      throw new Error(Tools.translate('Invalid dir'));\n    }\n    if (!fileName || typeof fileName !== 'string') {\n      throw new Error(Tools.translate('Invalid file name'));\n    }\n    await Files.createFile(dir, fileName, {\n      isDir: ('true' === isDir),\n      file: _(files).toArray()[0]\n    });\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err, true));\n  }\n});\n\nrouter.post('/action/superuserEditFile', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { fileName, content } } = await Files.parseForm(req);\n    if (!fileName || typeof fileName !== 'string') {\n      throw new Error(Tools.translate('Invalid file name'));\n    }\n    await Files.editFile(fileName, content);\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err, false));\n  }\n});\n\nrouter.post('/action/superuserRenameFile', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { oldFileName, fileName } } = await Files.parseForm(req);\n    if (!oldFileName || typeof oldFileName !== 'string' || !fileName || typeof fileName !== 'string') {\n      throw new Error(Tools.translate('Invalid file name'));\n    }\n    await Files.renameFile(oldFileName, fileName);\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err));\n  }\n});\n\nrouter.post('/action/superuserDeleteFile', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { fileName } } = await Files.parseForm(req);\n    if (!fileName || typeof fileName !== 'string') {\n      throw new Error(Tools.translate('Invalid file name'));\n    }\n    await Files.deleteFile(fileName);\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err));\n  }\n});\n\nrouter.post('/action/superuserRerender', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { targets, archive } } = await Files.parseForm(req);\n    if (typeof targets !== 'string') {\n      throw new Error(Tools.translate('Invalid targets'));\n    }\n    if (targets) {\n      await Renderer.rerender(targets);\n    } else if ('true' === archive) {\n      await Renderer.rerender();\n    } else {\n      await Renderer.rerender(['**', '!/*/arch/*']);\n    }\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err));\n  }\n});\n\nrouter.post('/action/superuserMarkupPosts', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { targets } } = await Files.parseForm(req);\n    if (typeof targets !== 'string') {\n      throw new Error(Tools.translate('Invalid targets'));\n    }\n    await PostsModel.markupPosts(Renderer.targetsFromString(targets));\n    //TODO: Rerender corresponding pages?\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err));\n  }\n});\n\nrouter.post('/action/superuserReload', async function(req, res, next) {\n  try {\n    if (!req.isSuperuser()) {\n      throw new Error(Tools.translate('Not enough rights'));\n    }\n    let { fields: { boards, templates } } = await Files.parseForm(req);\n    if (typeof targets !== 'string') {\n      throw new Error(Tools.translate('Invalid targets'));\n    }\n    if ('true' === boards) {\n      await IPC.send('reloadBoards');\n    }\n    if ('true' === templates) {\n      await IPC.send('reloadTemplates');\n    }\n    res.json({});\n  } catch (err) {\n    next(Tools.processError(err));\n  }\n});\n\nexport default router;\n"],"sourceRoot":"/source/"}