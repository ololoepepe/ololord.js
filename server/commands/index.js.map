{"version":3,"sources":["commands/index.js"],"names":[],"mappings":"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","file":"commands/index.js","sourcesContent":["import _ from 'underscore';\n\nimport config from '../helpers/config';\nimport * as Tools from '../helpers/tools';\n\nconst vorpal = require('vorpal')();\n\nfunction setupMethods(command) {\n  let prompt = command.prompt;\n\n  command.prompt = async function(options) {\n    return new Promise((resolve, reject) => {\n      let simple = (typeof options === 'string');\n      if (simple) {\n        options = {\n          message: options,\n          name: 'input'\n        };\n      }\n      prompt.call(command, options, (result) => {\n        resolve(simple ? result.input : result);\n      });\n    });\n  };\n\n  command.requestPassword = async function() {\n    let result = await command.prompt({\n      type: 'password',\n      name: 'password',\n      message: Tools.translate('Enter password: ')\n    });\n    let password = result.password;\n    if (!password) {\n      throw new Error(Tools.translate('Invalid password'));\n    }\n    if (!Tools.mayBeHashpass(password)) {\n      return {\n        password: password,\n        notHashpass: true\n      };\n    }\n    result = await command.prompt({\n      type: 'confirm',\n      name: 'hashpass',\n      default: true,\n      message: Tools.translate(\"That is a hashpass, isn't it? \")\n    });\n    return {\n      password: password,\n      notHashpass: !result || !result.hashpass\n    };\n  };\n}\n\nvorpal.installHandler = function(command, handler, { description, alias, options } = {}) {\n  command = vorpal.command(command, description || undefined).action(async function(args, callback) {\n    try {\n      setupMethods(this);\n      let result = await handler.call(this, args);\n      if (result) {\n        console.log(result);\n      }\n      callback();\n    } catch (err) {\n      console.log(err.stack || err);\n      callback();\n    }\n  }).cancel(() => {\n    console.log(Tools.translate('Cancelled'));\n  });\n  if (alias) {\n    if (_(alias).isArray()) {\n      command.alias(...alias);\n    } else {\n      command.alias(alias);\n    }\n  }\n  if (_(options).isArray()) {\n    options.forEach((option) => {\n      command.option(option.value, option.description || undefined);\n    });\n  }\n};\n\nvorpal.find('exit').remove();\n\nexport default function commands(basicOnly, prompt) {\n  let plugins = Tools.loadPlugins([__dirname, `${__dirname}/custom`], (fileName, _1, _2, path) => {\n    return ('index.js' !== fileName) || (path.split('/') === 'custom');\n  }).filter(plugin => config(`system.commands.${plugin.command.split(/\\s/)[0]}`, true));\n  if (basicOnly) {\n    plugins = plugins.filter(plugin => plugin.basic);\n  }\n  plugins.forEach((plugin) => {\n    vorpal.installHandler(plugin.command, plugin.handler, plugin.options);\n  });\n  console.log(Tools.translate(\"Type 'help' for commands\"));\n  vorpal.delimiter(prompt || 'ololord.js>').show();\n  return vorpal;\n}\n"],"sourceRoot":"/source/"}