{"version":3,"sources":["commands/index.js"],"names":[],"mappings":"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","file":"commands/index.js","sourcesContent":["import _ from 'underscore';\n\nimport config from '../helpers/config';\nimport * as Tools from '../helpers/tools';\n\nlet vorpal = require('vorpal')();\n\nlet prompt = vorpal.prompt;\n\nvorpal.prompt = async function(options) {\n  return new Promise((resolve, reject) => {\n    let simple = (typeof options === 'string');\n    if (simple) {\n      options = {\n        message: options,\n        name: 'input'\n      };\n    }\n    prompt.call(this, options, (result) => {\n      resolve(simple ? result.input : result);\n    });\n  });\n};\n\nvorpal.requestPassword = async function() {\n  let result = await this.prompt({\n    type: 'password',\n    name: 'password',\n    message: Tools.translate('Enter password: ')\n  });\n  let password = result.password;\n  if (!password) {\n    throw new Error(Tools.translate('Invalid password'));\n  }\n  if (!Tools.mayBeHashpass(password)) {\n    return;\n  }\n  result = await this.prompt({\n    type: 'confirm',\n    name: 'hashpass',\n    default: true,\n    message: Tools.translate(\"That is a hashpass, isn't it? \")\n  });\n  return {\n    password: password,\n    notHashpass: !result || !result.hashpass\n  };\n};\n\nvorpal.installHandler = function(command, handler, { description, alias, options } = {}) {\n  command = vorpal.command(command, description || undefined).action(async function(args, callback) {\n    try {\n      let result = await handler.call(this, args);\n      if (result) {\n        console.log(result);\n      }\n      callback();\n    } catch (err) {\n      console.log(err.stack || err);\n      callback();\n    }\n  }).cancel(() => {\n    console.log(Tools.translate('Cancelled'));\n  });\n  if (alias) {\n    if (_(alias).isArray()) {\n      command.alias(...alias);\n    } else {\n      command.alias(alias);\n    }\n  }\n  if (_(options).isArray()) {\n    options.forEach((option) => {\n      command.option(option.value, option.description || undefined);\n    });\n  }\n};\n\nvorpal.find('exit').remove();\n\nTools.loadPlugins([__dirname, `${__dirname}/custom`], (fileName, _1, _2, path) => {\n  return ('index.js' !== fileName) || (path.split('/') === 'custom');\n}).filter(plugin => config(`system.commands.${plugin.command.split(/\\s/)[0]}`, true)).forEach((plugin) => {\n  vorpal.installHandler(plugin.command, plugin.handler, plugin.options);\n});\n\nexport default function commands() {\n  console.log(Tools.translate(\"Type 'help' for commands\"));\n  vorpal.delimiter('ololord.js>').show();\n  return vorpal;\n}\n"],"sourceRoot":"/source/"}