{"version":3,"sources":["middlewares/registered-user.js"],"names":[],"mappings":";;;;;;AAAA;;;;AAEA;;;;AACA;;IAAY,K;;AACZ;;IAAY,U;;;;;;;;;sDAEG,kBAAe,GAAf,EAAoB,GAApB,EAAyB,IAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEP,MAFO,EAGP,aAHO,EAMP,QANO,EAcP,IAdO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEQ,WAAW,uBAAX,CAAmC,IAAI,QAAvC,CAFR;;AAAA;AAEP,4BAFO;AAGP,mCAHO,GAGS,0BAAE,MAAF,EAAU,OAAV,GAAoB,GAApB,CAAwB,UAAC,KAAD,EAAW;AACrD,+BAAO,MAAM,sBAAN,CAA6B,OAA7B,CAAqC,KAArC,CAAP;AACD,uBAFmB,EAEjB,IAFiB,CAEZ,UAAC,MAAD,EAAS,MAAT,EAAoB;AAAE,+BAAO,SAAS,MAAhB;AAAyB,uBAFnC,EAEqC,CAFrC,CAHT;AAMP,8BANO,GAMI,MAAM,sBAAN,CAA6B,aAA7B,KAA+C,IANnD;;AAOX,0BAAI,KAAJ,GAAY,UAAC,SAAD,EAAe;AACzB,4BAAI,CAAC,SAAD,IAAc,OAAO,SAAP,KAAqB,QAAvC,EAAiD;AAC/C,iCAAO,QAAP;AACD;AACD,+BAAO,OAAO,SAAP,KAAqB,IAA5B;AACD,uBALD;AAMA,0BAAI,MAAJ,GAAa,MAAb;;AACI,0BAdO,GAcA,SAAP,IAAO,CAAS,KAAT,EAAgB,SAAhB,EAA2B,MAA3B,EAAmC;AAC5C,4BAAI,YAAJ;AACA,4BAAI,aAAa,OAAO,SAAP,KAAqB,SAAtC,EAAiD;AAC/C,gCAAM,IAAI,MAAJ,CAAW,SAAX,CAAN;AACD,yBAFD,MAEO;AACL,gCAAM,QAAN;AACA,mCAAS,SAAT;AACD;AACD,4BAAI,MAAJ,EAAY;AACV,iCAAO,CAAC,MAAM,2BAAN,CAAkC,GAAlC,EAAuC,KAAvC,CAAR;AACD,yBAFD,MAEO;AACL,iCAAO,MAAM,2BAAN,CAAkC,GAAlC,EAAuC,KAAvC,KAAiD,CAAxD;AACD;AACF,uBA3BU;;AA4BX,4BAAM,sBAAN,CAA6B,OAA7B,CAAqC,UAAC,GAAD,EAAS;AAC5C,4BAAI,QAAQ,IAAI,WAAJ,EAAZ;AACA,gCAAQ,MAAM,MAAN,CAAa,CAAb,EAAgB,WAAhB,KAAgC,MAAM,KAAN,CAAY,CAAZ,CAAxC;AACA,mCAAS,KAAT,IAAoB,KAAK,IAAL,CAAU,GAAV,EAAe,GAAf,CAApB;AACD,uBAJD;AAKA;;AAjCW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAmCX,6BAAO,KAAP,CAAa,aAAI,KAAJ,gBAAb;AACA;;AApCW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","file":"middlewares/registered-user.js","sourcesContent":["import _ from 'underscore';\n\nimport Logger from '../helpers/logger';\nimport * as Tools from '../helpers/tools';\nimport * as UsersModel from '../models/users';\n\nexport default async function(req, res, next) {\n  try {\n    let levels = await UsersModel.getRegisteredUserLevels(req.hashpass);\n    let maxLevelIndex = _(levels).toArray().map((level) => {\n      return Tools.REGISTERED_USER_LEVELS.indexOf(level);\n    }).sort((level1, level2) => { return level2 - level1; })[0];\n    let maxLevel = Tools.REGISTERED_USER_LEVELS[maxLevelIndex] || null;\n    req.level = (boardName) => {\n      if (!boardName || typeof boardName !== 'string') {\n        return maxLevel;\n      }\n      return levels[boardName] || null;\n    };\n    req.levels = levels;\n    let test = function(level, boardName, strict) {\n      let lvl;\n      if (boardName && typeof boardName !== 'boolean') {\n        lvl = req.levels[boardName];\n      } else {\n        lvl = maxLevel;\n        strict = boardName;\n      }\n      if (strict) {\n        return !Tools.compareRegisteredUserLevels(lvl, level);\n      } else {\n        return Tools.compareRegisteredUserLevels(lvl, level) >= 0;\n      }\n    };\n    Tools.REGISTERED_USER_LEVELS.forEach((lvl) => {\n      let Level = lvl.toLowerCase();\n      Level = Level.charAt(0).toUpperCase() + Level.slice(1)\n      req[`is${Level}`] = test.bind(req, lvl);\n    });\n    next();\n  } catch (err) {\n    Logger.error(err.stack || err);\n    next();\n  }\n}\n"],"sourceRoot":"/source/"}