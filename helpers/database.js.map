{"version":3,"sources":["helpers/database.js"],"names":[],"mappings":";;AAAA;;;;AAiBA;;;;AAQA;;IAAY,W;;AACZ;;IAAY,U;;AACZ;;IAAY,U;;AACZ;;IAAY,G;;AACZ;;;;AACA;;;;;;;;AA7BA,IAAI,WAAW,QAAQ,YAAR,EAAsB,QAArC;AACA,IAAI,WAAW,QAAQ,YAAR,EAAsB,QAArC;AACA,IAAI,SAAS,QAAQ,aAAR,CAAb;AACA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,gBAAgB,QAAQ,eAAR,CAApB;AACA,IAAI,KAAK,QAAQ,SAAR,CAAT;AACA,IAAI,SAAS,QAAQ,IAAR,CAAb;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,YAAY,QAAQ,gBAAR,CAAhB;AACA,IAAI,QAAQ,QAAQ,SAAR,CAAZ;AACA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,IAAI,SAAS,UAAU,QAAV,CAAb;;AAGA,IAAI,QAAQ,QAAQ,SAAR,CAAZ;AACA,IAAI,UAAU,QAAQ,qBAAR,CAAd;AACA,IAAI,SAAS,QAAQ,UAAR,CAAb;;AAEA,IAAI,cAAc,QAAQ,eAAR,CAAlB;AACA,IAAI,QAAQ,QAAQ,SAAR,CAAZ;;AASA,IAAI,KAAK,8BAAT;;AAEA,IAAI,cAAc,IAAI,GAAJ,EAAlB;;AAEA,IAAI,CAAC,QAAQ,QAAb,EAAuB;AACnB,gBAAY,YAAW;AACnB,YAAI,IAAI,EAAR;AADmB;AAAA;AAAA;;AAAA;AAEnB,iCAAgB,WAAhB;AAAA,oBAAS,GAAT;;AACI,kBAAE,GAAF,IAAS,CAAT;AADJ;AAFmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAInB,oBAAY,KAAZ;AACA,YAAI,0BAAE,CAAF,EAAK,OAAL,EAAJ,EACI;AACJ,eAAO,IAAI,IAAJ,CAAS,qBAAT,EAAgC,CAAhC,EAAmC,IAAnC,CAAwC,YAAW;;AAEzD,SAFM,EAEJ,KAFI,CAEE,UAAS,GAAT,EAAc;AACnB,6BAAO,KAAP,CAAa,IAAI,KAAJ,IAAa,GAA1B;AACH,SAJM,CAAP;AAKH,KAZD,EAYG,MAAM,MAZT;AAaH","file":"helpers/database.js","sourcesContent":["import _ from 'underscore';\nvar Address4 = require(\"ip-address\").Address4;\nvar Address6 = require(\"ip-address\").Address6;\nvar bigInt = require(\"big-integer\");\nvar cluster = require(\"cluster\");\nvar Crypto = require(\"crypto\");\nvar Elasticsearch = require(\"elasticsearch\");\nvar FS = require(\"q-io/fs\");\nvar FSSync = require(\"fs\");\nvar Path = require(\"path\");\nvar promisify = require(\"promisify-node\");\nvar Redis = require(\"ioredis\");\nvar SQLite3 = require(\"sqlite3\");\nvar Util = require(\"util\");\n\nvar mkpath = promisify(\"mkpath\");\n\nimport Board from '../boards/board';\nvar Cache = require(\"./cache\");\nvar Captcha = require(\"../captchas/captcha\");\nvar config = require(\"./config\");\n//var markup = require(\"./markup\");\nvar Permissions = require(\"./permissions\");\nvar Tools = require(\"./tools\");\n\nimport * as BoardsModel from '../models/boards';\nimport * as PostsModel from '../models/posts';\nimport * as UsersModel from '../models/users';\nimport * as IPC from '../helpers/ipc';\nimport Logger from '../helpers/logger';\nimport client from '../storage/client-factory';\n\nvar db = client();\n\nvar hasNewPosts = new Set();\n\nif (!cluster.isMaster) {\n    setInterval(function() {\n        var o = {};\n        for (var key of hasNewPosts)\n            o[key] = 1;\n        hasNewPosts.clear();\n        if (_(o).isEmpty())\n            return;\n        return IPC.send('notifyAboutNewPosts', o).then(function() {\n            //Do nothing\n        }).catch(function(err) {\n            Logger.error(err.stack || err);\n        });\n    }, Tools.SECOND);\n}\n"],"sourceRoot":"/source/"}