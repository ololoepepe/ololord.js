{"version":3,"sources":["helpers/cache.js"],"names":[],"mappings":";;;;;;;;sDAMO,iBAAwB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQ,aAAG,IAAH,CAAW,SAAX,SAAwB,QAAxB,CADR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAe,Q;;;;;;sDAIf,kBAAyB,QAAzB,EAAmC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQ,MAAM,SAAN,CAAmB,SAAnB,SAAgC,QAAhC,EAA4C,IAA5C,CADR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAe,S;;;;;;sDAIf,kBAA0B,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQ,aAAG,MAAH,CAAa,SAAb,SAA0B,QAA1B,CADR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAe,U;;;;;AAdtB;;;;AAEA;;IAAY,K;;;;;;;;AAEZ,IAAM,YAAe,SAAf,eAAN","file":"helpers/cache.js","sourcesContent":["import FS from 'q-io/fs';\n\nimport * as Files from '../core/files';\n\nconst ROOT_PATH = `${__dirname}/../public`;\n\nexport async function readFile(fileName) {\n  return await FS.read(`${ROOT_PATH}/${fileName}`);\n}\n\nexport async function writeFile(fileName, data) {\n  return await Files.writeFile(`${ROOT_PATH}/${fileName}`, data);\n}\n\nexport async function removeFile(fileName) {\n  return await FS.remove(`${ROOT_PATH}/${fileName}`);\n}\n"],"sourceRoot":"/source/"}