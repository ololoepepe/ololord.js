{"version":3,"sources":["middlewares/registered-user.js"],"names":[],"mappings":";;AAGA;;;;AACA;;IAAY,U;;;;;;AAJZ,IAAI,WAAW,QAAQ,qBAAR,CAAf;AACA,IAAI,QAAQ,QAAQ,kBAAR,CAAZ;;AAKA,OAAO,OAAP,GAAiB,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAyB;AACtC,eAAW,uBAAX,CAAmC,IAAI,QAAvC,EAAiD,IAAjD,CAAsD,UAAS,MAAT,EAAiB;AACnE,iBAAS,UAAU,EAAnB;AACA,YAAI,WAAW,MAAM,OAAN,CAAc,MAAd,EAAsB,IAAtB,CAA2B,YAAW;AACjD,mBAAO,CAAC,CAAD,GAAK,MAAM,2BAAN,CAAkC,SAAlC,CAAZ;AACH,SAFc,CAAf;AAGA,mBAAY,SAAS,MAAT,GAAkB,CAAnB,GAAwB,SAAS,CAAT,CAAxB,GAAsC,IAAjD;AACA,YAAI,KAAJ,GAAY,UAAS,SAAT,EAAoB;AAC5B,gBAAI,CAAC,SAAL,EACI,OAAO,QAAP;AACJ,mBAAO,OAAO,SAAP,KAAqB,IAA5B;AACH,SAJD;AAKA,YAAI,MAAJ,GAAa,MAAb;AACA,YAAI,OAAO,SAAP,IAAO,CAAS,KAAT,EAAgB,SAAhB,EAA2B,MAA3B,EAAmC;AAC1C,gBAAI,GAAJ;AACA,gBAAI,aAAa,OAAO,SAAP,IAAoB,SAArC,EAAgD;AAC5C,sBAAM,IAAI,MAAJ,CAAW,SAAX,CAAN;AACH,aAFD,MAEO;AACH,sBAAM,QAAN;AACA,yBAAS,SAAT;AACH;AACD,gBAAI,MAAJ,EACI,OAAO,CAAC,MAAM,2BAAN,CAAkC,GAAlC,EAAuC,KAAvC,CAAR,CADJ,KAGI,OAAO,MAAM,2BAAN,CAAkC,GAAlC,EAAuC,KAAvC,KAAiD,CAAxD;AACP,SAZD;AAaA,eAAO,IAAP,CAAY,SAAS,oBAArB,EAA2C,OAA3C,CAAmD,UAAS,GAAT,EAAc;AAC7D,uBAAS,GAAT,IAAkB,KAAK,IAAL,CAAU,GAAV,EAAe,SAAS,oBAAT,CAA8B,GAA9B,CAAf,CAAlB;AACH,SAFD;AAGA;AACH,KA7BD,EA6BG,KA7BH,CA6BS,UAAS,GAAT,EAAc;AACnB,yBAAO,KAAP,CAAa,IAAI,KAAJ,IAAa,GAA1B;AACA;AACH,KAhCD;AAiCH,CAlCD","file":"middlewares/registered-user.js","sourcesContent":["var Database = require(\"../helpers/database\");\nvar Tools = require(\"../helpers/tools\");\n\nimport Logger from '../helpers/logger';\nimport * as UsersModel from '../models/users';\n\nmodule.exports = function(req, res, next) {\n    UsersModel.getRegisteredUserLevels(req.hashpass).then(function(levels) {\n        levels = levels || {};\n        var maxLevel = Tools.toArray(levels).sort(function() {\n            return -1 * Tools.compareRegisteredUserLevels(arguments);\n        });\n        maxLevel = (maxLevel.length > 0) ? maxLevel[0] : null;\n        req.level = function(boardName) {\n            if (!boardName)\n                return maxLevel;\n            return levels[boardName] || null;\n        };\n        req.levels = levels;\n        var test = function(level, boardName, strict) {\n            var lvl;\n            if (boardName && typeof boardName != \"boolean\") {\n                lvl = req.levels[boardName];\n            } else {\n                lvl = maxLevel;\n                strict = boardName;\n            }\n            if (strict)\n                return !Tools.compareRegisteredUserLevels(lvl, level);\n            else\n                return Tools.compareRegisteredUserLevels(lvl, level) >= 0;\n        };\n        Object.keys(Database.RegisteredUserLevels).forEach(function(lvl) {\n            req[`is${lvl}`] = test.bind(req, Database.RegisteredUserLevels[lvl]);\n        });\n        next();\n    }).catch(function(err) {\n        Logger.error(err.stack || err);\n        next();\n    });\n};\n"],"sourceRoot":"/source/"}