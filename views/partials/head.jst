<head data-site-path-prefix="{{=it.site.pathPrefix}}">
    <title>{{=it.title}}</title>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8">
    <link id="favicon" rel="shortcut icon" href="/{{=it.site.pathPrefix}}favicon.ico">
    <link rel="stylesheet" type="text/css" href="/{{=it.site.pathPrefix}}css/3rdparty/jquery.datetimepicker.css">
    <link rel="stylesheet" type="text/css" href="/{{=it.site.pathPrefix}}css/base.css">
    {{? it.extraStylesheets}}
        {{~it.extraStylesheets :stylesheet}}
            {{? stylesheet.source}}
                <link rel="stylesheet" type="text/css" href="{{=stylesheet.source}}">
            {{?? stylesheet.fileName}}
                {{ out += it.stylesheet(stylesheet.fileName, stylesheet.noEmbed); }}
            {{?}}
        {{~}}
    {{?}}
    {{ out += it.script("3rdparty/jquery-1.11.3.min.js"); }}
    {{ out += it.script("3rdparty/isInViewport.min.js"); }}
    {{ out += it.script("3rdparty/jquery-ui.min.js"); }}
    {{ out += it.script("3rdparty/Promise.min.js"); }}
    {{ out += it.script("3rdparty/doT.min.js"); }}
    {{ out += it.script("3rdparty/underscore-min.js"); }}
    {{ out += it.script("api.js"); }}
    {{ out += it.script("3rdparty/merge.min.js"); }}
    {{ out += it.script("3rdparty/uuid.js"); }}
    {{ out += it.script("3rdparty/moment-with-locales.min.js"); }}
    {{ out += it.script("3rdparty/jszip.min.js"); }}
    {{ out += it.script("3rdparty/jszip-utils.min.js"); }}
    {{ out += it.script("3rdparty/FileSaver.min.js"); }}
    {{ out += it.script("3rdparty/mobile-detect.min.js"); }}
    <script id="model-base" type="application/json"></script>
    <script id="model-boards" type="application/json">{{=it.models.boards}}</script>
    <script id="model-tr" type="application/json">{{=it.models.tr}}</script>
    <script id="model-partials" type="application/json">{{=it.models.partials}}</script>
    <script id="model-templates" type="application/json">{{=it.models.templates}}</script>
    {{~it.publicPartials :partial}}
        <script id="partial-{{=partial.name}}" type="application/jst">{{=partial.data}}</script>
    {{~}}
    {{~it.publicTemplates :template}}
        <script id="template-{{=template.name}}" type="application/jst">{{=template.data}}</script>
    {{~}}
    <script type="text/javascript">
        lord.models = {};
        lord.partials = {};
        lord.templates = {};

        (function() {
            var baseModelHtml = lord.get("/{{=it.site.pathPrefix}}misc/base.json") || "";
            ["base", "boards", "tr", "partials", "templates"].forEach(function(modelName) {
                var isBase = ("base" == modelName);
                var html = isBase ? baseModelHtml : lord.id("model-" + modelName).innerHTML;
                lord.models[modelName] = JSON.parse(html);
                if (isBase) {
                    var deviceTypes = {
                        desktop: {},
                        mobile: {}
                    };
                    var deviceType = lord.getLocalObject("deviceType", "auto");
                    if (!deviceTypes.hasOwnProperty(deviceType)) {
                        var md = new MobileDetect(window.navigator.userAgent);
                        deviceType = md.mobile() ? "mobile" : "desktop";
                    }
                    lord.models[modelName].deviceType = deviceType;
                }
            });
            lord.model("partials").forEach(function(partialName) {
                var html = lord.id("partial-" + partialName).innerHTML;
                lord.partials[partialName] = html;
            });
            var templates = {};
            lord.model("templates").forEach(function(templateName) {
                var html = lord.id("template-" + templateName).innerHTML;
                templates[templateName] = html;
            });
            ["custom-footer", "custom-header"].forEach(function(templateName) {
                var html = lord.get("/{{=it.site.pathPrefix}}templates/" + templateName + ".jst");
                if (html)
                    templates[templateName] = html;
            });
            lord.each(templates, function(html, templateName) {
                if (!lord.addTemplate(templateName, html))
                    return;
            });
        })();
    </script>
    {{ out += it.script("base.js"); }}
    {{? it.site.vkontakte.integrationEnabled }}
        {{ out += it.script("3rdparty/vk-openapi.js"); }}
    {{?}}
    {{? it.isBoardPage}}
        {{ out += it.script("3rdparty/sha1.min.js"); }}
        {{ out += it.script("3rdparty/jquery.knob.min.js"); }}
        {{? it.site.twitter.integrationEnabled }}
            {{ out += it.script("3rdparty/twitter.js"); }}
        {{?}}
        {{ out += it.script("board.js"); }}
    {{?}}
    {{? it.extraScripts}}
        {{~it.extraScripts :script}}
            {{? script.source}}
                <script type="text/javascript" src="{{=script.source}}"></script>
            {{?? script.fileName}}
                {{ out += it.script(script.fileName, script.noEmbed); }}
            {{?? script.value}}
                <script type="text/javascript">{{=script.value}}</script>
            {{?}}
        {{~}}
    {{?}}
    <script type="text/javascript">
        (function() {
            var settings = lord.settings();
            document.open();
            if (lord.deviceType("mobile")) {
                document.write('<meta name="viewport" content="width=device-width, initial-scale=1.0, '
                    + 'maximum-scale=1.0, user-scalable=no" />');
            }
            var prefix = lord.model("base").site.pathPrefix;
            document.write('<link rel="stylesheet" type="text/css" href="/' + prefix + 'css/' + lord.deviceType()
                + '.css">');
            document.write('<link rel="stylesheet" type="text/css" href="/' + prefix + 'css/' + settings.style.name
                + '.css">');
            var s = '<style type="text/css">';
            if (!settings.shrinkPosts)
                s += '.post, .opPost, .draft, .searchResult { width: 99%; }';
            if (settings.addExpander)
                s += 'blockquote:not(.draftBlockquote) { overflow-y: hidden; }';
            if (lord.compareRatings(settings.maxAllowedRating, "R-18G") < 0) {
                var selectors = [];
                var size = lord.deviceType("mobile") ? "140px" : "200px";
                var addSelector = function(rating) {
                    var sel = 'a[data-rating="' + rating + '"]';
                    selectors.push(sel);
                    var dots = "..";
                    if (/\/((res|arch)\/\d+|catalog|archive)\.html$/.test(window.location.href))
                        dots += "/..";
                    s += sel + '{ background: url("' + dots + '/img/' + rating.toLowerCase() + '.png") center center; '
                        + 'width: ' + size + '; height: ' + size + '; }';
                };
                addSelector("R-18G");
                ["R-18", "R-15"].forEach(function(rating) {
                    if (lord.compareRatings(settings.maxAllowedRating, rating) < 0)
                        addSelector(rating);
                });
                var createSelector = function(selector) {
                    selector = selector || "";
                    var sel = selectors[0] + selector;
                    selectors.slice(1).forEach(function(ss) {
                        sel += ", " + ss + selector;
                    });
                    return sel;
                };
                s += createSelector() + '{ display: inline-block; }';
                s += createSelector(" > img") + '{ display: none; }';
            }
            s += '</style>';
            if (lord.getLocalObject("mumWatching", false)) {
                document.write('<style id="mumWatchingStylesheet" type="text/css">'
                    + '.postFileFile > a > img:not(:hover), .banner > a > img:not(:hover) { opacity: 0.05 !important; }'
                    + '</style>');
            }
            var appendScript = function(path) {
                s += '<script type="text/javascript" src="/' + prefix + path + '"></s' + 'cript>';
            };
            if (lord.model("base").user.isModer())
                appendScript("js/3rdparty/jquery.datetimepicker.js");
            if (settings.sourceHighlightingEnabled && !/\/manage\.html$/.test(window.location.pathname)) {
                appendScript("js/3rdparty/codemirror/codemirror.min.js");
                appendScript("js/3rdparty/codemirror/javascript.min.js");
                appendScript("js/3rdparty/codemirror/css.min.js");
                lord.createStylesheetLink("3rdparty/codemirror.css", true);
            }
            if (settings.drawingEnabled) {
                appendScript("js/3rdparty/react-with-addons.min.js");
                appendScript("js/3rdparty/literallycanvas.min.js");
                appendScript("js/3rdparty/jquery.minicolors.min.js");
                lord.createStylesheetLink("3rdparty/literallycanvas.css", true);
                lord.createStylesheetLink("3rdparty/jquery.minicolors.css", true);
            }
            if (settings.userJavaScriptEnabled)
                s += '<script type="text/javascript">' + lord.getLocalObject("userJavaScript", "") + "</s" + "cript>";
            document.write(s);
            document.close();
            lord.createStylesheetLink("3rdparty/highlight.js/" + settings.codeStyle.name + ".css", true);
            lord.createStylesheetLink("3rdparty/jquery-ui/" + settings.style.name + "/jquery-ui.min.css", true);
            {{? it.isBoardPage}}
                var style = lord.node("style");
                style.id = "postBodySize";
                style.type = "text/css";
                var m = lord.deviceType("mobile") ? 0 : 270;
                var k = lord.deviceType("mobile") ? 0 : 30;
                var z = (!lord.deviceType("mobile") && lord.getLocalObject("sidebarVisible", true)) ? 178 : 0;
                var css = ".postBody { max-width: " + ($(window).width() - (30 + z)) + "px; }";
                css += ".postFile ~ .postText > blockquote, .blockLatex { max-width: " + ($(window).width() - (30 + k + m + z)) + "px; }";
                if (style.styleSheet)
                    style.styleSheet.cssText = css;
                else
                    style.appendChild(lord.node("text", css));
                document.head.appendChild(style);
                css = "";
                lord.each(lord.getLocalObject("hiddenPosts", {}), function(val, key) {
                    if (key.split("/").shift() != "{{=it.board.name}}" || !val)
                        return;
                    var pn = key.split("/").pop();
                    css += '[data-number="' + pn + '"] > .postBody { display: none; }\n';
                    css += '#thread' + pn + ' > .omittedPosts { display: none; }\n';
                    css += '#thread' + pn + ' > .threadPosts { display: none; }\n';
                });
                style = lord.node("style");
                style.id = "tmpHiddenPosts";
                style.type = "text/css";
                if (style.styleSheet)
                    style.styleSheet.cssText = css;
                else
                    style.appendChild(lord.node("text", css));
                lord.queryOne("head").appendChild(style);
            {{?}}
            if (settings.userCssEnabled) {
                var css = lord.getLocalObject("userCss", "");
                var style = lord.node("style");
                style.type = "text/css";
                if (style.styleSheet)
                    style.styleSheet.cssText = css;
                else
                    style.appendChild(lord.node("text", css));
                lord.queryOne("head").appendChild(style);
            }
        })();
    </script>
</head>
