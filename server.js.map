{"version":3,"sources":["server.js"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["\n\nimport 'babel-polyfill';\nimport 'source-map-support/register';\nimport _ from 'underscore';\nimport Cluster from 'cluster';\nimport express from 'express';\nimport expressCluster from 'express-cluster';\nimport HTTP from 'http';\n\nimport Board from './boards/board';\nimport Captcha from './captchas/captcha';\nimport NodeCaptcha from './captchas/node-captcha';\nimport NodeCaptchaNoscript from './captchas/node-captcha-noscript';\nimport commands from './commands';\nimport controllers from './controllers';\nimport BoardController from './controllers/board';\nimport geolocation from './core/geolocation';\nimport * as Renderer from './core/renderer';\nimport WebSocketServer from './core/websocket-server';\nimport config from './helpers/config';\nimport * as IPC from './helpers/ipc';\nimport Logger from './helpers/logger';\nimport * as OnlineCounter from './helpers/online-counter';\nimport Program from './helpers/program';\nimport * as Tools from './helpers/tools';\nimport middlewares from './middlewares';\nimport * as BoardsModel from './models/boards';\nimport * as ChatsModel from './models/chats';\nimport * as StatisticsModel from './models/statistics';\nimport * as UsersModel from './models/users';\n\nfunction spawnCluster() {\n  expressCluster(async function(worker) {\n    console.log(`[${process.pid}] Initializingâ€¦`);\n    let app = express();\n    app.use(middlewares);\n    app.use(controllers);\n    try {\n      await geolocation.initialize();\n      await BoardsModel.initialize();\n      await Renderer.reloadTemplates();\n      var sockets = {};\n      var nextSocketId = 0;\n      var server = HTTP.createServer(app);\n      var ws = new WebSocketServer(server);\n      ws.on(\"sendChatMessage\", function(msg, conn) {\n          var data = msg.data || {};\n          return Chats.sendMessage({ //TODO\n              ip: conn.ip,\n              hashpass: conn.hashpass\n          }, data.boardName, data.postNumber, data.text, ws).then(function(result) {\n              var message = result.message;\n              if (result.senderHash != result.receiverHash) {\n                  message.type = \"in\";\n                  var receiver = result.receiver;\n                  var ip = receiver.hashpass ? null : receiver.ip;\n                  ws.sendMessage(\"newChatMessage\", {\n                      message: message,\n                      boardName: data.boardName,\n                      postNumber: data.postNumber\n                  }, ip, receiver.hashpass);\n              }\n              message.type = \"out\";\n              return Promise.resolve(message);\n          });\n      });\n      var subscriptions = new Map();\n      ws.on(\"subscribeToThreadUpdates\", function(msg, conn) {\n          var data = msg.data || {};\n          var key = data.boardName + \"/\" + data.threadNumber;\n          if (subscriptions.has(key)) {\n              subscriptions.get(key).add(conn);\n          } else {\n              var s = new Set();\n              s.add(conn);\n              subscriptions.set(key, s);\n          }\n      });\n      ws.on(\"unsubscribeFromThreadUpdates\", function(msg, conn) {\n          var data = msg.data || {};\n          var key = data.boardName + \"/\" + data.threadNumber;\n          var s = subscriptions.get(key);\n          if (!s)\n              return;\n          s.delete(conn);\n          if (s.size < 1)\n              subscriptions.delete(key);\n      });\n      server.listen(config(\"server.port\", 8080), function() {\n          console.log(\"[\" + process.pid + \"] Listening on port \" + config(\"server.port\", 8080) + \"â€¦\");\n          IPC.on('exit', function(status) {\n              process.exit(status);\n          });\n          IPC.on('stop', function() {\n              return new Promise(function(resolve, reject) {\n                  server.close(function() {\n                      _(sockets).each((socket, socketId) => {\n                          delete sockets[socketId];\n                          socket.destroy();\n                      });\n                      OnlineCounter.clear();\n                      console.log(\"[\" + process.pid + \"] Closed\");\n                      resolve();\n                  });\n              });\n          });\n          IPC.on('start', function() {\n              return new Promise(function(resolve, reject) {\n                  server.listen(config(\"server.port\", 8080), function() {\n                      console.log(\"[\" + process.pid + \"] Listening on port \" + config(\"server.port\", 8080)\n                          + \"â€¦\");\n                      resolve();\n                  });\n              });\n          });\n          IPC.on('render', function(data) {\n              var f = BoardController[`${data.type}`];\n              if (typeof f != \"function\")\n                  return Promise.reject(\"Invalid generator function\");\n              return f.call(BoardController, data.key, data.data);\n          });\n          IPC.on('reloadBoards', function() {\n              Board.initialize();\n              return Promise.resolve();\n          });\n          IPC.on('reloadTemplates', function() {\n            return Renderer.reloadTemplates();\n          });\n          IPC.on('notifyAboutNewPosts', (keys) => {\n            _(keys).each((_1, key) => {\n              let s = subscriptions.get(key);\n              if (!s) {\n                return;\n              }\n              s.forEach((conn) => {\n                conn.sendMessage('newPost');\n              });\n            });\n          });\n          IPC.on('getConnectionIPs', function() {\n              return Promise.resolve(OnlineCounter.unique());\n          });\n          IPC.send('ready').catch(function(err) {\n              Logger.error(err);\n          });\n      });\n      server.on(\"connection\", function(socket) {\n          var socketId = ++nextSocketId;\n          sockets[socketId] = socket;\n          socket.on(\"close\", function() {\n              delete sockets[socketId];\n          });\n      });\n    } catch (err) {\n      console.log(err);\n      Logger.error(err.stack || err);\n    }\n  }, {\n    count: config('system.workerCount'),\n    respawn: true\n  });\n}\n\nfunction generateFileName() {\n  let fileName = _.now().toString();\n  if (fileName != generateFileName.lastFileName) {\n    generateFileName.lastFileName = fileName;\n    return fileName;\n  }\n  return new Promise((resolve) => {\n    setTimeout(async function() {\n      let fileName = await fileName();\n      resolve(fileName);\n    }, 1);\n  });\n}\n\nfunction onReady(initCallback) {\n  //TODO: May throw error\n  if (!onReady.ready) {\n    onReady.ready = 0;\n  }\n  ++onReady.ready;\n  if (config('system.workerCount') === onReady.ready) {\n    UsersModel.initializeUserBansMonitoring();\n    if (config('server.statistics.enabled')) {\n      setInterval(StatisticsModel.generateStatistics.bind(StatisticsModel),\n        config('server.statistics.ttl') * Tools.MINUTE);\n    }\n    if (config('server.rss.enabled')) {\n      setInterval(BoardController.renderRSS.bind(BoardController), config('server.rss.ttl') * Tools.MINUTE);\n    }\n    commands();\n  }\n}\n\nfunction spawnWorkers(initCallback) {\n  console.log(Tools.translate('Spawning workers, please, waitâ€¦'));\n  spawnCluster();\n  IPC.on('ready', onReady.bind(null, initCallback));\n  IPC.on('fileName', generateFileName);\n  IPC.on('render', (data) => {\n    return IPC.render(data.boardName, data.threadNumber, data.postNumber, data.action);\n  });\n  IPC.on('renderArchive', (data) => { //TODO\n    return IPC.renderArchive(data);\n  });\n  IPC.on('stop', () => {\n    return IPC.send('stop');\n  });\n  IPC.on('start', () => {\n    return IPC.send('start');\n  });\n  IPC.on('reloadBoards', () => {\n    Board.initialize();\n    return IPC.send('reloadBoards');\n  });\n  IPC.on('reloadTemplates', async function() {\n    await Renderer.compileTemplates();\n    await Renderer.reloadTemplates();\n    return IPC.send('reloadTemplates');\n  });\n  let hasNewPosts = {};\n  setInterval(() => {\n    if (_(hasNewPosts).isEmpty()) {\n      return;\n    }\n    IPC.send('notifyAboutNewPosts', hasNewPosts).catch((err) => {\n      Logger.error(err.stack || err);\n    });\n    hasNewPosts = {};\n  }, Tools.SECOND);\n  IPC.on('notifyAboutNewPosts', (key) => {\n    hasNewPosts[key] = 1;\n  });\n  IPC.on('rerenderCache', (rerenderArchive) => {\n    if (rerenderArchive) {\n      return Renderer.rerender();\n    } else {\n      //return Renderer.rerender(Tools.ARCHIVE_PATHS_REGEXP, true);\n    }\n  });\n}\n\nBoard.initialize();\nCaptcha.initialize();\ncontrollers.initialize();\n\nif (Cluster.isMaster) {\n  (async function() {\n    try {\n      await NodeCaptcha.removeOldCaptchImages();\n      await NodeCaptchaNoscript.removeOldCaptchImages();\n      await Renderer.compileTemplates();\n      await Renderer.reloadTemplates();\n      if (Program.rerender || config('system.rerenderCacheOnStartup')) {\n        if (Program.archive || config('system.rerenderArchive')) { //TODO\n          await Renderer.rerender();\n        } else {\n          await Renderer.rerender(['**', '!/*/arch/*']);\n        }\n      }\n      await StatisticsModel.generateStatistics();\n      await Renderer.generateTemplatingJavaScriptFile();\n      await Renderer.generateCustomJavaScriptFile();\n      await Renderer.generateCustomCSSFiles();\n      spawnWorkers();\n    } catch (err) {\n      Logger.error(err.stack || err);\n      process.exit(1);\n    }\n  })();\n} else {\n  spawnCluster();\n}\n"],"sourceRoot":"/source/"}