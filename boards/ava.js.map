{"version":3,"sources":["boards/ava.js"],"names":[],"mappings":";;AAAA;;;;;;;;AACA,IAAI,WAAW,QAAQ,qBAAR,CAAf;AACA,IAAI,QAAQ,QAAQ,kBAAR,CAAZ;;AAEA,IAAI,QAAQ,oBAAU,KAAV,EAAiB,UAAjB,CAAZ;;AAEA,OAAO,cAAP,CAAsB,KAAtB,EAA6B,QAA7B,EAAuC;AACnC,WAAO;AAD4B,CAAvC;;AAIA,OAAO,cAAP,CAAsB,KAAtB,EAA6B,oBAA7B,EAAmD;AAC/C,WAAO,CACH,WADG,EAEH,YAFG,EAGH,WAHG;AADwC,CAAnD;;AAQA,MAAM,cAAN;AAAA,wDAAuB,iBAAe,GAAf,EAAoB,MAApB,EAA4B,KAA5B,EAAmC,cAAnC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACf,yCAAM,SAAN,CAAgB,cAAhB,EAA+B,IAA/B,+BAAoC,IAApC,4CADe;;AAAA;AAAA,4BAEd,IAAI,QAFU;AAAA;AAAA;AAAA;;AAAA,yDAGR,QAAQ,MAAR,CAAe,cAAf,CAHQ;;AAAA;AAAA,8BAIf,MAAM,MAAN,GAAe,CAJA;AAAA;AAAA;AAAA;;AAAA,yDAKR,QAAQ,MAAR,CAAe,gCAAf,CALQ;;AAAA;AAAA,6BAMf,cANe;AAAA;AAAA;AAAA;;AAAA,yDAOR,QAAQ,OAAR,EAPQ;;AAAA;AAAA,yDAQZ,SAAS,UAAT,CAAoB,OAAO,SAA3B,EAAsC;AACzC,mCAAO,CADkC;AAEzC,4CAAgB,wBAAS,MAAT,EAAiB;AAC7B,uCAAO,OAAO,MAAP,IAAiB,CAAC,OAAO,YAAhC;AACH;AAJwC,yBAAtC,EAKJ,IALI,CAKC,UAAS,OAAT,EAAkB;AACtB,gCAAI,CAAC,OAAD,IAAY,QAAQ,MAAR,IAAkB,CAAlC,EACI,OAAO,QAAQ,MAAR,CAAe,kBAAf,CAAP;AACJ,gCAAI,QAAQ,CAAR,EAAW,IAAX,CAAgB,QAAhB,IAA4B,IAAI,QAApC,EACI,OAAO,QAAQ,MAAR,CAAe,6BAAf,CAAP;AACJ,mCAAO,QAAQ,OAAR,EAAP;AACH,yBAXM,CARY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvB;;AAAA;AAAA;AAAA;AAAA;;AAsBA,OAAO,OAAP,GAAiB,KAAjB","file":"boards/ava.js","sourcesContent":["import Board from './board';\nvar Database = require(\"../helpers/database\");\nvar Tools = require(\"../helpers/tools\");\n\nvar board = new Board(\"ava\", \"Аватарки\");\n\nObject.defineProperty(board, \"hidden\", {\n    value: true\n});\n\nObject.defineProperty(board, \"supportedFileTypes\", {\n    value: [\n        \"image/gif\",\n        \"image/jpeg\",\n        \"image/png\"\n    ]\n});\n\nboard.testParameters = async function(req, fields, files, creatingThread) {\n  await Board.prototype.testParameters.call(this, ...arguments);\n    if (!req.hashpass)\n        return Promise.reject(\"Не залогинен\");\n    if (files.length < 0)\n        return Promise.reject(\"Не прикреплено ни одного файла\");\n    if (creatingThread)\n        return Promise.resolve();\n    return Database.getThreads(fields.boardName, {\n        limit: 1,\n        filterFunction: function(thread) {\n            return thread.number == +fields.threadNumber;\n        }\n    }).then(function(threads) {\n        if (!threads || threads.length != 1)\n            return Promise.reject(\"Нет такого треда\");\n        if (threads[0].user.hashpass != req.hashpass)\n            return Promise.reject(\"Нельзя постить в чужой тред\");\n        return Promise.resolve();\n    });\n};\n\nmodule.exports = board;\n"],"sourceRoot":"/source/"}