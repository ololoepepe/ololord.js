{"version":3,"sources":["boards/board.js"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;IAAY,W;;AACZ;;IAAY,K;;;;;;;;;;AAEZ,IAAM,YAAY,wCAAlB;AACA,IAAM,aAAa,4BAAnB;AACA,IAAM,+BAA+B,CAAC,iBAAD,EAAoB,iBAApB,EAAuC,YAAvC,EAAqD,WAArD,EAAkE,WAAlE,EACnC,WADmC,EACtB,YADsB,EACR,WADQ,EACK,WADL,EACkB,WADlB,EAC+B,YAD/B,CAArC;AAEA,IAAM,kBAAkB,CAAC,MAAD,EAAS,SAAT,EAAoB,aAApB,EAAmC,YAAnC,EAAiD,SAAjD,EAA4D,WAA5D,EAAyE,gBAAzE,EACtB,cADsB,EACN,WADM,EACO,WADP,EACoB,aADpB,EACmC,KADnC,EAC0C,MAD1C,EACkD,OADlD,EAC2D,cAD3D,CAAxB;AAEA,IAAM,0BAA0B,gBAAgB,KAAhB,CAAsB,CAAtB,EAAyB,CAAC,CAA1B,CAAhC;;AAEA,IAAI,SAAS,EAAb;AACA,IAAI,UAAU,EAAd;AACA,IAAI,gBAAgB,EAApB;;AAEA,SAAS,QAAT,CAAkB,SAAlB,EAA6B;AAC3B,MAAI,WAAc,SAAd,6BAA+C,YAAa,MAAM,SAAnB,GAAgC,EAA/E,UAAJ;AACA,MAAI;AACF,QAAI,CAAC,aAAO,UAAP,CAAkB,QAAlB,CAAL,EAAkC;AAChC,aAAO,EAAP;AACD;AACD,QAAI,OAAO,aAAO,YAAP,CAAoB,QAApB,EAA8B,MAA9B,CAAX;AACA,QAAI,CAAC,IAAL,EAAW;AACT,aAAO,EAAP;AACD;AACD,WAAO,KAAK,KAAL,CAAW,UAAX,EAAuB,MAAvB,CAA8B;AAAA,aAAQ,CAAC,CAAC,IAAV;AAAA,KAA9B,CAAP;AACD,GATD,CASE,OAAO,GAAP,EAAY;AACZ,qBAAO,KAAP,CAAa,IAAI,KAAJ,IAAa,GAA1B;AACA,WAAO,EAAP;AACD;AACF;;AAED,SAAS,SAAT,CAAmB,aAAnB,EAAkC;AAChC,kBAAiB,iBAAkB,OAAO,aAAP,KAAyB,WAA5D;AACA,SAAO,0BAAE,MAAF,EAAU,OAAV,GAAoB,IAApB,CAAyB,UAAC,EAAD,EAAK,EAAL,EAAY;AAAE,WAAO,GAAG,IAAH,CAAQ,aAAR,CAAsB,EAAtB,CAAP;AAAmC,GAA1E,EAA4E,MAA5E,CAAmF,UAAC,KAAD,EAAW;AACnG,WAAO,MAAM,OAAN,KAAkB,iBAAiB,MAAM,MAAzC,CAAP;AACD,GAFM,CAAP;AAGD;;AAED,SAAS,gBAAT,GAA4B;AAC1B,MAAI,UAAU,IAAI,KAAJ,CAAU,IAAV,EAAgB,MAAM,SAAN,CAAgB,IAAhB,CAAqB,eAArB,EAAsC,YAAtC,CAAhB,CAAd;AACA,UAAQ,aAAR,CAAsB,gBAAtB,EAAwC,eAAxC;AACA,SAAO,CACL,IAAI,KAAJ,CAAU,MAAV,EAAkB,MAAM,SAAN,CAAgB,IAAhB,CAAqB,SAArB,EAAgC,YAAhC,CAAlB,CADK,EAEL,IAAI,KAAJ,CAAU,GAAV,EAAe,MAAM,SAAN,CAAgB,IAAhB,CAAqB,SAArB,EAAgC,YAAhC,CAAf,EACE,EAAE,iBAAiB,MAAM,SAAN,CAAgB,IAAhB,CAAqB,QAArB,EAA+B,iBAA/B,CAAnB,EADF,CAFK,EAIL,IAAI,KAAJ,CAAU,GAAV,EAAe,MAAM,SAAN,CAAgB,IAAhB,CAAqB,eAArB,EAAsC,YAAtC,CAAf,CAJK,EAKL,IAAI,KAAJ,CAAU,GAAV,EAAe,MAAM,SAAN,CAAgB,IAAhB,CAAqB,oBAArB,EAA2C,YAA3C,CAAf,CALK,EAML,IAAI,KAAJ,CAAU,GAAV,EAAe,MAAM,SAAN,CAAgB,IAAhB,CAAqB,UAArB,EAAiC,YAAjC,CAAf,CANK,EAOL,OAPK,EAQL,IAAI,KAAJ,CAAU,IAAV,EAAgB,MAAM,SAAN,CAAgB,IAAhB,CAAqB,QAArB,EAA+B,YAA/B,CAAhB,EACE,EAAE,iBAAiB,MAAM,SAAN,CAAgB,IAAhB,CAAqB,QAArB,EAA+B,iBAA/B,CAAnB,EADF,CARK,EAUL,IAAI,KAAJ,CAAU,IAAV,EAAgB,MAAM,SAAN,CAAgB,IAAhB,CAAqB,aAArB,EAAoC,YAApC,CAAhB,EACE,EAAE,iBAAiB,MAAM,SAAN,CAAgB,IAAhB,CAAqB,aAArB,EAAoC,iBAApC,CAAnB,EADF,CAVK,CAAP;AAaD;;IAEoB,K;;;0BACN,I,EAAM;AACjB,aAAO,OAAO,IAAP,CAAP;AACD;;;6BAEe,K,EAAO;AACrB,aAAO,MAAM,IAAb,IAAqB,KAArB;AACD;;;+BAEiB,a,EAAe;AAC/B,aAAO,UAAU,aAAV,EAAyB,GAAzB,CAA6B,UAAC,KAAD,EAAW;AAC7C,eAAO;AACL,gBAAM,MAAM,IADP;AAEL,iBAAO,MAAM;AAFR,SAAP;AAID,OALM,CAAP;AAMD;;;+BAEiB,a,EAAe;AAC/B,aAAO,UAAU,aAAV,EAAyB,GAAzB,CAA6B;AAAA,eAAS,MAAM,IAAf;AAAA,OAA7B,CAAP;AACD;;;oCAEsB;AACrB,gBAAU,MAAM,UAAN,GAAmB,MAAnB,CAA0B,UAAC,GAAD,EAAM,SAAN,EAAoB;AACtD,YAAI,OAAU,SAAV,+BAA6C,SAAjD;AACA,YAAI,aAAO,UAAP,CAAkB,IAAlB,CAAJ,EAA6B;AAC3B,cAAI,SAAJ,IAAiB,aAAO,WAAP,CAAmB,IAAnB,EAAyB,MAAzB,CAAgC,UAAC,QAAD,EAAc;AAAE,mBAAO,iBAAiB,QAAxB;AAAmC,WAAnF,CAAjB;AACD,SAFD,MAEO;AACL,cAAI,SAAJ,IAAiB,EAAjB;AACD;AACD,eAAO,GAAP;AACD,OARS,EAQP,EARO,CAAV;AASD;;;0CAE4B;AAC3B,UAAI,SAAS,UAAb;AACA,sBAAgB,MAAM,UAAN,GAAmB,MAAnB,CAA0B,UAAC,GAAD,EAAM,SAAN,EAAoB;AAC5D,YAAI,WAAW,SAAS,SAAT,EAAoB,OAApB,EAAf;AACA,mBAAW,SAAS,GAAT,CAAa,UAAC,IAAD,EAAO,CAAP,EAAa;AACnC,cAAI,SAAS,MAAT,GAAkB,CAAlB,GAAsB,CAA1B;AACA,cAAI,mBAAmB,IAAvB,EAA6B;AAC3B,mBAAO,MAAP;AACD,WAFD,MAEO,IAAI,UAAU,IAAV,CAAe,IAAf,CAAJ,EAA0B;AAAA;AAC/B,kBAAI,WAAW,KAAK,KAAL,CAAW,SAAX,EAAsB,CAAtB,EAAyB,KAAzB,CAA+B,GAA/B,EAAoC,GAApC,CAAwC;AAAA,uBAAK,CAAC,CAAN;AAAA,eAAxC,CAAf;AACA;AAAA,mBAAO,OAAO,MAAP,CAAc,UAAC,CAAD,EAAI,CAAJ,EAAU;AAAE,yBAAO,SAAS,OAAT,CAAiB,CAAjB,IAAsB,CAA7B;AAAiC,iBAA3D;AAAP;AAF+B;;AAAA;AAGhC,WAHM,MAGA,IAAI,WAAW,IAAX,CAAgB,IAAhB,CAAJ,EAA2B;AAChC,mBAAO,KAAK,KAAL,CAAW,UAAX,EAAuB,CAAvB,EAA0B,KAA1B,CAAgC,GAAhC,EAAqC,GAArC,CAAyC;AAAA,qBAAK,CAAC,CAAN;AAAA,aAAzC,EAAkD,MAAlD,CAAyD,UAAC,CAAD,EAAO;AACrE,qBAAO,KAAK,CAAL,IAAU,IAAI,OAAO,MAA5B;AACD,aAFM,EAEJ,GAFI,CAEA;AAAA,qBAAK,OAAO,CAAP,CAAL;AAAA,aAFA,CAAP;AAGD;AACF,SAZU,CAAX;AAaA,mBAAW,0BAAE,QAAF,EAAY,OAAZ,EAAX;AACA,YAAI,SAAJ,IAAkB,SAAS,MAAT,GAAkB,CAAnB,GAAwB,QAAxB,GAAmC,MAApD;AACA,eAAO,GAAP;AACD,OAlBe,EAkBb,EAlBa,CAAhB;AAmBD;;;iCAEmB;AAClB,eAAS,EAAT;AACA,UAAI,sBAAO,wBAAP,CAAJ,EAAsC;AACpC,2BAAmB,OAAnB,CAA2B,UAAC,KAAD,EAAW;AACpC,gBAAM,QAAN,CAAe,KAAf;AACD,SAFD;AAGD;AACD,YAAM,WAAN,CAAkB,CAAC,SAAD,EAAe,SAAf,aAAlB,EAAsD,UAAC,QAAD,EAAW,EAAX,EAAe,EAAf,EAAmB,IAAnB,EAA4B;AAChF,eAAQ,eAAe,QAAhB,IAA8B,KAAK,KAAL,CAAW,GAAX,MAAoB,QAAzD;AACD,OAFD,EAEG,GAFH,CAEO,UAAC,MAAD,EAAY;AACjB,eAAQ,OAAO,MAAP,KAAkB,UAAnB,GAAiC,IAAI,MAAJ,EAAjC,GAAgD,MAAvD;AACD,OAJD,EAIG,OAJH,CAIW,UAAC,KAAD,EAAW;AACpB,cAAM,QAAN,CAAe,KAAf;AACD,OAND;AAOA,YAAM,aAAN;AACA,YAAM,mBAAN;AACD;;;AAED,iBAAY,IAAZ,EAAkB,KAAlB,EAAsF;AAAA,qEAAJ,EAAI;;AAAA,QAA3D,eAA2D,QAA3D,eAA2D;AAAA,QAA1C,eAA0C,QAA1C,eAA0C;AAAA,QAAzB,gBAAyB,QAAzB,gBAAyB;;AAAA;;AACpF,sBAAkB,MAAM,MAAN,CAAa,eAAb,EAA8B,QAA9B,EAAwC,CAAxC,CAAlB;AACA,sBAAkB,kBAAkB,MAAM,SAAN,CAAgB,eAAhB,CAAlB,GACd,MAAM,SAAN,CAAgB,WAAhB,EAA6B,iBAA7B,CADJ;AAEA,uBAAmB,oBAAoB,EAAvC;AACA,SAAK,cAAL,CAAoB,MAApB,EAA4B,IAA5B;AACA,SAAK,aAAL,CAAmB,OAAnB,EAA4B,YAAM;AAAE,aAAO,MAAM,SAAN,CAAgB,KAAhB,CAAP;AAAgC,KAApE;AACA,SAAK,aAAL,CAAmB,UAAnB,EAA+B,eAA/B;AACA,SAAK,aAAL,CAAmB,iBAAnB,EAAsC,eAAtC;AACA,SAAK,aAAL,CAAmB,WAAnB,EAAgC,gBAAhC;AACA,SAAK,cAAL,CAAoB,gBAApB,EAAsC,YAAM;AAC1C,aAAO,sBAAO,sBAAP,EAA+B,IAA/B,KAAwC,iCAAgB,IAAhB,sBAAuC,IAAvC,CAA/C;AACD,KAFD;AAGA,SAAK,cAAL,CAAoB,iBAApB,EAAuC,YAAM;AAAE,aAAO,QAAQ,IAAR,CAAP;AAAuB,KAAtE;AACA,SAAK,cAAL,CAAoB,eAApB,EAAqC,YAAM;AAAE,aAAO,cAAc,IAAd,CAAP;AAA6B,KAA1E;AACA,SAAK,aAAL,CAAmB,iBAAnB,EAAsC,CAAtC;AACA,SAAK,aAAL,CAAmB,cAAnB,EAAmC,KAAnC;AACA,SAAK,aAAL,CAAmB,cAAnB,EAAmC,CAAnC;AACA,SAAK,aAAL,CAAmB,SAAnB,EAA8B,IAA9B;AACA,SAAK,aAAL,CAAmB,QAAnB,EAA6B,KAA7B;AACA,SAAK,aAAL,CAAmB,eAAnB,EAAoC,EAApC;AACA,SAAK,aAAL,CAAmB,kBAAnB,EAAuC,GAAvC;AACA,SAAK,aAAL,CAAmB,eAAnB,EAAoC,KAApC;AACA,SAAK,aAAL,CAAmB,mBAAnB,EAAwC,EAAxC;AACA,SAAK,aAAL,CAAmB,cAAnB,EAAmC,CAAnC;AACA,SAAK,aAAL,CAAmB,aAAnB,EAAkC,KAAK,IAAL,GAAY,IAA9C;AACA,SAAK,aAAL,CAAmB,cAAnB,EAAmC,CAAnC;AACA,SAAK,aAAL,CAAmB,gBAAnB,EAAqC,uBAArC;AACA,SAAK,aAAL,CAAmB,gBAAnB,EAAqC,IAArC;AACA,SAAK,aAAL,CAAmB,WAAnB,EAAgC,KAAhC;AACA,QAAM,UAAU,MAAM,cAAN,CAAqB,QAAQ,qBAAR,CAArB,CAAhB;AACA,SAAK,aAAL,CAAmB,yBAAnB,EAA8C,YAAM;AAAE,aAAO,QAAQ,UAAR,EAAP;AAA8B,KAApF;AACA,SAAK,cAAL,CAAoB,aAApB,EAAmC,YAAM;AACvC,aAAO,0BAAE,YAAY,WAAd,EAA2B,SAA3B,CAAqC,UAAC,YAAD,EAAe,GAAf,EAAuB;AACjE,eAAO,iCAAgB,IAAhB,qBAAoC,GAApC,EAA2C,uCAAsB,GAAtB,EAA6B,YAA7B,CAA3C,CAAP;AACD,OAFM,CAAP;AAGD,KAJD;AAKA,SAAK,aAAL,CAAmB,oBAAnB,EAAyC,4BAAzC;AACA,SAAK,aAAL,CAAmB,WAAnB,EAAgC,GAAhC;AACA,SAAK,aAAL,CAAmB,WAAnB,EAAgC,IAAhC;AACA,SAAK,aAAL,CAAmB,aAAnB,EAAkC,GAAlC;AACA,SAAK,aAAL,CAAmB,cAAnB,EAAmC,CAAnC;AACA,SAAK,aAAL,CAAmB,gBAAnB,EAAqC,EAArC;AACA,SAAK,cAAL,CAAoB,YAApB,EAAkC,YAAM;AACtC,aAAO,IAAI,IAAJ,CAAS,iCAAgB,IAAhB,kBAAmC,sBAAO,kBAAP,EAA2B,IAAI,IAAJ,EAA3B,CAAnC,CAAT,CAAP;AACD,KAFD;AAGD;;;;kCAEa,I,EAAM,G,EAAK;AAAA;;AACvB,aAAO,cAAP,CAAsB,IAAtB,EAA4B,IAA5B,EAAkC;AAChC,aAAK,eAAM;AACT,iBAAO,iCAAgB,MAAK,IAArB,SAA6B,IAA7B,EACL,iCAAgB,IAAhB,EAAyB,OAAO,GAAP,KAAe,UAAhB,GAA8B,KAA9B,GAAsC,GAA9D,CADK,CAAP;AAED,SAJ+B;AAKhC,sBAAc;AALkB,OAAlC;AAOD;;;mCAEc,I,EAAM,K,EAAO;AAC1B,UAAI,OAAO,KAAP,KAAiB,UAArB,EAAiC;AAC/B,eAAO,cAAP,CAAsB,IAAtB,EAA4B,IAA5B,EAAkC;AAChC,eAAK,KAD2B;AAEhC,wBAAc;AAFkB,SAAlC;AAID,OALD,MAKO;AACL,eAAO,cAAP,CAAsB,IAAtB,EAA4B,IAA5B,EAAkC;AAChC,iBAAO,KADyB;AAEhC,wBAAc;AAFkB,SAAlC;AAID;AACF;;;2BAEM;AAAA;;AACL,UAAI,QAAQ;AACV,cAAM,KAAK,IADD;AAEV,eAAO,KAAK,KAFF;AAGV,yBAAiB,KAAK,eAHZ;AAIV,mBAAW,KAAK,SAJN;AAKV,mBAAW,KAAK,SALN;AAMV,gBAAQ,KAAK,MANH;AAOV,wBAAgB,KAAK,cAPX;AAQV,wBAAgB,KAAK,cARX;AASV,wBAAgB,KAAK,cATX;AAUV,uBAAe,KAAK,aAVV;AAWV,0BAAkB,KAAK,gBAXb;AAYV,uBAAe,KAAK,aAZV;AAaV,2BAAmB,KAAK,iBAbd;AAcV,sBAAc,KAAK,YAdT;AAeV,qBAAa,KAAK,WAfR;AAgBV,sBAAc,KAAK,YAhBT;AAiBV,wBAAgB,KAAK,cAjBX;AAkBV,4BAAoB,KAAK,kBAlBf;AAmBV,iCAAyB,KAAK,uBAnBpB;AAoBV,mBAAW,KAAK,SApBN;AAqBV,mBAAW,KAAK,SArBN;AAsBV,yBAAiB,KAAK,eAtBZ;AAuBV,uBAAe,KAAK,aAvBV;AAwBV,oBAAY,KAAK,UAAL,CAAgB,WAAhB,EAxBF;AAyBV,qBAAa,KAAK,WAzBR;AA0BV,sBAAc,KAAK;AA1BT,OAAZ;AA4BA,WAAK,gBAAL,GAAwB,OAAxB,CAAgC,UAAC,KAAD,EAAW;AACzC,cAAM,KAAN,IAAe,OAAK,KAAL,CAAf;AACD,OAFD;AAGA,aAAO,KAAP;AACD;;;uCAEkB;AACjB,aAAO,EAAP;AACD;;;6CAEwB,U,EAAY;AACnC,aAAO,0BAAE,KAAK,uBAAP,EAAgC,QAAhC,CAAyC,UAAzC,CAAP;AACD;;;wCAEmB,Q,EAAU;AAC5B,aAAO,0BAAE,KAAK,kBAAP,EAA2B,QAA3B,CAAoC,QAApC,CAAP;AACD;;;gCAEW;AACV,aAAO,EAAP;AACD;;;mCAEc;AACb,aAAO,EAAP;AACD;;;;;;;YAEsB,G,SAAA,G;YAAK,I,SAAA,I;YAAM,M,SAAA,M;YAAQ,K,SAAA,K;YAAO,iB,SAAA,iB;YACzC,I,EAAM,O,EAAS,I,EAAM,Q,EA6BvB,G;;;;;AA7BE,oB,GAAkC,M,CAAlC,I;AAAM,uB,GAA4B,M,CAA5B,O;AAAS,oB,GAAmB,M,CAAnB,I;AAAM,wB,GAAa,M,CAAb,Q;;AAC3B,uBAAO,QAAQ,EAAf;AACA,0BAAU,WAAW,EAArB;AACA,uBAAO,QAAQ,EAAf;AACA,2BAAW,YAAY,EAAvB;;sBACI,KAAK,MAAL,GAAc,KAAK,a;;;;;iDACd,QAAQ,MAAR,CAAe,IAAI,KAAJ,CAAU,MAAM,SAAN,CAAgB,kBAAhB,CAAV,CAAf,C;;;sBAEL,QAAQ,MAAR,GAAiB,KAAK,gB;;;;;iDACjB,QAAQ,MAAR,CAAe,IAAI,KAAJ,CAAU,MAAM,SAAN,CAAgB,qBAAhB,CAAV,CAAf,C;;;sBAEL,KAAK,MAAL,GAAc,KAAK,kB;;;;;iDACd,QAAQ,MAAR,CAAe,IAAI,KAAJ,CAAU,MAAM,SAAN,CAAgB,qBAAhB,CAAV,CAAf,C;;;sBAEL,SAAS,MAAT,GAAkB,KAAK,iB;;;;;iDAClB,QAAQ,MAAR,CAAe,IAAI,KAAJ,CAAU,MAAM,SAAN,CAAgB,sBAAhB,CAAV,CAAf,C;;;sBAEL,iBAAiB,IAAjB,IAAyB,eAAe,I;;;;;;;;sBAGxC,mBAAmB,IAAnB,IAA2B,KAAK,YAAhC,IAAgD,MAAM,MAAN,IAAgB,C;;;;;iDAC3D,QAAQ,MAAR,CAAe,IAAI,KAAJ,CAAU,MAAM,SAAN,CAAgB,qDAAhB,CAAV,CAAf,C;;;sBAEL,KAAK,MAAL,IAAe,CAAf,IAAqB,MAAM,MAAN,GAAe,iBAAhB,IAAsC,C;;;;;iDACrD,QAAQ,MAAR,CAAe,IAAI,KAAJ,CAAU,MAAM,SAAN,CAAgB,mCAAhB,CAAV,CAAf,C;;;sBAEJ,MAAM,MAAN,GAAe,iBAAhB,GAAqC,KAAK,Y;;;;;iDACrC,QAAQ,MAAR,CAAe,IAAI,KAAJ,CAAU,MAAM,SAAN,CAAgB,gBAAhB,CAAV,CAAf,C;;;AAEL,mB,GAAM,MAAM,MAAN,CAAa,UAAC,GAAD,EAAM,IAAN,EAAe;AACpC,sBAAI,GAAJ,EAAS;AACP,2BAAO,GAAP;AACD;AACD,sBAAI,KAAK,IAAL,GAAY,OAAK,WAArB,EAAkC;AAChC,2BAAO,MAAM,SAAN,CAAgB,iBAAhB,CAAP;AACD;AACD,sBAAI,OAAK,kBAAL,CAAwB,OAAxB,CAAgC,KAAK,QAArC,IAAiD,CAArD,EAAwD;AACtD,2BAAO,MAAM,SAAN,CAAgB,4BAAhB,CAAP;AACD;AACF,iBAVS,EAUP,EAVO,C;;qBAWN,G;;;;;iDACK,QAAQ,MAAR,CAAe,GAAf,C;;;;;;;;;;;;;;;;;;;4EAIS,G,EAAK,M,EAAQ,K,EAAO,O;;;;;kDAC/B,UAAU,QAAQ,SAAlB,GAA8B,I;;;;;;;;;;;;;;;;;;;4EAGlB,U,EAAY,S;;;;;;;;;;;;;;;;;;;;;;;4EAIb,U;;;;;;;;;;;;;;;;;;;;;;;4EAIE,U;;;;;;;;;;;;;;;;;;;;;;;4EAIL,I;;;;;AACf,qBAAK,UAAL,GAAkB,KAAK,OAAvB;AACA,qBAAK,IAAL,GAAa,KAAK,MAAL,KAAgB,KAAK,YAAlC;AACA,oBAAI,KAAK,OAAL,CAAa,YAAjB,EAA+B;AAC7B,uBAAK,QAAL,GAAgB,KAAK,gBAAL,CAAsB,KAAK,IAAL,CAAU,QAAhC,CAAhB;AACD;AACD,uBAAO,KAAK,IAAL,CAAU,EAAjB;AACA,uBAAO,KAAK,IAAL,CAAU,QAAjB;AACA,uBAAO,KAAK,IAAL,CAAU,QAAjB;AACA,oBAAI,CAAC,KAAK,WAAL,CAAiB,WAAtB,EAAmC;AACjC,uBAAK,WAAL,CAAiB,WAAjB,GAA+B,iBAA/B;AACD;kDACM,I;;;;;;;;;;;;;;;;;;qCAGQ,M,EAAQ;AACvB,aAAO,MAAM,MAAM,MAAN,CAAa,KAAb,EAAoB,SAAS,sBAAO,mBAAP,CAA7B,EAA0D,QAA1D,EAAoE,MAApE,CAA2E,CAA3E,EAA8E,EAA9E,CAAb;AACD;;;;;;kBAzRkB,K","file":"boards/board.js","sourcesContent":["import _ from 'underscore';\nimport FSSync from 'fs';\n\nimport config from '../helpers/config';\nimport Logger from '../helpers/logger';\nimport * as Permissions from '../helpers/permissions';\nimport * as Tools from '../helpers/tools';\n\nconst RX_EXCEPT = /^#include\\s+except(\\((\\d+(\\,\\d+)*)\\))$/;\nconst RX_SEVERAL = /^#include\\s+(\\d+(\\,\\d+)*)$/;\nconst DEFAULT_SUPPORTED_FILE_TYPES = ['application/ogg', 'application/pdf', 'audio/mpeg', 'audio/ogg', 'audio/wav',\n  'image/gif', 'image/jpeg', 'image/png', 'video/mp4', 'video/ogg', 'video/webm'];\nconst MARKUP_ELEMENTS = ['BOLD', 'ITALICS', 'STRIKED_OUT', 'UNDERLINED', 'SPOILER', 'QUOTATION', 'UNORDERED_LIST',\n  'ORDERED_LIST', 'LIST_ITEM', 'SUBSCRIPT', 'SUPERSCRIPT', 'URL', 'CODE', 'LATEX', 'INLINE_LATEX'];\nconst DEFAULT_MARKUP_ELEMENTS = MARKUP_ELEMENTS.slice(0, -3);\n\nlet boards = {};\nlet banners = {};\nlet postFormRules = {};\n\nfunction getRules(boardName) {\n  let fileName = `${__dirname}/../misc/rules/rules${(boardName ? ('.' + boardName) : '')}.txt`;\n  try {\n    if (!FSSync.existsSync(fileName)) {\n      return [];\n    }\n    var data = FSSync.readFileSync(fileName, 'utf8');\n    if (!data) {\n      return [];\n    }\n    return data.split(/\\r*\\n+/gi).filter(rule => !!rule);\n  } catch (err) {\n    Logger.error(err.stack || err);\n    return [];\n  }\n}\n\nfunction getBoards(includeHidden) {\n  includeHidden = (includeHidden || (typeof includeHidden === 'undefined'));\n  return _(boards).toArray().sort((b1, b2) => { return b1.name.localeCompare(b2); }).filter((board) => {\n    return board.enabled && (includeHidden || board.hidden);\n  });\n}\n\nfunction getDefaultBoards() {\n  let prBoard = new Board('pr', Tools.translate.noop('/pr/ogramming', 'boardTitle'));\n  prBoard.defineSetting('markupElements', MARKUP_ELEMENTS);\n  return [\n    new Board('3dpd', Tools.translate.noop('3D pron', 'boardTitle')),\n    new Board('a', Tools.translate.noop('/a/nime', 'boardTitle'),\n      { defaultUserName: Tools.translate.noop('Kamina', 'defaultUserName') }),\n    new Board('b', Tools.translate.noop('/b/rotherhood', 'boardTitle')),\n    new Board('d', Tools.translate.noop('Board /d/iscussion', 'boardTitle')),\n    new Board('h', Tools.translate.noop('/h/entai', 'boardTitle')),\n    prBoard,\n    new Board('rf', Tools.translate.noop('Refuge', 'boardTitle'),\n      { defaultUserName: Tools.translate.noop('Whiner', 'defaultUserName') }),\n    new Board('vg', Tools.translate.noop('Video games', 'boardTitle'),\n      { defaultUserName: Tools.translate.noop('PC Nobleman', 'defaultUserName') })\n  ];\n}\n\nexport default class Board {\n  static board(name) {\n    return boards[name];\n  }\n\n  static addBoard(board) {\n    boards[board.name] = board;\n  }\n\n  static boardInfos(includeHidden) {\n    return getBoards(includeHidden).map((board) => {\n      return {\n        name: board.name,\n        title: board.title\n      };\n    });\n  }\n\n  static boardNames(includeHidden) {\n    return getBoards(includeHidden).map(board => board.name);\n  }\n\n  static reloadBanners() {\n    banners = Board.boardNames().reduce((acc, boardName) => {\n      let path = `${__dirname}/../public/img/banners/${boardName}`;\n      if (FSSync.existsSync(path)) {\n        acc[boardName] = FSSync.readdirSync(path).filter((fileName) => { return '.gitignore' !== fileName; });\n      } else {\n        acc[boardName] = [];\n      }\n      return acc;\n    }, {});\n  }\n\n  static reloadPostFormRules() {\n    let common = getRules();\n    postFormRules = Board.boardNames().reduce((acc, boardName) => {\n      let specific = getRules(boardName).reverse();\n      specific = specific.map((rule, i) => {\n        i = specific.length - i - 1;\n        if ('#include all' === rule) {\n          return common;\n        } else if (RX_EXCEPT.test(rule)) {\n          let excluded = rule.match(RX_EXCEPT)[2].split(',').map(n => +n);\n          return common.filter((_, i) => { return excluded.indexOf(i) < 0; });\n        } else if (RX_SEVERAL.test(rule)) {\n          return rule.match(RX_SEVERAL)[1].split(',').map(n => +n).filter((n) => {\n            return n >= 0 && n < common.length;\n          }).map(n => common[n]);\n        }\n      });\n      specific = _(specific).flatten();\n      acc[boardName] = (specific.length > 0) ? specific : common;\n      return acc;\n    }, {});\n  }\n\n  static initialize() {\n    boards = {};\n    if (config('board.useDefaultBoards')) {\n      getDefaultBoards().forEach((board) => {\n        Board.addBoard(board);\n      });\n    }\n    Tools.loadPlugins([__dirname, `${__dirname}/custom`], (fileName, _1, _2, path) => {\n      return ('board.js' !== fileName) || (path.split('/') === 'custom');\n    }).map((plugin) => {\n      return (typeof plugin === 'function') ? new plugin() : plugin;\n    }).forEach((board) => {\n      Board.addBoard(board);\n    });\n    Board.reloadBanners();\n    Board.reloadPostFormRules();\n  }\n\n  constructor(name, title, { defaultPriority, defaultUserName, defaultGroupName } = {}) {\n    defaultPriority = Tools.option(defaultPriority, 'number', 0);\n    defaultUserName = defaultUserName ? Tools.translate(defaultUserName)\n      : Tools.translate('Anonymous', 'defaultUserName');\n    defaultGroupName = defaultGroupName || '';\n    this.defineProperty('name', name);\n    this.defineSetting('title', () => { return Tools.translate(title); });\n    this.defineSetting('property', defaultPriority);\n    this.defineSetting('defaultUserName', defaultUserName);\n    this.defineSetting('groupName', defaultGroupName);\n    this.defineProperty('captchaEnabled', () => {\n      return config('board.captchaEnabled', true) && config(`board.${name}.captchaEnabled`, true);\n    });\n    this.defineProperty('bannerFileNames', () => { return banners[name]; });\n    this.defineProperty('postFormRules', () => { return postFormRules[name]; });\n    this.defineSetting('skippedGetOrder', 0);\n    this.defineSetting('opModeration', false);\n    this.defineSetting('captchaQuota', 0);\n    this.defineSetting('enabled', true);\n    this.defineSetting('hidden', false);\n    this.defineSetting('maxNameLength', 50);\n    this.defineSetting('maxSubjectLength', 150);\n    this.defineSetting('maxTextLength', 15000);\n    this.defineSetting('maxPasswordLength', 50);\n    this.defineSetting('maxFileCount', 1);\n    this.defineSetting('maxFileSize', 10 * 1024 * 1024);\n    this.defineSetting('maxLastPosts', 3);\n    this.defineSetting('markupElements', DEFAULT_MARKUP_ELEMENTS);\n    this.defineSetting('postingEnabled', true);\n    this.defineSetting('showWhois', false);\n    const Captcha = Tools.requireWrapper(require('../captchas/captcha'));\n    this.defineSetting('supportedCaptchaEngines', () => { return Captcha.captchaIDs(); });\n    this.defineProperty('permissions', () => {\n      return _(Permissions.PERMISSIONS).mapObject((defaultLevel, key) => {\n        return config(`board.${name}.permissions.${key}`, config(`permissions.${key}`, defaultLevel));\n      });\n    });\n    this.defineSetting('supportedFileTypes', DEFAULT_SUPPORTED_FILE_TYPES);\n    this.defineSetting('bumpLimit', 500);\n    this.defineSetting('postLimit', 1000);\n    this.defineSetting('threadLimit', 200);\n    this.defineSetting('archiveLimit', 0);\n    this.defineSetting('threadsPerPage', 20);\n    this.defineProperty('launchDate', () => {\n      return new Date(config(`board.${name}.launchDate`, config('board.launchDate', new Date())));\n    });\n  }\n\n  defineSetting(name, def) {\n    Object.defineProperty(this, name, {\n      get: () => {\n        return config(`board.${this.name}.${name}`,\n          config(`board.${name}`, (typeof def === 'function') ? def() : def));\n      },\n      configurable: true\n    });\n  }\n\n  defineProperty(name, value) {\n    if (typeof value === 'function') {\n      Object.defineProperty(this, name, {\n        get: value,\n        configurable: true\n      });\n    } else {\n      Object.defineProperty(this, name, {\n        value: value,\n        configurable: true\n      });\n    }\n  }\n\n  info() {\n    let model = {\n      name: this.name,\n      title: this.title,\n      defaultUserName: this.defaultUserName,\n      groupName: this.groupName,\n      showWhois: this.showWhois,\n      hidden: this.hidden,\n      postingEnabled: this.postingEnabled,\n      captchaEnabled: this.captchaEnabled,\n      maxEmailLength: this.maxEmailLength,\n      maxNameLength: this.maxNameLength,\n      maxSubjectLength: this.maxSubjectLength,\n      maxTextLength: this.maxTextLength,\n      maxPasswordLength: this.maxPasswordLength,\n      maxFileCount: this.maxFileCount,\n      maxFileSize: this.maxFileSize,\n      maxLastPosts: this.maxLastPosts,\n      markupElements: this.markupElements,\n      supportedFileTypes: this.supportedFileTypes,\n      supportedCaptchaEngines: this.supportedCaptchaEngines,\n      bumpLimit: this.bumpLimit,\n      postLimit: this.postLimit,\n      bannerFileNames: this.bannerFileNames,\n      postFormRules: this.postFormRules,\n      launchDate: this.launchDate.toISOString(),\n      permissions: this.permissions,\n      opModeration: this.opModeration\n    };\n    this.customInfoFields().forEach((field) => {\n      model[field] = this[field];\n    });\n    return model;\n  }\n\n  customInfoFields() {\n    return [];\n  }\n\n  isCaptchaEngineSupported(engineName) {\n    return _(this.supportedCaptchaEngines).contains(engineName);\n  }\n\n  isFileTypeSupported(fileType) {\n    return _(this.supportedFileTypes).contains(fileType);\n  }\n\n  apiRoutes() {\n    return [];\n  }\n\n  actionRoutes() {\n    return [];\n  }\n\n  async testParameters({ req, mode, fields, files, existingFileCount }) {\n    let { name, subject, text, password } = fields;\n    name = name || '';\n    subject = subject || '';\n    text = text || '';\n    password = password || '';\n    if (name.length > this.maxNameLength) {\n      return Promise.reject(new Error(Tools.translate('Name is too long')));\n    }\n    if (subject.length > this.maxSubjectLength) {\n      return Promise.reject(new Error(Tools.translate('Subject is too long')));\n    }\n    if (text.length > this.maxTextFieldLength) {\n      return Promise.reject(new Error(Tools.translate('Comment is too long')));\n    }\n    if (password.length > this.maxPasswordLength) {\n      return Promise.reject(new Error(Tools.translate('Password is too long')));\n    }\n    if ('markupText' === mode || 'editPost' === mode) {\n      return;\n    }\n    if ('createThread' === mode && this.maxFileCount && files.length <= 0) {\n      return Promise.reject(new Error(Tools.translate('Attempt to create a thread without attaching a file')));\n    }\n    if (text.length <= 0 && (files.length + existingFileCount) <= 0) {\n      return Promise.reject(new Error(Tools.translate('Both file and comment are missing')));\n    }\n    if ((files.length + existingFileCount) > this.maxFileCount) {\n      return Promise.reject(new Error(Tools.translate('Too many files')));\n    }\n    let err = files.reduce((err, file) => {\n      if (err) {\n        return err;\n      }\n      if (file.size > this.maxFileSize) {\n        return Tools.translate('File is too big');\n      }\n      if (this.supportedFileTypes.indexOf(file.mimeType) < 0) {\n        return Tools.translate('File type is not supported');\n      }\n    }, '');\n    if (err) {\n      return Promise.reject(err);\n    }\n  }\n\n  async postExtraData(req, fields, files, oldPost) {\n    return oldPost ? oldPost.extraData : null;\n  }\n\n  async storeExtraData(postNumber, extraData) {\n    //NOTE: Do nothing by default.\n  }\n\n  async loadExtraData(postNumber) {\n    //NOTE: Do nothing by default.\n  }\n\n  async removeExtraData(postNumber) {\n    //NOTE: Do nothing by default.\n  }\n\n  async renderPost(post) {\n    post.rawSubject = post.subject;\n    post.isOp = (post.number === post.threadNumber);\n    if (post.options.showTripcode) {\n      post.tripcode = this.generateTripcode(post.user.hashpass);\n    }\n    delete post.user.ip;\n    delete post.user.hashpass;\n    delete post.user.password;\n    if (!post.geolocation.countryName) {\n      post.geolocation.countryName = 'Unknown country';\n    }\n    return post;\n  }\n\n  generateTripcode(source) {\n    return '!' + Tools.crypto('md5', source + config('site.tripcodeSalt'), 'base64').substr(0, 10);\n  }\n}\n"],"sourceRoot":"/source/"}