{"version":3,"sources":["core/renderer.js"],"names":[],"mappings":"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","file":"core/renderer.js","sourcesContent":["import _ from 'underscore';\nimport browserify from 'browserify';\nimport DOT from 'dot';\nimport escapeHTML from 'escape-html';\nimport FS from 'q-io/fs';\nimport HTMLToText from 'html-to-text';\nimport merge from 'merge';\nimport micromatch from 'micromatch';\nimport moment from 'moment';\nimport UUID from 'uuid';\n\nimport * as Files from './files';\nimport Board from '../boards/board';\nimport * as MiscModel from '../models/misc';\nimport * as Cache from '../helpers/cache';\nimport config from '../helpers/config';\nimport Logger from '../helpers/logger';\nimport * as Tools from '../helpers/tools';\n\nconst TEMPLATES_SOURCE_PATH = `${__dirname}/../src/views`;\nconst TEMPLATES_PATH = `${__dirname}/../views`;\nconst TEMPLATES_INDEX_PATH = `${TEMPLATES_PATH}/index.js`;\nconst APP_PATH = __dirname.split('/').slice(0, -1).join('/');\nconst DOT_SETTINGS = {\n  evaluate: /\\{\\{([\\s\\S]+?)\\}\\}/g,\n  interpolate: /\\{\\{=([\\s\\S]+?)\\}\\}/g,\n  encode: /\\{\\{!([\\s\\S]+?)\\}\\}/g,\n  use: /\\{\\{#([\\s\\S]+?)\\}\\}/g,\n  define: /\\{\\{##\\s*([\\w\\.$]+)\\s*(\\:|=)([\\s\\S]+?)#\\}\\}/g,\n  conditional: /\\{\\{\\?(\\?)?\\s*([\\s\\S]*?)\\s*\\}\\}/g,\n  iterate: /\\{\\{~\\s*(?:\\}\\}|([\\s\\S]+?)\\s*\\:\\s*([\\w$]+)\\s*(?:\\:\\s*([\\w$]+))?\\s*\\}\\})/g,\n  varname: 'it',\n  strip: false,\n  append: true,\n  selfcontained: false\n};\nconst EXCLUDED_SOURCE_TEMPLATE_FILES = new Set(['index.js.template', '.gitignore']);\nconst ENCODE_HTML_SOURCE = DOT.encodeHTMLSource.toString();\nconst ILLEGAL_CHARACTERS_REGEXP = /[^a-zA-Z\\$_]/gi;\n\nlet templates = {};\n\nfunction escapedSelector(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/[!\"#$%&'()*+,.\\/:;<=>?@[\\\\\\]^`{|}~]/g, '-');\n}\n\nexport function render(templateName, model) {\n  let template = templates[templateName];\n  if (!template) {\n    Logger.error(Tools.translate('Invalid template: $[1]', '', templateName));\n    return '';\n  }\n  let baseModel = MiscModel.base();\n  baseModel.templateName = templateName;\n  let o = MiscModel.boards();\n  baseModel.boards = o.boards;\n  baseModel.boardGroups = o.boardGroups;\n  baseModel.banner = _(_(baseModel.boards.filter((board) => {\n    return board.bannerFileNames.length > 0;\n  }).map((board) => {\n    return board.bannerFileNames.map((fileName) => {\n      return {\n        boardName: board.name,\n        boardTitle: board.title,\n        fileName: fileName\n      };\n    });\n  })).flatten()).sample();\n  baseModel._ = _;\n  baseModel.compareRegisteredUserLevels = Tools.compareRegisteredUserLevels;\n  baseModel.isImageType = Files.isImageType;\n  baseModel.isAudioType = Files.isAudioType;\n  baseModel.isVideoType = Files.isVideoType;\n  baseModel.escaped = escapeHTML;\n  baseModel.escapedSelector = escapedSelector;\n  baseModel.translate = Tools.translate;\n  let timeOffset = config('site.timeOffset');\n  let locale = config('site.locale');\n  let format = config('site.dateFormat');\n  baseModel.formattedDate = (date) => {\n    return moment(date).utcOffset(timeOffset).locale(locale).format(format);\n  };\n  try {\n    return template(merge.recursive(baseModel, model || {}));\n  } catch (err) {\n    Logger.error(err.stack || err);\n    return '';\n  }\n}\n\nexport async function getRouterPaths(description) {\n  let controllers = Tools.requireWrapper(require('../controllers'));\n  let paths = await Tools.series(controllers.routers, async function(router) {\n    if (typeof router.paths !== 'function') {\n      return [];\n    }\n    return await router.paths(description);\n  }, true);\n  return _(paths).flatten().filter(path => !!path);\n}\n\nexport async function rerender(what) {\n  let controllers = Tools.requireWrapper(require('../controllers'));\n  let routers = await Tools.series(controllers.routers, async function(router) {\n    if (typeof router.paths !== 'function' || typeof router.render !== 'function') {\n      return;\n    }\n    let paths = await router.paths();\n    paths = micromatch(paths, what || '**');\n    if (paths.length <= 0) {\n      return;\n    }\n    return {\n      router: router,\n      paths: paths\n    };\n  }, true);\n  return await Tools.series(routers.filter(router => !!router), async function(router) {\n    await Tools.series(router.paths, async function(path) {\n      console.log(Tools.translate('Rendering $[1]…', '', path));\n      let result = await router.router.render(path);\n      return await Tools.series(result, async function(data, id) {\n        return await Cache.writeFile(id, data);\n      });\n    });\n  });\n}\n\nexport async function renderThread(thread) {\n  let board = Board.board(thread.boardName);\n  if (!board) {\n    return Promise.reject(new Error(Tools.translate('Invalid board')));\n  }\n  await Files.renderPostFileInfos(thread.opPost);\n  await board.renderPost(thread.opPost);\n  if (!thread.lastPosts) {\n    return;\n  }\n  await Tools.series(thread.lastPosts, async function(post) {\n    await Files.renderPostFileInfos(post);\n    await board.renderPost(post);\n  });\n}\n\nexport async function generateTemplatingJavaScriptFile() {\n  console.log('Generating templating JavaScript file…');\n  let models = JSON.stringify({\n    base: MiscModel.base(),\n    boards: MiscModel.boards(),\n    notFoundImageFileNames: MiscModel.notFoundImageFileNames(),\n    tr: MiscModel.translations()\n  });\n  let fileNames = await FS.listTree(TEMPLATES_PATH, (_, stat) => stat.isFile());\n  let templateNames = fileNames.filter((fileName) => {\n    return fileName.split('.').pop() === 'js' && 'index.js' !== fileName;\n  }).map(fileName => fileName.substr(__dirname.length + 1));\n  let template = await FS.read(`${TEMPLATES_INDEX_PATH}.template`);\n  await FS.write(TEMPLATES_INDEX_PATH, template.replace('{{models}}', models));\n  let string = '';\n  let stream = browserify({\n    entries: TEMPLATES_INDEX_PATH,\n    debug: false\n  });\n  templateNames.forEach(lib => stream.require(`./views/${lib}`));\n  stream = stream.bundle();\n  stream.on('data', (data) => { string += data; });\n  await new Promise((resolve, reject) => {\n    stream.on('end', resolve);\n    stream.on('error', reject);\n  });\n  string = string.split(APP_PATH).join('.');\n  await FS.write(`${__dirname}/../public/js/templating.js`, string);\n}\n\nexport async function generateCustomJavaScriptFile() {\n  console.log('Checking custom JavaScript file existence…');\n  let exists = await FS.exists(`${__dirname}/../public/js/custom.js`);\n  if (!exists) {\n    console.log('Creating dummy custom JavaScript file…');\n    return await Cache.writeFile('js/custom.js', '');\n  }\n}\n\nexport async function generateCustomCSSFiles() {\n  console.log('Checking custom CSS files existence…');\n  let list = await Tools.series(['combined', 'desktop', 'mobile'], async function(type) {\n    let exists = await FS.exists(`${__dirname}/../public/css/custom-base-${type}.css`);\n    return {\n      type: type,\n      exists: exists\n    };\n  }, true);\n  let types = list.filter(item => !item.exists).map(item => item.type);\n  if (types.length > 0) {\n    console.log('Creating dummy custom CSS file(s)…');\n    await Tools.series(types, async function(type) {\n      await Cache.writeFile(`css/custom-base-${type}.css`, '');\n    });\n  }\n}\n\nexport async function compileTemplates() {\n  console.log('Compiling templates…');\n  let list = await FS.list(TEMPLATES_PATH);\n  await Tools.series(list.filter(entry => !EXCLUDED_SOURCE_TEMPLATE_FILES.has(entry)), async function(entry) {\n    return await FS.removeTree(`${TEMPLATES_PATH}/${entry}`);\n  });\n  let fileNames = await FS.listTree(TEMPLATES_SOURCE_PATH, (_, stat) => stat.isFile());\n  fileNames = fileNames.map(fileName => fileName.substr(__dirname.length + 6));\n  let includes = await Tools.series(fileNames, async function(fileName) {\n    if (!/\\.def(\\.dot|\\.jst)?$/.test(fileName)) {\n      return;\n    }\n    let content = await FS.read(`${TEMPLATES_SOURCE_PATH}/${fileName}`);\n    return {\n      name: fileName.split('.').slice(0, -1).join('.'),\n      content: content\n    };\n  }, true);\n  includes = includes.filter(item => !!item).reduce((acc, item) => {\n    acc[item.name] = item.content;\n    return acc;\n  }, {});\n  await Tools.series(fileNames, async function(fileName) {\n    if (!/\\.jst(\\.dot|\\.def)?$/.test(fileName)) {\n      return;\n    }\n    let compiled = '(function(){';\n    let string = await FS.read(`${TEMPLATES_SOURCE_PATH}/${fileName}`);\n    let moduleName = fileName.split('.').shift().replace(ILLEGAL_CHARACTERS_REGEXP, '_');\n    compiled += DOT.template(string, DOT_SETTINGS, includes).toString().replace('anonymous', moduleName);\n    compiled += `var itself=${moduleName}, _encodeHTML=(${ENCODE_HTML_SOURCE}());`;\n    compiled += 'module.exports=itself;})()';\n    if (fileName.split('/').length > 1) {\n      await FS.makeTree(`${TEMPLATES_PATH}/${fileName.split('/').slice(0, -1).join('/')}`);\n    }\n    await FS.write(`${TEMPLATES_PATH}/${fileName.split('.').slice(0, -1).join('.')}.js`, compiled);\n  });\n}\n\nexport async function reloadTemplates() {\n  try {\n    let fileNames = await FS.listTree(TEMPLATES_PATH, (_1, stat) => stat.isFile());\n    templates = fileNames.filter((fileName) => {\n      return fileName.split('.').pop() === 'js' && fileName.split('/').pop() !== 'index.js';\n    }).map((fileName) => {\n      return fileName.substr(__dirname.length + 2).split('.').slice(0, -1).join('.');\n    }).reduce((acc, templateName) => {\n      let id = `../views/${templateName}.js`;\n      if (require.cache.hasOwnProperty(id)) {\n        delete require.cache[require.resolve(id)];\n      }\n      acc[templateName] = require(id);\n      return acc;\n    }, {});\n  } catch (err) {\n    Logger.error(err.stack || err);\n  }\n}\n\nexport function targetsFromString(string) {\n  if (!string || typeof string !== 'string') {\n    return {};\n  }\n  return string.split(/\\s+/).reduce((acc, part) => {\n    let [boardName, ...postNumbers] = part.split(':');\n    if (boardName) {\n      if (postNumbers.length > 0) {\n        acc[boardName] = postNumbers.map((postNumber) => {\n          return Tools.option(postNumber, 'number', 0, { test: Tools.testPostNumber })\n        }).filter(postNumber => !!postNumber);\n      } else {\n        acc[boardName] = '*';\n      }\n    }\n    return acc;\n  }, {});\n}\n\nexport function postingSpeedString(launchDate, lastPostNumber) {\n  launchDate = +launchDate;\n  if (isNaN(launchDate)) {\n    return '-';\n  }\n  function zeroSpeedString(nonZero) {\n    if (lastPostNumber && launchDate) {\n      return `1 ${nonZero}`;\n    } else {\n      return `0 ${Tools.translate('post(s) per hour.')}`;\n    }\n  }\n  function speedString(duptime) {\n    let ss = '' + (lastPostNumber / duptime).toFixed(1);\n    return (ss.split('.').pop() !== '0') ? ss : ss.split('.').shift();\n  }\n  let uptimeMsecs = _.now() - launchDate;\n  let duptime = uptimeMsecs / Tools.HOUR;\n  let uptime = Math.floor(duptime);\n  let shour = Tools.translate('post(s) per hour.');\n  if (!uptime) {\n    return zeroSpeedString(shour);\n  } else if (Math.floor(lastPostNumber / uptime) > 0) {\n    return `${speedString(duptime)} ${shour}`;\n  }\n  duptime /= 24;\n  uptime = Math.floor(duptime);\n  let sday = Tools.translate('post(s) per day.');\n  if (!uptime) {\n    return zeroSpeedString(sday);\n  } else if (Math.floor(lastPostNumber / uptime) > 0) {\n    return `${speedString(duptime)} ${sday}`;\n  }\n  duptime /= (365 / 12);\n  uptime = Math.floor(duptime);\n  let smonth = Tools.translate('post(s) per month.');\n  if (!uptime) {\n    return zeroSpeedString(smonth);\n  } else if (Math.floor(lastPostNumber / uptime) > 0) {\n    return `${speedString(duptime)} ${smonth}`;\n  }\n  duptime /= 12.0;\n  uptime = Math.floor(duptime);\n  let syear = Tools.translate('post(s) per year.');\n  if (!uptime) {\n    return zeroSpeedString(syear);\n  } else if (Math.floor(lastPostNumber / uptime) > 0) {\n    return `${speedString(duptime)} ${syear}`;\n  }\n  return `0 ${syear}`;\n}\n\nexport function plainText(text, { brToNewline } = {}) {\n  if (!text) {\n    return '';\n  }\n  text = '' + text;\n  let id = UUID.v4();\n  if (brToNewline) {\n    text = text.replace(/<br \\/>/g, id);\n  } else {\n    text = text.replace(/<br \\/>/g, ' ');\n  }\n  text = HTMLToText.fromString(text, {\n    wordwrap: null,\n    linkHrefBaseUrl: `${config('site.protocol')}://${config('site.domain')}`,\n    hideLinkHrefIfSameAsText: true,\n    ignoreImages: true\n  });\n  if (brToNewline) {\n    text = text.split(id).join('\\n');\n  }\n  return text;\n}\n\nexport function toHTML(text, replaceSpaces) {\n  text = escapeHTML(text).split('\\n').join('<br />');\n  if (replaceSpaces) {\n    text = text.split(' ').join('&nbsp;');\n  }\n  return text;\n}\n"],"sourceRoot":"/source/"}