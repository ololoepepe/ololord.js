{"version":3,"sources":["captchas/google-recaptcha-v1.js"],"names":[],"mappings":";;AAEA;;;;AACA;;;;AACA;;IAAY,K;;;;;;AAJZ,IAAI,OAAO,QAAQ,WAAR,CAAX;;AAMA,IAAI,kBAAkB,sBAAY,qBAAZ,EAAmC,MAAM,SAAN,CAAgB,IAAhB,CAAqB,qBAArB,CAAnC,CAAtB;;AAEA,gBAAgB,YAAhB,GAA+B,UAAS,EAAT,EAAa,MAAb,EAAqB;AAChD,QAAI,YAAY,OAAO,yBAAvB;AACA,QAAI,WAAW,OAAO,wBAAtB;AACA,QAAI,CAAC,SAAL,EACI,OAAO,QAAQ,MAAR,CAAe,MAAM,SAAN,CAAgB,4BAAhB,CAAf,CAAP;AACJ,QAAI,CAAC,QAAL,EACI,OAAO,QAAQ,MAAR,CAAe,MAAM,SAAN,CAAgB,kBAAhB,CAAf,CAAP;AACJ,QAAI,QAAQ,gBAAc,KAAK,UAAnB,kBAA0C,EAA1C,mBAA0D,mBAAmB,SAAnB,CAA1D,mBACO,mBAAmB,QAAnB,CADP,CAAZ;AAEA,QAAI,MAAM,iDAAiD,KAA3D;AACA,WAAO,KAAK,OAAL,CAAa;AAChB,aAAK,GADW;AAEhB,iBAAU,KAAK,MAAM;AAFL,KAAb,EAGJ,IAHI,CAGC,UAAS,QAAT,EAAmB;AACvB,YAAI,SAAS,MAAT,IAAmB,GAAvB,EACI,OAAO,QAAQ,MAAR,CAAe,MAAM,SAAN,CAAgB,yBAAhB,CAAf,CAAP;AACJ,eAAO,SAAS,IAAT,CAAc,IAAd,CAAmB,MAAnB,CAAP;AACH,KAPM,EAOJ,IAPI,CAOC,UAAS,IAAT,EAAe;AACnB,YAAI,SAAS,KAAK,QAAL,EAAb;AACA,YAAI,OAAO,OAAP,CAAe,MAAf,EAAuB,EAAvB,KAA8B,MAAlC,EACI,OAAO,QAAQ,MAAR,CAAe,MAAM,SAAN,CAAgB,iBAAhB,CAAf,CAAP;AACJ,eAAO,QAAQ,OAAR,EAAP;AACH,KAZM,CAAP;AAaH,CAvBD;;AAyBA,OAAO,OAAP,GAAiB,eAAjB","file":"captchas/google-recaptcha-v1.js","sourcesContent":["var HTTP = require(\"q-io/http\");\n\nimport Captcha from './captcha';\nimport config from '../helpers/config';\nimport * as Tools from '../helpers/tools';\n\nvar googleRecaptcha = new Captcha(\"google-recaptcha-v1\", Tools.translate.noop(\"Google reCAPTCHA v1\"));\n\ngoogleRecaptcha.checkCaptcha = function(ip, fields) {\n    var challenge = fields.recaptcha_challenge_field;\n    var response = fields.recaptcha_response_field;\n    if (!challenge)\n        return Promise.reject(Tools.translate(\"Captcha challenge is empty\"));\n    if (!response)\n        return Promise.reject(Tools.translate(\"Captcha is empty\"));\n    var query = `privatekey=${this.privateKey}&remoteip=${ip}&challenge=${encodeURIComponent(challenge)}`\n        + `&response=${encodeURIComponent(response)}`;\n    var url = \"https://www.google.com/recaptcha/api/verify?\" + query;\n    return HTTP.request({\n        url: url,\n        timeout: (15 * Tools.Second)\n    }).then(function(response) {\n        if (response.status != 200)\n            return Promise.reject(Tools.translate(\"Failed to check captcha\"));\n        return response.body.read(\"utf8\");\n    }).then(function(data) {\n        var result = data.toString();\n        if (result.replace(\"true\", \"\") == result)\n            return Promise.reject(Tools.translate(\"Invalid captcha\"));\n        return Promise.resolve();\n    });\n};\n\nmodule.exports = googleRecaptcha;\n"],"sourceRoot":"/source/"}