{"version":3,"sources":["storage/sql-client-factory.js"],"names":[],"mappings":";;;;;;kBAoBe,UAAS,IAAT,EAAe;AAC5B,MAAI,CAAC,IAAL,EAAW;AACT,WAAO,MAAP;AACD;AACD,MAAI,SAAS,QAAQ,GAAR,CAAY,IAAZ,CAAb;AACA,MAAI,CAAC,MAAL,EAAa;AACX,aAAS,aAAa,IAAb,CAAT;AACA,YAAQ,GAAR,CAAY,IAAZ,EAAkB,MAAlB;AACD;AACD,SAAO,MAAP;AACD,C;;AA9BD;;;;AACA;;;;AAEA;;;;AACA;;IAAY,K;;;;;;AAEZ,IAAI,UAAU,IAAI,GAAJ,EAAd;;AAEA,SAAS,YAAT,CAAsB,IAAtB,EAA4B;AAC1B,SAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACtC,QAAI,KAAK,IAAI,iBAAQ,QAAZ,CAAwB,SAAxB,mBAA+C,IAA/C,cAA8D,UAAC,GAAD,EAAS;AAC9E,UAAI,GAAJ,EAAS;AACP,eAAO,GAAP;AACA;AACD;AACD,cAAQ,EAAR;AACD,KANQ,CAAT;AAOD,GARM,CAAP;AASD","file":"storage/sql-client-factory.js","sourcesContent":["import FS from 'q-io/fs';\nimport SQLite3 from 'sqlite3';\n\nimport Logger from '../helpers/logger';\nimport * as Tools from '../helpers/tools';\n\nlet clients = new Map();\n\nfunction createClient(name) {\n  return new Promise((resolve, reject) => {\n    let db = new SQLite3.Database(`${__dirname}/../sqlite/${name}.sqlite`, (err) => {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(db);\n    });\n  });\n}\n\nexport default function(name) {\n  if (!name) {\n    name = 'main';\n  }\n  let client = clients.get(name);\n  if (!client) {\n    client = createClient(name);\n    clients.set(name, client);\n  }\n  return client;\n}\n"],"sourceRoot":"/source/"}